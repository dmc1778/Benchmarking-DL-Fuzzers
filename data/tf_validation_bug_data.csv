https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gjh7-xx4r-x345,"
          Segfault in array_ops.upper_bound
        ",array_ops.upper_bound  causes a segfault when not given a rank 2 tensor.,['< 2.13.0'],['2.12.0']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5w96-866f-6rm8,"
          FPE in TFLite in conv kernel
        ",Constructing a tflite model with a paramater  filter_input_channel  of less than 1 gives a FPE.,['< 2.12.0'],"['2.12.0, 2.11.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f49c-87jh-g47q,"
          Double free in Fractional(Max/Avg)Pool
        ","nn_ops.fractional_avg_pool_v2  and  nn_ops.fractional_max_pool_v2  require the first and fourth elements of their parameter  pooling_ratio  to be equal to 1.0, as pooling on batch and channel dimensions is not supported.",['< 2.12.0'],"['2.12.0, 2.11.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6wfh-89q8-44jq,"
          Null dereference on ParallelConcat with XLA
        ","When running with XLA,  tf.raw_ops.ParallelConcat  segfaults with a nullptr dereference when given a parameter  shape  with rank that is not greater than zero.",['< 2.12.0'],"['2.12.0, 2.11.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7x4v-9gxg-9hwj,"
          Segfault in Bincount with XLA
        ","When running with XLA,  tf.raw_ops.Bincount  segfaults when given a parameter  weights  that is neither the same shape as parameter  arr  nor a length-0 tensor.",['< 2.12.0'],"['2.12.0, 2.11.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gf97-q72m-7579,"
          NPE in RandomShuffle with XLA enable 
        ",NPE in RandomShuffle with XLA enable,['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-647v-r7qq-24fh,"
          FPE in TensorListSplit with XLA 
        ",FPE in TensorListSplit with XLA,['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-94mm-g2mv-8p7r,"
          NPE in LookupTableImportV2
        ",The function  tf.raw_ops.LookupTableImportV2  cannot handle scalars in the  values  parameter and gives an NPE.,['< 2.12.0'],"['2.12.0, 2.11.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j5w9-hmfh-4cr6,"
          Segmentation fault in tfg-translate 
        ","Out-of-bounds access due to mismatched integer type sizes in ValueMap::Manager::GetValueOrCreatePlaceholder. Bug with tfg-translate call to InitMlir. The problem happens with generic functions, as it is already handled for non-generic functions. This is because they, unlike non-generic functions, are using the ""old importer"". A better long-term solution may be to have the ""new importer"" handle generic functions.",['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-49rq-hwc3-x77w,"
          NPE in QuantizedMatMulWithBiasAndDequantize
        ",NPE in QuantizedMatMulWithBiasAndDequantize with MKL enable,['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rcf8-g8jv-vg6p,"
          FPE in AvgPoolGrad with XLA
        ","If the stride and window size are not positive for  tf.raw_ops.AvgPoolGrad , it can give an FPE.",['< 2.12.0'],"['2.12.0, 2.11.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gw97-ff7c-9v96,"
          A heap out-of-buffer read vulnerability in the QuantizeAndDequantize operation
        ","Attackers using Tensorflow can exploit the vulnerability. They can access heap memory which is not in the control of user, leading to a crash or RCE. 
When axis is larger than the dim of input, c->Dim(input,axis) goes out of bound. 
Same problem occurs in the QuantizeAndDequantizeV2/V3/V4/V4Grad operations too.",['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fqm2-gh8w-gr68,"
          Segfault when opening multiframe gif
        ","Integer overflow occurs when 2^31 <= num_frames * height * width * channels < 2^32, for example Full HD screencast of at least 346 frames.",['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-558h-mq8x-7q9g,"
          NPE in SparseSparseMaximum
        ","When  SparseSparseMaximum  is given invalid sparse tensors as inputs, it can give an NPE.",['< 2.12.0'],"['2.12.0, 2.11.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f637-vh3r-vfh2,"
          FPE in AudioSpectrogram 
        ",version:2.11.0 //core/ops/audio_ops.cc:70,['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6hg6-5c2q-7rcr,"
          Heap-buffer-overflow in AvgPoolGrad 
        ",import,['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w,"
          NPE in TensorArrayConcatV2
        ","When ctx->step_containter() is a null ptr, the Lookup function will be executed with a null pointer.",['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw,"
          Integer overflow in EditDistance
        ","TFversion 2.11.0 //tensorflow/core/ops/array_ops.cc:1067 const Tensor* hypothesis_shape_t = c->input_tensor(2); std::vector dims(hypothesis_shape_t->NumElements() - 1); for (int i = 0; i < dims.size(); ++i) { dims[i] = c->MakeDim(std::max(h_values(i), t_values(i))); }",['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj,"
          Seg fault in `tf.raw_ops.Print`
        ","When the parameter  summarize  of  tf.raw_ops.Print  is zero, the new method  SummarizeArray<bool>  will reference to a nullptr, leading to a seg fault.",['< 2.12.0'],"['2.12.0, 2.11.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p,"
          OOB read in DynamicStitch
        ","If the parameter  indices  for  DynamicStitch  does not match the shape of the parameter  data , it can trigger an stack OOB read.",['< 2.12.0'],"['2.12.0, 2.11.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-68v3-g9cm-rmm6,"
          OOB Read in GRUBlockCellGrad
        ",Out of bounds read in GRUBlockCellGrad,['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fxgc-95xx-grvq,"
          Denial of Service in TensorFlow
        ","A malicious invalid input crashes a tensorflow model (Check Failed) and can be used to trigger a denial of service attack. 
To minimize the bug, we built a simple single-layer TensorFlow model containing a Convolution3DTranspose layer, which works well with expected inputs and can be deployed in real-world systems. However, if we call the model with a malicious input which has a zero dimension, it gives Check Failed failure and crashes.",['< 2.12.0'],"['2.11.1, 2.12.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xf83-q765-xm6m,"
          `CHECK` fail in `TensorListScatter` and `TensorListScatterV2` in eager mode
        ","Another instance of  CVE-2022-35991 , where  TensorListScatter  and  TensorListScatterV2  crash via non scalar inputs in element_shape , was found in eager mode and fixed.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cqvq-fvhr-v6hc,"
          `CHECK` failure in `SobolSample` via missing validation
        ","Another instance of  CVE-2022-35935 , where  SobolSample  is vulnerable to a denial of service via assumed scalar inputs, was found and fixed.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-frqp-wp83-qggv,"
          Heap overflow in `QuantizeAndDequantizeV2`
        ","The function  MakeGrapplerFunctionItem  takes arguments that determine the sizes of inputs and outputs. If the inputs given are greater than or equal to the sizes of the outputs, an out-of-bounds memory read or a crash is triggered.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pf36-r9c6-h97j,"
          Invalid char to bool conversion when printing a tensor
        ","When  printing a tensor , we get it's data as a  const char*  array (since that's the underlying storage) and then we typecast it to the element type. However, conversions from  char  to  bool  are undefined if the  char  is not  0  or  1 , so sanitizers/fuzzers will crash.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjx6-v474-2ch9,"
          Segfault in `CompositeTensorVariantToComponents`
        ",An input  encoded  that is not a valid  CompositeTensorVariant  tensor will trigger a segfault in  tf.raw_ops.CompositeTensorVariantToComponents .,['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mv77-9g28-cwg3,"
          `CHECK` fail via inputs in `PyFunc`
        ",An input  token  that is not a UTF-8 bytestring will trigger a  CHECK  fail in  tf.raw_ops.PyFunc .,['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-368v-7v32-52fx,"
          Overflow in `ResizeNearestNeighborGrad`
        ","When  tf.raw_ops.ResizeNearestNeighborGrad  is given a large  size  input, it overflows.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cg88-rpvp-cjv5,"
          OOB write in grappler
        ","The function  MakeGrapplerFunctionItem  takes arguments that determine the sizes of inputs and outputs. If the inputs given are greater than or equal to the sizes of the outputs, an out-of-bounds memory read or a crash is triggered.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g9fm-r5mm-rf9f,"
          `CHECK_EQ` fail via input in `SparseMatrixNNZ`
        ",An input  sparse_matrix  that is not a matrix with a shape with rank 0 will trigger a  CHECK  fail in  tf.raw_ops.SparseMatrixNNZ .,['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xvwp-h6jv-7472,"
          FractionalMaxPool and FractionalAvgPool heap out-of-buffer
        ",An input  pooling_ratio  that is smaller than 1 will trigger a heap OOB in  tf.raw_ops.FractionalMaxPool  and  tf.raw_ops.FractionalAvgPool .,['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-27rc-728f-x5w2,"
          `CHECK` fail via inputs in `SdcaOptimizer`
        ",Inputs  dense_features  or  example_state_data  not of rank 2 will trigger a  CHECK  fail in  SdcaOptimizer .,['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hq7g-wwwp-q46h,"
          `CHECK` fail via inputs in `SparseFillEmptyRowsGrad`
        ","If  SparseFillEmptyRowsGrad  is given empty inputs, TensorFlow will crash.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f2w8-jw48-fr7j,"
          `FractionalMaxPoolGrad` Heap OOB
        ","If  FractionMaxPoolGrad  is given outsize inputs  row_pooling_sequence  and  col_pooling_sequence , TensorFlow will crash.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rmg2-f698-wq35,"
          `tf.raw_ops.Mfcc` crashes
        ","If  ThreadUnsafeUnigramCandidateSampler  is given input  filterbank_channel_count  greater than the allowed max size, TensorFlow will crash.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gq2j-cr96-gvqx,"
          `MirrorPadGrad` heap oob
        ","If  MirrorPadGrad  is given outsize input  paddings , TensorFlow will give a heap OOB error.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h6q3-vv32-2cq5,"
          Buffer overflow in `CONV_3D_TRANSPOSE` on TFLite
        ",The reference kernel of the  CONV_3D_TRANSPOSE  TensorFlow Lite operator wrongly increments the data_ptr when adding the bias to the result.,['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-67pf-62xr-q35m,"
          `CHECK_EQ` fail in `tf.raw_ops.TensorListResize`
        ","If  tf.raw_ops.TensorListResize  is given a nonscalar value for input  size , it results  CHECK  fail which can be used to trigger a denial of service attack.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-66vq-54fq-6jvv,"
          Segfault in `tf.raw_ops.TensorListConcat`
        ","If  tf.raw_ops.TensorListConcat  is given  element_shape=[] , it results segmentation fault which can be used to trigger a denial of service attack.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h246-cgh4-7475,"
          `CHECK` fail in `BCast` overflow
        ","If  BCast::ToShape  is given input larger than an  int32 , it will crash, despite being supposed to handle up to an  int64 . An example can be seen in  tf.experimental.numpy.outer  by passing in large input to the input  b .",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xxcj-rhqg-m46g,"
          Segfault via invalid attributes in `pywrap_tfe_src.cc`
        ","If a list of quantized tensors is assigned to an attribute, the pywrap code fails to parse the tensor and returns a  nullptr , which is not caught. An example can be seen in  tf.compat.v1.extract_volume_patches  by passing in quantized tensors as input  ksizes .",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6x99-gv2v-q76v,"
          FPE in `tf.image.generate_bounding_box_proposals`
        ","When running on GPU,  tf.image.generate_bounding_box_proposals  receives a  scores  input that must be of rank 4 but is not checked.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8fvv-46hw-vpg3,"
          Overflow in `tf.keras.losses.poisson`
        ","tf.keras.losses.poisson  receives a  y_pred  and  y_true  that are passed through  functor::mul  in  BinaryOp . If the resulting dimensions overflow an  int32 , TensorFlow will crash due to a size mismatch during broadcast assignment.",['< 2.11.0'],"['2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-54pp-c6pp-7fpx,"
          Overflow in `ImageProjectiveTransformV2`
        ","When  tf.raw_ops.ImageProjectiveTransformV2  is given a large output shape, it overflows.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-762h-vpvw-3rcx,"
          Overflow in `FusedResizeAndPadConv2D`
        ","When  tf.raw_ops.FusedResizeAndPadConv2D  is given a large tensor shape, it overflows.",['< 2.11.0'],"['2.7.4, 2.8.1, 2.9.1, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jq6x-99hj-q636,"
          Seg fault in `ndarray_tensor_bridge` due to zero and large inputs
        ","If a numpy array is created with a shape such that one element is zero and the others sum to a large number, an error will be raised. E.g. the following raises an error:",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w58w-79xv-6vcj,"
          OOB seg fault in `DynamicStitch` due to missing validation
        ",tf.raw_ops.DynamicStitch  specifies input sizes when it is  registered .,['2.10.0'],"['2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8w5g-3wcv-9g2j,"
          ThreadUnsafeUnigramCandidateSampler Heap OOB
        ","When the  BaseCandidateSamplerOp  function  receives a value in  true_classes  larger than  range_max , a heap oob vuln occurs.",['< 2.11.0'],"['2.8.4, 2.9.3, 2.10.1, 2.11.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-79h2-q768-fpxr,"
          Segfault TFLite converter on per-channel quantized transposed convolutions
        ",When converting transposed convolutions using per-channel weight quantization the converter segfaults and crashes the Python process.,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9cr2-8pwr-fhfq,"
          `CHECK` fail in `QuantizeAndDequantizeV3`
        ","If  QuantizeAndDequantizeV3  is given a nonscalar  num_bits  input tensor, it results in a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g468-qj8g-vcjc,"
          `CHECK`-fail in `tensorflow::full_type::SubstituteFromAttrs`
        ","When  tensorflow::full_type::SubstituteFromAttrs  receives a  FullTypeDef& t  that is not exactly three args, it triggers a  CHECK -fail instead of returning a status.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rh87-q4vg-m45j,"
          Integer overflow in math ops
        ","When  RangeSize  receives values that do not fit into an  int64_t , it crashes.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7j3m-8g3c-9qqq,"
          Null-dereference in `mlir::tfg::TFOp::nameAttr`
        ","When  mlir::tfg::TFOp::nameAttr  receives null type list attributes, it crashes.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq,"
          Null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`
        ","When  mlir::tfg::GraphDefImporter::ConvertNodeDef  tries to convert NodeDefs without an op name, it crashes.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jvhc-5hhr-w3v5,"
          Assertion fail on MLIR empty edge names
        ","When  mlir::tfg::ConvertGenericFunctionToFunctionDef  is given empty function attributes, it crashes.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f,"
          Null dereference on MLIR on empty function attributes
        ","When  mlir::tfg::ConvertGenericFunctionToFunctionDef  is given empty function attributes, it gives a null dereference.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r26c-679w-mrjm,"
          `CHECK` fail in `FakeQuantWithMinMaxVarsGradient`
        ","When  tf.quantization.fake_quant_with_min_max_vars_gradient  receives input  min  or  max  that is nonscalar, it gives a  CHECK  fail that can trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mv8m-8x97-937q,"
          `CHECK` fail in `tf.random.gamma`
        ","When  tf.random.gamma  receives large input shape and rates, it gives a  CHECK  fail that can trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cv2p-32v3-vhwq,"
          `CHECK` fail in `RandomPoissonV2`
        ","When  RandomPoissonV2  receives large input shape and rates, it gives a  CHECK  fail that can trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mh3m-62v7-68xg,"
          `CHECK` fail in `Unbatch`
        ","When  Unbatch  receives a nonscalar input  id , it gives a  CHECK  fail that can trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jqm7-m5q7-3hm5,"
          `CHECK` fail in `DrawBoundingBoxes`
        ","When  DrawBoundingBoxes  receives an input  boxes  that is not of dtype  float , it gives a  CHECK  fail that can trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fqxc-pvf8-2w9v,"
          `CHECK` fail in `Eig`
        ","Eig  can be fed an incorrect  Tout  input, resulting in a  CHECK  fail that can trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw,"
          `CHECK` fail in `Conv2DBackpropInput`
        ","When  Conv2DBackpropInput  receives empty  out_backprop  inputs (e.g.  [3, 1, 0, 1] ), the current CPU/GPU kernels  CHECK  fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qhw4-wwr7-gjc5,"
          `CHECK` fail in `EmptyTensorList`
        ","If  EmptyTensorList  receives an input  element_shape  with more than one dimension, it gives a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf,"
          `CHECK` fail in `tf.sparse.cross`
        ","If  tf.sparse.cross  receives an input  separator  that is not a scalar, it gives a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q5jv-m6qw-5g37,"
          Floating point exception in `Conv2D`
        ","If  Conv2D  is given empty  input  and the  filter  and  padding  sizes are valid, the output is all-zeros. This causes division-by-zero floating point exceptions that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g9h5-vr8m-x2h4,"
          `CHECK` fail in `AudioSummaryV2`
        ","When  AudioSummaryV2  receives an input  sample_rate  with more than one element, it gives a  CHECK  fails that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fhfc-2q7x-929f,"
          `CHECK` fail in `CollectiveGather`
        ","When  CollectiveGather  receives an scalar input  input , it gives a  CHECK  fails that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wq6q-6m32-9rv9,"
          `CHECK` fail in `SetSize`
        ","When  SetSize  receives an input  set_shape  that is not a 1D tensor, it gives a  CHECK  fails that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9v8w-xmr4-wgxp,"
          `CHECK` fail in `TensorListFromTensor`
        ","When  TensorListFromTensor  receives an  element_shape  of a rank greater than one, it gives a  CHECK  fail that can trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vm7x-4qhj-rrcq,"
          `CHECK` fail in `TensorListScatter` and `TensorListScatterV2`
        ","When  TensorListScatter  and  TensorListScatterV2  receive an  element_shape  of a rank greater than one, they give a  CHECK  fail that can trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h7ff-cfc9-wmmh,"
          `CHECK` fail in `FakeQuantWithMinMaxVarsPerChannelGradient`
        ","When  tf.quantization.fake_quant_with_min_max_vars_per_channel_gradient  receives input  min  or  max  of rank other than 1, it gives a  CHECK  fail that can trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j43h-pgmg-5hjq,"
          `CHECK` fail in `MaxPool`
        ","When  MaxPool  receives a window size input array  ksize  with dimensions greater than its input tensor  input , the GPU kernel gives a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9vqj-64pv-w55c,"
          `CHECK` fail in `tf.linalg.matrix_rank`
        ","When  tf.linalg.matrix_rank  receives an empty input  a , the GPU kernel gives a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w62h-8xjm-fv49,"
          `CHECK` fail in `DenseBincount`
        ",DenseBincount  assumes its input tensor  weights  to either have the same shape as its input tensor  input  or to be length-0. A different  weights  shape will trigger a  CHECK  fail that can be used to trigger a denial of service attack.,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wr9v-g9vf-c74v,"
          Segfault in `RaggedBincount`
        ","If  RaggedBincount  is given an empty input tensor  splits , it results in a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9942-r22v-78cp,"
          `CHECK` fail in `LRNGrad`
        ","If  LRNGrad  is given an  output_image  input tensor that is not 4-D, it results in a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5,"
          `CHECK` fail in `ParameterizedTruncatedNormal`
        ",ParameterizedTruncatedNormal  assumes  shape  is of type  int32 . A valid  shape  of type  int64  results in a mismatched type  CHECK  fail that can be used to trigger a denial of service attack.,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4,"
          `CHECK` fail in `Save` and `SaveSlices`
        ","If  Save  or  SaveSlices  is run over tensors of an unsupported  dtype , it results in a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-397c-5g2j-qxpv,"
          Segfault in `SparseBincount`
        ","If  SparseBincount  is given inputs for  indices ,  values , and  dense_shape  that do not make a valid sparse tensor, it results in a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6cv-4fmf-66xf,"
          `CHECK` fail in `RaggedTensorToVariant`
        ","If  RaggedTensorToVariant  is given a  rt_nested_splits  list that contains tensors of ranks other than one, it results in a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vxv8-r8q2-63xw,"
          `CHECK` fail in `FractionalMaxPoolGrad`
        ","FractionalMaxPoolGrad  validates its inputs with  CHECK  failures instead of with returning errors. If it gets incorrectly sized inputs, the  CHECK  failure can be used to trigger a denial of service attack:",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v7vw-577f-vp8x,"
          Segfault in `QuantizedRelu` and `QuantizedRelu6`
        ","If  QuantizedRelu  or  QuantizedRelu6  are given nonscalar inputs for  min_features  or  max_features , it results in a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vgvh-2pf4-jr2x,"
          Segfault in `QuantizeDownAndShrinkRange`
        ","If  QuantizeDownAndShrinkRange  is given nonscalar inputs for  input_min  or  input_max , it results in a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-689c-r7h2-fv9v,"
          Segfault in `QuantizedMatMul`
        ",If  QuantizedMatMul  is given nonscalar input for:,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9j4v-pp28-mxv7,"
          `CHECK` fail in `FakeQuantWithMinMaxVarsPerChannel`
        ","If  FakeQuantWithMinMaxVarsPerChannel  is given  min  or  max  tensors of a rank other than one, it results in a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4pc4-m9mj-v2r9,"
          Segfault in `QuantizedBiasAdd`
        ","If  QuantizedBiasAdd  is given  min_input ,  max_input ,  min_bias ,  max_bias  tensors of a nonzero rank, it results in a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wqmc-pm8c-2jhc,"
          Segfault in `Requantize`
        ","If  Requantize  is given  input_min ,  input_max ,  requested_output_min ,  requested_output_max  tensors of a nonzero rank, it results in a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9fpg-838v-wpv7,"
          `CHECK` fail in `FakeQuantWithMinMaxVars`
        ","If  FakeQuantWithMinMaxVars  is given  min  or  max  tensors of a nonzero rank, it results in a  CHECK  fail that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g35r-369w-3fqp,"
          Segfault in `QuantizedInstanceNorm`
        ","If  QuantizedInstanceNorm  is given  x_min  or  x_max  tensors of a nonzero rank, it results in a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q2c3-jpmc-gfjx,"
          `CHECK` fail in `Conv2DBackpropInput`
        ","The implementation of  Conv2DBackpropInput  requires  input_sizes  to be 4-dimensional. Otherwise, it gives a  CHECK  failure which can be used to trigger a denial of service attack:",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2475-53vw-vp25,"
          `CHECK` fail in `AvgPoolGrad`
        ",The implementation of  AvgPoolGrad  does not fully validate the input  orig_input_shape . This results in a  CHECK  failure which can be used to trigger a denial of service attack:,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v6h3-348g-6h5x,"
          Segfault in `QuantizedAdd`
        ","If  QuantizedAdd  is given  min_input  or  max_input  tensors of a nonzero rank, it results in a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4w68-4x85-mjj9,"
          Segfault in `QuantizedAvgPool`
        ","If  QuantizedAvgPool  is given  min_input  or  max_input  tensors of a nonzero rank, it results in a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qxpx-j395-pw36,"
          Segfault in `LowerBound` and `UpperBound`
        ","If  LowerBound  or  UpperBound  is given an empty sorted_inputs  input, it results in a  nullptr  dereference, leading to a segfault that can be used to trigger a denial of service attack.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f7r5-q7cx-h668,"
          Segfault in `BlockLSTMGradV2`
        ",The implementation of  BlockLSTMGradV2  does not fully validate its inputs.,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-84jm-4cf3-9jfm,"
          `CHECK` failures in `FractionalAvgPoolGrad`
        ",The implementation of  FractionalAvgPoolGrad  does not fully validate the input  orig_input_tensor_shape . This results in an overflow that results in a   CHECK  failure which can be used to trigger a denial of service attack.,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wxjj-cgcx-r3vq,"
          `CHECK` failures in `AvgPool3DGrad`
        ",The implementation of  AvgPool3DGradOp  does not fully validate the input  orig_input_shape . This results in an overflow that results in a   CHECK  failure which can be used to trigger a denial of service attack:,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h5vq-gw2c-pq47,"
          `CHECK` failures in `UnbatchGradOp`
        ",The  UnbatchGradOp  function takes an argument  id  that is assumed to be a scalar. A nonscalar  id  can trigger a  CHECK  failure and crash the program.,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mgmh-g2v6-mqw5,"
          `CHECK` failure in `AvgPoolOp`
        ",The  AvgPoolOp  function takes an argument  ksize  that must be positive but is not checked. A negative  ksize  can trigger a  CHECK  failure and crash the program.,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x989-q2pq-4q5x,"
          Int overflow in `RaggedRangeOp`
        ","The  RaggedRangOp  function takes an argument  limits  that is eventually used to construct a  TensorShape  as an  int64 . If  limits  is a very large float, it can overflow when converted to an  int64 . This triggers an  InvalidArgument  but also throws an abort signal that crashes the program.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-ffjm-4qwc-7cmf,"
          OOB write in `scatter_nd` op in TF Lite
        ",The  ScatterNd  function takes an input argument that determines the indices of of the output tensor. An input index greater than the output tensor or less than zero will either write content at the wrong index or trigger a crash.,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3m3g-pf5v-5hpj,"
          OOB read in `Gather_nd` op in TF Lite Micro
        ","The  GatherNd  function takes arguments that determine the sizes of inputs and outputs. If the inputs given are greater than or equal to the sizes of the outputs, an out-of-bounds memory read or a crash is triggered.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v5xg-3q2c-c2r4,"
          `CHECK` failure in `TensorListReserve` via missing validation
        ","In  core/kernels/list_kernels.cc's TensorListReserve ,  num_elements  is assumed to be a tensor of size 1. When a  num_elements  of more than 1 element is provided, then  tf.raw_ops.TensorListReserve  fails the  CHECK_EQ  in  CheckIsAlignedAndSingleElement .",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pxrw-j2fv-hx3h,"
          OOB read in `Gather_nd` op in TF Lite
        ","The  GatherNd  function takes arguments that determine the sizes of inputs and outputs. If the inputs given are greater than or equal to the sizes of the outputs, an out-of-bounds memory read is triggered.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-97p7-w86h-vcf9,"
          `CHECK` failure in `SobolSample` via missing validation
        ","The implementation of SobolSampleOp is vulnerable to a denial of service via CHECK-failure (assertion failure) caused by assuming  input(0) ,  input(1) , and  input(2)  to be scalar.",['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f4w6-h4f5-wx45,"
          `CHECK` failure in tf.reshape via overflows
        ",The implementation of tf.reshape op in TensorFlow is vulnerable to a denial of service via CHECK-failure (assertion failure) caused by overflowing the number of elements in a tensor:,['< 2.10.0'],"['2.7.4, 2.8.3, 2.9.2, 2.10.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hc2f-7r5r-r2hg,"
          Heap buffer overflow due to incorrect hash function
        ","The  TensorKey  used total estimated  AllocatedBytes() , which (a) is an estimate per tensor, and (b) is a very poor hash function for constants (e.g.  int32_t ).  It also tried to access individual tensor bytes through  tensor.data()  of size  AllocatedBytes() .  This led to ASAN failures because the  AllocatedBytes()  is an estimate of total bytes allocated by a tensor, including any pointed-to constructs (e.g. strings), and does not refer to contiguous bytes in the  .data()  buffer.  We couldn't use this byte vector anyways, since types like  tstring  include pointers, whereas we need to hash the string values themselves.",['== 2.8.0'],"['2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f4rr-5m7v-wxcw,"
          Type confusion leading to `CHECK`-failure based denial of service
        ","The  macros that TensorFlow uses for writing assertions (e.g.,   have an incorrect logic when comparing  size_t  and  int  values. Due to type conversion rules, several of the macros would trigger incorrectly.",['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m,"
          Incomplete validation in signal ops leads to crashes
        ",The  tf.compat.v1.signal.rfft2d  and  tf.compat.v1.signal.rfft3d  lack input validation and under certain condition can result in crashes (due to  CHECK -failures).,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8wwm-6264-x792,"
          Core dump when loading TFLite models with quantization
        ",Certain TFLite models that were created using TFLite model converter would crash when loaded in the TFLite interpreter. The culprit is that during quantization the scale of values could be greater than 1 but code was always assuming sub-unit scaling.,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xrp2-fhq4-4q3w,"
          Segfault if `tf.histogram_fixed_width` is called with NaN values
        ",The implementation of  tf.histogram_fixed_width  is vulnerable to a crash when the values array contain  NaN  elements:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cwpm-f78v-7m5c,"
          Denial of service in `tf.ragged.constant` due to lack of validation
        ",The implementation of  tf.ragged.constant  does not fully validate the input arguments. This results in a denial of service by consuming all available memory:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hx9q-2mx4-m4pg,"
          Missing validation causes denial of service via `Conv3DBackpropFilterV2`
        ",The implementation of  tf.raw_ops.UnsortedSegmentJoin  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2r2f-g8mw-9gvr,"
          Segfault and OOB write due to incomplete validation in `EditDistance`
        ",The implementation of  tf.raw_ops.EditDistance  has incomplete validation. Users can pass negative values to cause a segmentation fault based denial of service:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jjm6-4vf7-cjh4,"
          Integer overflow in `SpaceToBatchND`
        ",The implementation of  tf.raw_ops.SpaceToBatchND  (in all backends such as XLA and handwritten kernels) is vulnerable to an integer overflow:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pqhm-4wvf-2jg8,"
          Missing validation results in undefined behavior in `QuantizedConv2D`
        ",The implementation of  tf.raw_ops.QuantizedConv2D  does not fully validate the input arguments:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rc9w-5c64-9vqq,"
          Missing validation results in undefined behavior in `SparseTensorDenseAdd
        ",The implementation of  tf.raw_ops.SparseTensorDenseAdd  does not fully validate the input arguments:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-54ch-gjq5-4976,"
          Segfault due to missing support for quantized types
        ",There is a potential for segfault / denial of service in TensorFlow by calling  tf.compat.v1.*  ops which don't yet have support for quantized types (added after migration to TF 2.x):,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5wpj-c6f7-24x8,"
          Undefined behavior when users supply invalid resource handles
        ",Multiple TensorFlow operations misbehave in eager mode when the resource handle provided to them is invalid:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mw6j-hh29-h379,"
          `CHECK` failure in depthwise ops via overflows
        ",The implementation of depthwise ops in TensorFlow is vulnerable to a denial of service via  CHECK -failure (assertion failure) caused by overflowing the number of elements in a tensor:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5v77-j66x-4c4g,"
          Missing validation causes denial of service via `Conv3DBackpropFilterV2`
        ",The implementation of  tf.raw_ops.Conv3DBackpropFilterV2  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2vv3-56qg-g2cf,"
          Missing validation causes denial of service via `LSTMBlockCell`
        ",The implementation of  tf.raw_ops.LSTMBlockCell  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mg66-qvc5-rm93,"
          Missing validation causes denial of service via `SparseTensorToCSRSparseMatrix`
        ",The implementation of  tf.raw_ops.SparseTensorToCSRSparseMatrix  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p9rc-rmr5-529j,"
          Missing validation causes denial of service via `LoadAndRemapMatrix`
        ",The implementation of  tf.raw_ops.LoadAndRemapMatrix  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hrg5-737c-2p56,"
          Missing validation causes denial of service via `UnsortedSegmentJoin`
        ",The implementation of  tf.raw_ops.UnsortedSegmentJoin  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h48f-q7rw-hvr7,"
          Missing validation causes denial of service via `StagePeek`
        ",The implementation of  tf.raw_ops.StagePeek  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv25-wrff-wf86,"
          Missing validation causes denial of service via `GetSessionTensor`
        ",The implementation of  tf.raw_ops.GetSessionTensor  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h5g4-ppwx-48q2,"
          Missing validation causes denial of service via `DeleteSessionTensor`
        ",The implementation of  tf.raw_ops.DeleteSessionTensor  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h2wq-prv9-2f56,"
          Missing validation crashes `QuantizeAndDequantizeV4Grad`
        ",The implementation of  tf.raw_ops.QuantizeAndDequantizeV4Grad  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2p9q-h29j-3f5v,"
          Missing validation causes `TensorSummaryV2` to crash
        ",The implementation of  tf.raw_ops.TensorSummaryV2  does not fully validate the input arguments. This results in a  CHECK -failure which can be used to trigger a denial of service attack:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc,"
          Code injection in `saved_model_cli`
        ",TensorFlow's  saved_model_cli  tool is vulnerable to a code injection:,['< 2.9.0'],"['2.6.4, 2.7.2, 2.8.1, 2.9.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fpcp-9h7m-ffpx,"
          Null pointer dereference in `BuildXlaCompilationCache` (XLA) 
        ","When  building an XLA compilation cache , if default settings are used, TensorFlow triggers a null pointer dereference:",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gwcx-jrx4-92w2,"
          Segfault in `simplifyBroadcast` (MLIR) 
        ","The  simplifyBroadcast  is vulenrable to a segfault (hence, denial of service), if called with scalar shapes.",['== 2.8.0'],['2.8.0']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9x52-887g-fhc2,"
          Multiple crashes, heap OOB accesses in TFG dialect (MLIR)
        ",The  TFG dialect of TensorFlow (MLIR)  makes several assumptions about the incoming  GraphDef  before converting it to the MLIR-based dialect.,"['>= 2.7.0, < 2.8.0']",['2.7.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pqrv-8r2f-7278,"
          Crash due to erroneous `StatusOr`
        ",A  GraphDef  from a TensorFlow  SavedModel  can be maliciously altered to cause a TensorFlow process to crash due to encountering  a  :,"['>= 2.7.0, < 2.8.0']",['2.7.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vq36-27g6-p492,"
          Heap OOB access in `RunForwardTypeInference`
        ",TensorFlow's  type inference  can cause a heap OOB read as the bounds checking is done in a  DCHECK  (which is a no-op during production):,['== 2.8.0'],['2.8.0']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-247x-2f9f-5wp7,"
          Stack overflow due to self-recursive function in `GraphDef`
        ","The  GraphDef  format in TensorFlow does not allow self recursive functions. The runtime assumes that this invariant is satisfied. However, a  GraphDef  containing a fragment such as the following can be consumed when loading a  SavedModel :",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wcv5-vrvr-3rx2,"
          `CHECK` failure in constant folding
        ",The Grappler component of TensorFlow is vulnerable to a denial of service via  CHECK -failure (assertion failure) in  constant folding :,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9px9-73fg-3fqp,"
          Null pointer dereference in Grappler's `IsConstant`
        ","Under certain scenarios, Grappler component of TensorFlow can trigger a null pointer dereference. There are 2 places where this can occur, for the same malicious alteration of a  SavedModel  file (fixing the first one would trigger the same dereference in the second place):",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8jj7-5vxc-pg2q,"
          Integer overflow in Grappler cost estimation of crop and resize operation
        ","Under certain scenarios, Grappler component of TensorFlow is vulnerable to an integer overflow during  cost estimation for crop and resize . Since the cropping parameters are user controlled, a malicious person can trigger undefined behavior.",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fx5c-h9f6-rv7c,"
          `CHECK`-fails due to attempting to build a reference tensor
        ",A malicious user can cause a denial of service by altering a  SavedModel  such that  Grappler optimizer would attempt to build a tensor using a reference  . This would result in a crash due to a  CHECK -fail  in the   as reference types are not allowed.,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-43jf-985q-588j,"
          Multiple `CHECK`-fails in `function.cc`
        ",A malicious user can cause a denial of service by altering a  SavedModel  such that  assertions in   would be falsified and crash the Python interpreter.,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fq6p-6334-8gr4,"
          Memory leak in decoding PNG images
        ","When  decoding PNG images  TensorFlow can produce a memory leak if the image is invalid. 
After calling  png::CommonInitDecode(..., &decode) , the  decode  value contains allocated buffers which can only be freed by calling  png::CommonFreeDecode(&decode) . However, several error case in the function implementation invoke the  OP_REQUIRES  macro which immediately terminates the execution of the function, without allowing for the memory free to occur.",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-24x4-6qmh-88qg,"
          Use after free in `DecodePng` kernel
        ",A malicious user can cause a use after free behavior when  decoding PNG images :,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gjqc-q9g6-q2j3,"
          `CHECK`-failures in binary ops due to type confusion
        ","A malicious user can cause a denial of service by altering a  SavedModel  such that  any binary op  would trigger  CHECK  failures. This occurs when the protobuf part corresponding to the tensor arguments is modified such that the  dtype  no longer matches the  dtype  expected by the op. In that case, calling the templated binary operator for the binary op would receive corrupted data, due to the type confusion involved:",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4j82-5ccr-4r8v,"
          `CHECK`-failures in `TensorByteSize`
        ",A malicious user can cause a denial of service by altering a  SavedModel  such that  TensorByteSize  would trigger  CHECK  failures.,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5f2r-qp73-37mr,"
          `CHECK`-failures during Grappler's `SafeToRemoveIdentity`
        ",The Grappler optimizer in TensorFlow can be used to cause a denial of service by altering a  SavedModel  such that  SafeToRemoveIdentity  would trigger  CHECK  failures.,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fq86-3f29-px2c,"
          `CHECK`-failures during Grappler's `IsSimplifiableReshape`
        ",The Grappler optimizer in TensorFlow can be used to cause a denial of service by altering a  SavedModel  such that  IsSimplifiableReshape  would trigger  CHECK  failures.,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-627q-g293-49q7,"
          Abort caused by allocating a vector that is too large
        ","During shape inference, TensorFlow can  allocate a large vector  based on a value from a tensor controlled by the user:",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8r7c-3cm2-3h8f,"
          Memory leak when a graph node is invalid
        ","If a graph node is invalid, TensorFlow can leak memory in the  implementation of  :",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8cxv-76p7-jxwr,"
          Null dereference in `GetInitOp`
        ",The  implementation of   is vulnerable to a crash caused by dereferencing a null pointer:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wm93-f238-7v37,"
          Integer overflow in `OpLevelCostEstimator::CalculateOutputSize`
        ",The  implementation of   is vulnerable to an integer overflow if an attacker can create an operation which would involve tensors with large enough number of elements:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c94w-c95p-phf8,"
          Integer overflow in `OpLevelCostEstimator::CalculateTensorSize`
        ",The  implementation of   is vulnerable to an integer overflow if an attacker can create an operation which would involve a tensor with large enough number of elements:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q85f-69q7-55h2,"
          Unitialized variable access in `AssignOp`
        ",The  implementation of   can result in copying unitialized data to a new tensor. This later results in undefined behavior.,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-77gp-3h4r-6428,"
          Heap OOB read/write in `SpecializeType`
        ",There is a typo in TensorFlow's  SpecializeType  which results in heap OOB read/write:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rww7-2gpw-fv6j,"
          Crash when type cannot be specialized
        ","Under certain scenarios, TensorFlow can fail to specialize a type during  shape inference :",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9p77-mmrw-69c7,"
          Null-dereference when specializing tensor type
        ","When decoding a tensor from protobuf, TensorFlow might do a null-dereference if attributes of some mutable arguments to some operations are missing from the proto. This is  guarded by a  :",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j3mj-fhpq-qqjj,"
          `CHECK`-fail when decoding invalid tensors from proto
        ","When decoding a tensor from protobuf, a TensorFlow process can encounter cases where a  CHECK  assertion is invalidated based on user controlled arguments, if the tensors have an invalid  dtype  and 0 elements or an invalid shape. This allows attackers to cause denial of services in TensorFlow processes.",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5qw5-89mw-wcg2,"
          Heap OOB write in Grappler
        ",TensorFlow is vulnerable to a heap OOB write in  Grappler :,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4v5p-v5h9-6xjx,"
          `CHECK`-fail with repeated `AttrDef`
        ",An attacker can trigger denial of service via assertion failure by altering a  SavedModel  on disk such that  AttrDef s of some operation are duplicated.,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8rcj-c8pj-v3m3,"
          `CHECK`-fail when decoding resource handles from proto
        ","When decoding a resource handle tensor from protobuf, a TensorFlow process can encounter cases where a  CHECK  assertion is invalidated based on user controlled arguments. This allows attackers to cause denial of services in TensorFlow processes.",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-43q8-3fv7-pr5x,"
          Missing validation causes `tf.sparse.split` to crash when `axis` is a tuple
        ","The implementation of  tf.sparse.split  does not fully validate the input arguments. Hence, a malicious user can trigger a denial of service via a segfault or a heap OOB read:",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qx3f-p745-w4hr,"
          Integer overflow in Range resulting in undefined behavior and OOM
        ","The implementation of  Range  suffers from integer overflows. These can trigger undefined behavior or, in some scenarios, extremely large allocations.",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wc4g-r73w-x8mm,"
          Insecure temporary file
        ","In multiple places, TensorFlow uses  tempfile.mktemp  to create temporary files. While this is acceptable in testing, in utilities and libraries it is dangerous as a different process can create the file between the check for the filename in  mktemp  and the actual creation of the file by a subsequent operation (a TOC/TOU type of weakness).",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4hvf-hxvg-f67v,"
          Read and Write outside of bounds in TFLite
        ",An attacker can craft a TFLite model that would allow limited reads and writes outside of arrays in TFLite. This exploits missing validation in  the conversion from sparse tensors to dense tensors .,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9c78-vcq7-7vxq,"
          Dangerous OOB write in TFLite
        ","An attacker can craft a TFLite model that would cause a write outside of bounds of an array in TFLite. In fact, the attacker can override the linked list used by the memory allocator. This can be leveraged for an arbitrary write primitive under certain conditions.",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-98p5-x8x4-c9m5,"
          Integer overflow in TFLite
        ",An attacker can craft a TFLite model that would cause an integer overflow  in embedding lookup operations :,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9gwq-6cwj-47h3,"
          Integer overflow in TFLite array creation
        ",An attacker can craft a TFLite model that would cause an integer overflow  in  :,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-428x-9xc2-m8mj,"
          FPE in depthwise convolutions in TFLite
        ",An attacker can craft a TFLite model that would trigger a division by zero in  the implementation of depthwise convolutions .,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gf2j-f278-xh4v,"
          FPE in `BiasAndClamp` in TFLite
        ",An attacker can craft a TFLite model that would trigger a division by zero in  BiasAndClamp :,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-44qp-9wwf-734r,"
          Heap overflow in `SparseCountSparseOutput`
        ",The  implementation of   is vulnerable to a heap overflow:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x4qx-4fjv-hmw6,"
          Integer overflow leading to crash in `SparseCountSparseOutput`
        ",The  implementation of   can be made to crash a TensorFlow process by an integer overflow whose result is then used in a memory allocation:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3mw4-6rj6-74g5,"
          Reference binding to null pointer in `QuantizedMaxPool`
        ",The  implementation of   has an undefined behavior where user controlled inputs can trigger a reference binding to null pointer.,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f2vv-v9cg-qhh7,"
          Assertion failure based denial of service via faulty bin count operations
        ",The  implementation of   allows malicious users to cause denial of service by passing in arguments which would trigger a  CHECK -fail:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pfjj-m3jj-9jc9,"
          Undefined behavior in `SparseTensorSliceDataset`
        ",The  implementation of   has an undefined behavior: under certain condition it can be made to dereference a  nullptr  value:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qj5r-f9mv-rffh,"
          `CHECK`-fails when building invalid/overflowing tensor shapes
        ","Multiple operations in TensorFlow can be used to trigger a denial of service via  CHECK -fails (i.e., assertion failures). This is similar to  TFSA-2021-198  ( CVE-2021-41197 ) and has similar fixes.",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-87v6-crgm-2gfj,"
          Division by zero in `FractionalMaxPool`
        ",The  implementation of   can be made to crash a TensorFlow process via a division by 0:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gcvh-66ff-4mwm,"
          `CHECK`-failures in `MapStage`
        ",The  implementation of   is vulnerable a  CHECK -fail if the key tensor is not a scalar:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6445-fm66-fvq2,"
          Integer overflows in `AddManySparseToTensorsMap`
        ","The  implementation of   is vulnerable to an integer overflow which results in a  CHECK -fail when building new  TensorShape  objects (so, an assert failure based denial of service):",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rrx2-r989-2c43,"
          Integer overflows in most sparse component-wise ops
        ","The  implementations of   are vulnerable to integer overflows. These can be used to trigger large allocations (so, OOM based denial of service) or  CHECK -fails when building new  TensorShape  objects (so, assert failures based denial of service):",['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h6gw-r52c-724r,"
          More incomplete validation in boosted trees code
        ",The  code for boosted trees in TensorFlow  is still missing validation. This allows malicious users to read and write outside of bounds of heap allocated data as well as trigger denial of service (via dereferencing  nullptr s or via  CHECK -failures).,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-98j8-c9q4-r38g,"
          OOM due to integer overflow in `StringNGrams`
        ",The  implementation of   can be used to trigger a denial of service attack by causing an OOM condition after an integer overflow:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c582-c96p-r5cq,"
          OOM in `ThreadPoolHandle`
        ",The  implementation of   can be used to trigger a denial of service attack by allocating too much memory:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m4hf-j54p-p353,"
          Type confusion in shape inference for `ConcatV2`
        ",The  implementation of shape inference for   can be used to trigger a denial of service attack via a segfault caused by a type confusion:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-34f9-hjfq-rr8j,"
          Overflow and divide by zero in `UnravelIndex`
        ",The  implementation of   is vulnerable to a division by zero caused by an integer overflow bug:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vjg4-v33c-ggc4,"
          Heap OOB access in `FractionalAvgPoolGrad`
        ",The  implementation of   does not consider cases where the input tensors are invalid allowing an attacker to read from outside of bounds of heap:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c6fh-56w7-fvjw,"
          Integer overflow in shape inference for `Dequantize`
        ",The  implementation of shape inference for   is vulnerable to an integer overflow weakness:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-23hm-7w47-xw72,"
          Heap OOB access in `Dequantize`
        ",The  implementation of   does not fully validate the value of  axis  and can result in heap OOB accesses:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6gmv-pjp9-p8w8,"
          Heap OOB read in shape inference for `ReverseSequence`
        ",The  implementation of shape inference for   does not fully validate the value of  batch_dim  and can result in a heap OOB read:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v3f7-j968-4h5f,"
          Floating point division by 0 when executing convolution operators
        ",The  estimator for the cost of some convolution operations  can be made to execute a division by 0:,['< 2.8.0'],"['2.5.3, 2.6.3, 2.7.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3rcw-9p9x-582v,"
          Code injection in `saved_model_cli`
        ",TensorFlow's  saved_model_cli  tool is vulnerable to a code injection as it  calls ,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7r94-xv9v-63jw,"
          A use of uninitialized value vulnerability in Tensorflow
        ",TensorFlow's Grappler optimizer has a  use of unitialized variable :,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f54p-f6jp-4rhr,"
          Heap OOB in `FusedBatchNorm` kernels
        ",The  implementation  of  FusedBatchNorm  kernels is vulnerable to a heap OOB:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j8c8-67vp-6mx7,"
          Arbitrary memory read in `ImmutableConst`
        ",The  ImmutableConst  operation in TensorFlow can be tricked into reading arbitrary memory contents:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-374m-jm66-3vj8,"
          Heap OOB in `SparseBinCount`
        ",The  implementation  of  SparseBinCount  is vulnerable to a heap OOB:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rg3m-hqc5-344v,"
          `SparseFillEmptyRows` heap OOB
        ",The  implementation  of  SparseFillEmptyRows  can be made to trigger a heap OOB access:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cpf4-wx82-gxp6,"
          Segfault due to negative splits in `SplitV`
        ",The  implementation  of  SplitV  can trigger a segfault is an attacker supplies negative arguments:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cqv6-3phm-hcwx,"
          Access to invalid memory during shape inference in `Cudnn*` ops
        ","The  shape inference code  for the  Cudnn*  operations in TensorFlow can be tricked into accessing invalid memory, via a heap buffer overflow:",['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5crj-c72x-m7gq,"
          Null pointer exception when `Exit` node is not preceded by `Enter` op
        ",The  process of building the control flow graph  for a TensorFlow model is vulnerable to a null pointer exception when nodes that should be paired are not:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9crf-c6qr-r273,"
          Integer division by 0 in `tf.raw_ops.AllToAll`
        ",The  shape inference code for   can be made to execute a division by 0:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gpfh-jvf9-7wg5,"
          Use after free / memory leak in `CollectiveReduceV2`
        ",The  async implementation  of  CollectiveReduceV2  suffers from a memory leak and a use after free:,['2.6.0'],['2.6.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4f99-p9c2-3j8x,"
          Undefined behavior via `nullptr` reference binding in sparse matrix multiplication
        ",The  code for sparse matrix multiplication  is vulnerable to undefined behavior via binding a reference to  nullptr :,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3ff2-r28g-w7h9,"
          Heap buffer overflow in `Transpose`
        ",The  shape inference function for   is vulnerable to a heap buffer overflow:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h67m-xg8f-fxcf,"
          Deadlock in mutually recursive `tf.function` objects
        ",The  code behind   can be made to deadlock when two  tf.function  decorated Python functions are mutually recursive:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x3v8-c8qx-3j3r,"
          Null pointer exception in `DeserializeSparse`
        ",The  shape inference code for   can trigger a null pointer dereference:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vwhq-49r4-gj9v,"
          Reference binding to `nullptr` in `tf.ragged.cross`
        ","The  shape inference code for   has an undefined behavior due to binding a reference to  nullptr . In the following scenario, this results in a crash:",['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fr77-rrx3-cp7g,"
          Heap OOB read in `tf.ragged.cross`
        ",The  shape inference code for   can trigger a read outside of bounds of heap allocated array:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cvgx-3v3q-m36c,"
          Heap OOB in shape inference for `QuantizeV2`
        ",The  shape inference code for   can trigger a read outside of bounds of heap allocated array:,['2.6.0'],['2.6.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-49rx-x2rw-pc6f,"
          Heap OOB read in all `tf.raw_ops.QuantizeAndDequantizeV*` ops
        ",The  shape inference functions for the   can trigger a read outside of bounds of heap allocated array as illustrated in the following sets of PoCs:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7v94-64hj-m82h,"
          FPE in `ParallelConcat`
        ",The  implementation of   misses some input validation and can produce a division by 0:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6hpv-v2rx-c5g6,"
          FPE in convolutions with zero size filters
        ",The  implementations for convolution operators  trigger a division by 0 if passed empty filter tensor arguments.,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m342-ff57-4jcc,"
          Heap OOB read in `tf.raw_ops.SparseCountSparseOutput`
        ",The  shape inference functions for   can trigger a read outside of bounds of heap allocated array:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-57wx-m983-2f88,"
          Incomplete validation in boosted trees code
        ","The  code for boosted trees in TensorFlow  is still missing validation. As a result, attackers can trigger denial of service (via dereferencing  nullptr s or via  CHECK -failures) as well as abuse undefined behavior (binding references to  nullptr s). An attacker can also read and write from heap buffers, depending on the API that gets used and the arguments that are passed to the call.",['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pgcq-h79j-2f69,"
          Incomplete validation of shapes in multiple TF ops
        ","Several TensorFlow operations are missing validation for the shapes of the tensor arguments involved in the call. Depending on the API, this can result in undefined behavior and segfault or  CHECK -fail related crashes but in some scenarios writes and reads from heap populated arrays are also possible.",['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-786j-5qwq-r36x,"
          Segfault while copying constant resource tensor
        ","During TensorFlow's Grappler optimizer phase, constant folding might attempt to deep copy a resource tensor. This results in a segfault, as these tensors are supposed to not change.",['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j86v-p27c-73fm,"
          Unitialized access in `EinsumHelper::ParseEquation`
        ","During execution,  EinsumHelper::ParseEquation()  is supposed to set the flags in  input_has_ellipsis  vector and  *output_has_ellipsis  boolean to indicate whether there is ellipsis in the corresponding inputs and output.",['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7pxj-m4jf-r6h2,"
          Missing validation during checkpoint loading
        ","An attacker can trigger undefined behavior, integer overflows, segfaults and  CHECK -fail crashes if they can change saved checkpoints from outside of TensorFlow.",['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xrqm-fpgr-6hhx,"
          Overflow/crash in `tf.range`
        ","While calculating the size of the output within the  tf.range  kernel, there is a conditional statement of type  int64 = condition ? int64 : double . Due to C++ implicit conversion rules, both branches of the condition will be cast to  double  and the result would be truncated before the assignment. This result in overflows:",['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5hx2-qx8j-qjqm,"
          Overflow/crash in `tf.image.resize` when size is large
        ",If  tf.image.resize  is called with a large input argument then the TensorFlow process will crash due to a  CHECK -failure caused by an overflow.,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2p25-55c9-h58q,"
          Overflow/crash in `tf.tile` when tiling tensor is large
        ",If  tf.tile  is called with a large input argument then the TensorFlow process will crash due to a  CHECK -failure caused by an overflow.,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gh8h-7j2j-qv4f,"
          Incomplete validation in `tf.summary.create_file_writer`
        ",If  tf.summary.create_file_writer  is called with non-scalar arguments code crashes due to a  CHECK -fail.,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-prcg-wp5q-rv7p,"
          Crashes due to overflow and `CHECK`-fail in ops with large tensor shapes
        ","TensorFlow allows tensor to have a large number of dimensions and each dimension can be as large as desired. However, the total number of elements in a tensor must fit within an  int64_t . If an overflow occurs,  MultiplyWithoutOverflow  would return a negative result. In the majority of TensorFlow codebase this then results in a  CHECK -failure. Newer constructs exist which return a  Status  instead of crashing the binary.",['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m539-j985-hcr8,"
          Crash in `max_pool3d` when size argument is 0 or negative
        ",The Keras pooling layers can trigger a segfault if the size of the pool is 0 or if a dimension is negative:,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cq76-mxrc-vchh,"
          Crash in `tf.math.segment_*` operations
        ",The implementation of  tf.math.segment_*  operations results in a  CHECK -fail related abort (and denial of service) if a segment id in  segment_ids  is large.,['< 2.7.0'],"['2.4.4, 2.5.2, 2.6.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3hxh-8cp2-g4hg,"
          Use after free and segfault in shape inference functions
        ","When running shape functions, some functions (such as  MutableHashTableShape ) produce extra output information in the form of a  ShapeAndType  struct. The shapes embedded in this struct are owned by an inference context that is cleaned up almost immediately; if the upstream code attempts to access this shape information, it can trigger a segfault.",['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cmgw-8vpc-rc59,"
          Segfault on strings tensors with mistmatched dimensions, due to Go code
        ","Under certain conditions, Go code can trigger a segfault in string deallocation.","['< 2.6.0, > 2.5.0']",['2.5.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-27qf-jwm8-g7f3,"
          FPE in LSH in TFLite
        ",An attacker can craft a TFLite model that would trigger a division by zero error in LSH   implementation .,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh,"
          Null pointer dereference in TFLite MLIR optimizations
        ","An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:",['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68,"
          Null pointer dereference in TFLite
        ","An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:",['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jwf9-w5xm-f437,"
          Heap OOB in TFLite's `Gather*` implementations
        ",TFLite's  GatherNd  does not support negative indices but there are no checks for this situation.,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c545-c4f9-rf6v,"
          Heap OOB in TFLite
        ",TFLite's  expand_dims.cc  contains a vulnerability which allows reading one element outside of bounds of heap allocated data:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mhhc-q96p-mfm9,"
          Infinite loop in TFLite
        ",The strided slice implementation in TFLite has a logic bug which can allow an attacker to trigger an infinite loop. This arises from newly introduced support for  ellipsis in axis definition :,['2.6.0'],['2.6.0']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q7f7-544h-67h9,"
          FPE in TFLite pooling operations
        ",The implementations of pooling in TFLite are vulnerable to division by 0 errors as there are no checks for divisors not being 0.,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rhrq-64mq-hf9h,"
          FPE in TFLite division operations
        ",The implementation of division in TFLite is  vulnerable to a division by 0 error,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4c4g-crqm-xrxw,"
          Use of unitialized value in TFLite
        ",All TFLite operations that use quantization can be made to use unitialized values.  For example :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7xwj-5r4v-429p,"
          NPE in TFLite
        ",The implementation of SVDF in TFLite is  vulnerable to a null pointer error :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cfpj-3q4c-jhvr,"
          Division by zero in TFLite
        ",The implementation of fully connected layers in TFLite is  vulnerable to a division by zero error :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g8wg-cjwc-xhhp,"
          Heap OOB in nested `tf.map_fn` with `RaggedTensor`s
        ","It is possible to nest a  tf.map_fn  within another  tf.map_fn  call. However, if the input tensor is a  RaggedTensor  and there is no function signature provided, code assumes the output is a fully specified tensor and fills output buffer with uninitialized contents from the heap:",['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6jx-9g48-2r5r,"
          Arbitrary code execution due to YAML deserialization
        ",TensorFlow and Keras can be tricked to perform arbitrary code execution when deserializing a Keras model from YAML format.,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qfpc-5pjr-mh26,"
          Missing validation in shape inference for `Dequantize`
        ",The shape inference code for  tf.raw_ops.Dequantize  has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9c8h-2mv3-49ww,"
          Division by 0 in most convolution operators
        ",Most implementations of convolution operators in TensorFlow are affected by a division by 0 vulnerability where an attacker can trigger a denial of service via a crash:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v768-w7m9-2vmm,"
          Reference binding to nullptr in shape inference
        ",An attacker can cause undefined behavior via binding a reference to null pointer in  tf.raw_ops.SparseFillEmptyRows :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7ghq-fvr3-pj2x,"
          Incomplete validation in `MaxPoolGrad`
        ",An attacker can trigger a denial of service via a segmentation fault in  tf.raw_ops.MaxPoolGrad  caused by missing validation:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-278g-rq84-9hmg,"
          `CHECK`-fail in `MapStage`
        ",An attacker can trigger a denial of service via a  CHECK -fail in  tf.raw_ops.MapStage :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5hj3-vjjf-f5m7,"
          Heap OOB in `SdcaOptimizerV2`
        ",An attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to  tf.raw_ops.SdcaOptimizerV2 :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qr82-2c78-4m8h,"
          Reference binding to nullptr in map operations
        ",An attacker can cause undefined behavior via binding a reference to null pointer in  tf.raw_ops.Map*  and  tf.raw_ops.OrderedMap*  operations:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9697-98pf-4rw7,"
          Heap OOB in `UpperBound` and `LowerBound`
        ",An attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to  tf.raw_ops.UpperBound :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vmjw-c2vp-p33c,"
          Crash in NMS ops caused by integer conversion to unsigned
        ",An attacker can cause denial of service in applications serving models using  tf.raw_ops.NonMaxSuppressionV5  by triggering a division by 0:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2wmv-37vq-52g5,"
          FPE in `tf.raw_ops.UnravelIndex`
        ",An attacker can cause denial of service in applications serving models using  tf.raw_ops.UnravelIndex  by triggering a division by 0:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w74j-v8xh-3w5h,"
          Reference binding to nullptr in unicode encoding
        ",An attacker can cause undefined behavior via binding a reference to null pointer in  tf.raw_ops.UnicodeEncode :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w4xf-2pqw-5mq7,"
          Reference binding to nullptr in `RaggedTensorToVariant`
        ",An attacker can cause undefined behavior via binding a reference to null pointer in  tf.raw_ops.RaggedTensorToVariant :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v82p-hv3v-p6qp,"
          Incomplete validation in MKL requantization
        ","Due to incomplete validation in MKL implementation of requantization, an  attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays:",['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g25h-jr74-qp5j,"
          Incomplete validation in `QuantizeV2`
        ","Due to incomplete validation in  tf.raw_ops.QuantizeV2 , an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays:",['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r4c4-5fpq-56wg,"
          Heap OOB in boosted trees
        ",An attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to  BoostedTreesSparseCalculateBestFeatureSplit :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f5cx-5wr3-5qrc,"
          Reference binding to nullptr in boosted trees
        ",An attacker can generate undefined behavior via a reference binding to nullptr in  BoostedTreesCalculateBestGainsPerFeature :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gf88-j2mg-cc82,"
          Crash caused by integer conversion to unsigned
        ",An attacker can cause a denial of service in  boosted_trees_create_quantile_stream_resource  by using negative arguments:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cm5x-837x-jf3c,"
          Division by 0 in inplace operations
        ",An attacker can cause a floating point exception by calling inplace operations with crafted arguments that would result in a division by 0:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q3g3-h9r4-prrc,"
          Reference binding to nullptr and heap OOB in binary cwise ops
        ","An attacker can cause undefined behavior via binding a reference to null pointer in all binary cwise operations that don't require broadcasting (e.g., gradients of binary cwise operations):",['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6p5r-g9mq-ggh2,"
          Reference binding to nullptr in `MatrixSetDiagV*` ops
        ",An attacker can cause undefined behavior via binding a reference to null pointer in all operations of type  tf.raw_ops.MatrixSetDiagV* :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5xwc-mrhx-5g3m,"
          Reference binding to nullptr in `MatrixDiagV*` ops
        ",An attacker can cause undefined behavior via binding a reference to null pointer in all operations of type  tf.raw_ops.MatrixDiagV* :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4xfp-4pfp-89wg,"
          Reference binding to nullptr in `RaggedTensorToSparse`
        ",An attacker can cause undefined behavior via binding a reference to null pointer in  tf.raw_ops.RaggedTensorToSparse :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7fvx-3jfc-2cpc,"
          Heap OOB in `ResourceScatterUpdate`
        ",An attacker can trigger a read from outside of bounds of heap allocated data by sending invalid arguments to  tf.raw_ops.ResourceScatterUpdate :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2r8p-fg3c-wcj4,"
          Heap OOB and CHECK fail in `ResourceGather`
        ",An attacker can trigger a crash via a  CHECK -fail in debug builds of TensorFlow using  tf.raw_ops.ResourceGather  or a read from outside the bounds of heap allocated data in the same API in a release build:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjj8-32p7-h289,"
          Division by 0 in `ResourceGather`
        ",An attacker can trigger a crash via a floating point exception in  tf.raw_ops.ResourceGather :,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m7fm-4jfh-jrg6,"
          Use after free in boosted trees creation
        ",The implementation for  tf.raw_ops.BoostedTreesCreateEnsemble  can result in a use after free error if an attacker supplies specially crafted arguments:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hpv4-7p9c-mvfr,"
          Heap buffer overflow in `FractionalAvgPoolGrad`
        ",The implementation for  tf.raw_ops.FractionalAvgPoolGrad  can be tricked into accessing data outside of bounds of heap allocated buffers:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f8h4-7rgh-q2gm,"
          Segfault and heap buffer overflow in `{Experimental,}DatasetToTFRecord`
        ",The implementation for  tf.raw_ops.ExperimentalDatasetToTFRecord  and  tf.raw_ops.DatasetToTFRecord  can trigger heap buffer overflow and segmentation fault:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6gv8-p3vj-pxvr,"
          Null pointer dereference in `UncompressElement`
        ",The code for  tf.raw_ops.UncompressElement  can be made to trigger a null pointer dereference:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wp77-4gmm-7cq8,"
          Incorrect validation of `SaveV2` inputs
        ",The code for  tf.raw_ops.SaveV2  does not properly validate the inputs and an attacker can trigger a null pointer dereference:,['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c5x2-p679-95wc,"
          Null pointer dereference in `SparseTensorSliceDataset`
        ","When a user does not supply arguments that determine a valid sparse tensor,  tf.raw_ops.SparseTensorSliceDataset  implementation can be made to dereference a null pointer:",['< 2.6.0'],"['2.3.4, 2.4.3, 2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h6jh-7gv5-28vg,"
          Bad alloc in `StringNGrams` caused by integer conversion
        ",The implementation of  tf.raw_ops.StringNGrams  is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value.,['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9w2p-5mgw-p94c,"
          Integer overflow due to conversion to unsigned
        ",The implementation of  tf.raw_ops.QuantizeAndDequantizeV4Grad  is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value.,['< 2.6.0'],"['2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fcwc-p4fc-c5cc,"
          Null pointer dereference in `MatrixDiagPartOp`
        ","If a user does not provide a valid padding value to  tf.raw_ops.MatrixDiagPartOp , then the code triggers a null pointer dereference (if input is empty) or produces invalid behavior, ignoring all values after the first:",['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-27j5-4p9v-pp67,"
          `std::abort` raised from `TensorListReserve`
        ",Providing a negative element to  num_elements  list argument of   tf.raw_ops.TensorListReserve  causes the runtime to abort the process due to reallocating a  std::vector  to have a negative number of elements:,['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9c8h-vvrj-w2p8,"
          Heap OOB in `RaggedGather`
        ",If the arguments to  tf.raw_ops.RaggedGather  don't determine a valid ragged tensor code can trigger a read from outside of bounds of heap allocated buffers.,['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-ch4f-829c-v5pw,"
          Division by 0 in `ResourceScatterDiv`
        ",The implementation of  tf.raw_ops.ResourceScatterDiv  is vulnerable to a division by 0 error:,['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-95xm-g58g-3p88,"
          Integer division by 0 in sparse reshaping
        ",The implementation of  tf.raw_ops.SparseReshape  can be made to trigger an integral division by 0 exception:,['< 2.6.0'],['2.5.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gh6x-4whr-2qv4,"
          Null pointer dereference and heap OOB read in operations restoring tensors
        ","When restoring tensors via raw APIs, if the tensor name is not provided, TensorFlow can be tricked into dereferencing a null pointer:",['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hwr7-8gxx-fj5p,"
          Null pointer dereference in `RaggedTensorToTensor`
        ",Sending invalid argument for  row_partition_types  of  tf.raw_ops.RaggedTensorToTensor  API results in a null pointer dereference and undefined behavior:,['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c9qf-r67m-p7cg,"
          Null pointer dereference in `CompressElement`
        ",It is possible to trigger a null pointer dereference in TensorFlow by passing an invalid input to  tf.raw_ops.CompressElement :,['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hp4c-x6r7-6555,"
          Floating point exception in `SparseDenseCwiseDiv`
        ",The implementation of  tf.raw_ops.SparseDenseCwiseDiv  is vulnerable to a division by 0 error:,['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cgfm-62j4-v4rf,"
          Heap out of bounds access in sparse reduction operations
        ",The implementation of sparse reduction operations in TensorFlow can trigger accesses outside of bounds of heap allocated data:,['< 2.6.0'],"['2.3.4, 2.4.3,2.5.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wvjw-p9f5-vq28,"
          Segfault in `tf.raw_ops.SparseCountSparseOutput`
        ","Passing invalid arguments (e.g., discovered via fuzzing) to  tf.raw_ops.SparseCountSparseOutput  results in segfault.",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mmq6-q8r3-48fm,"
          Crash in `tf.strings.substr` due to `CHECK`-fail
        ",An attacker can cause a denial of service via  CHECK -fail in   tf.strings.substr  with invalid arguments:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xqfj-cr6q-pc8w,"
          Crash in `tf.transpose` with complex inputs
        ",Passing a complex argument to  tf.transpose  at the same time as passing  conjugate=True  argument results in a crash:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4hvv-7x94-7vq8,"
          Null dereference in Grappler's `TrySimplify`
        ","The implementation of  TrySimplify  has undefined behavior due to dereferencing a null pointer in corner cases that 
result in optimizing a node with no inputs.",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qw5h-7f53-xrp6,"
          Stack overflow in `ParseAttrValue` with nested tensors
        ",The implementation of  ParseAttrValue  can be tricked into stack overflow due to recursion by giving in a specially crafted input.,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8pmx-p244-g88h,"
          Interpreter crash from `tf.io.decode_raw`
        ",The implementation of  tf.io.decode_raw  produces incorrect results and crashes the Python interpreter when combining  fixed_length  and wider datatypes.,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vvg4-vgrv-xfr7,"
          Incomplete validation in `tf.raw_ops.CTCLoss`
        ",Incomplete validation in  tf.raw_ops.CTCLoss  allows an attacker to trigger an OOB read from heap:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2xgj-xhgf-ggjv,"
          Heap buffer overflow in `BandedTriangularSolve`
        ",An attacker can trigger a heap buffer overflow in Eigen implementation of  tf.raw_ops.BandedTriangularSolve :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mq5c-prh3-3f3h,"
          Invalid validation in `QuantizeAndDequantizeV2`
        ",The validation in  tf.raw_ops.QuantizeAndDequantizeV2  allows invalid values for  axis  argument:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9rpc-5v9q-5r7f,"
          Incomplete validation in `SparseReshape`
        ",Incomplete validation in  SparseReshape  results in a denial of service based on a  CHECK -failure.,"['>=2.3.0, < 2.5.0']","['2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gv26-jpj9-c8gq,"
          Incomplete validation in `SparseSparseMinimum`
        ",Incomplete validation in  SparseAdd  results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cjc7-49v2-jp64,"
          Incomplete validation in `SparseAdd`
        ",Incomplete validation in  SparseAdd  results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rgvq-pcvf-hx75,"
          Heap OOB and null pointer dereference in `RaggedTensorToTensor`
        ","Due to lack of validation in  tf.raw_ops.RaggedTensorToTensor , an attacker can exploit an undefined behavior if input arguments are empty:",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h4pc-gx2w-f2xv,"
          Heap OOB read in TFLite
        ",A specially crafted TFLite model could trigger an OOB read on heap in the TFLite implementation of  Split_V :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-crch-j389-5f84,"
          Heap OOB write in TFLite
        ",A specially crafted TFLite model could trigger an OOB write on heap in the TFLite implementation of  ArgMin :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jf7h-7m85-w2v2,"
          Integer overflow in TFLite memory allocation
        ",The TFLite code for allocating  TFLiteIntArray s is  vulnerable to an integer overflow issue :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9c84-4hx6-xmm4,"
          Integer overflow in TFLite concatentation
        ",The TFLite implementation of concatenation is  vulnerable to an integer overflow issue :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8rm6-75mf-7r7r,"
          Division by zero in TFLite's implementation of hashtable lookup
        ",The TFLite implementation of hashtable lookup is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rf3h-xgv5-2q39,"
          Division by zero in TFLite's implementation of `DepthwiseConv`
        ",The implementation of the  DepthwiseConv  TFLite operator is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j8qh-3xrq-c825,"
          Division by zero in TFLite's implementation of `OneHot`
        ",The implementation of the  OneHot  TFLite operator is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-97wf-p777-86jq,"
          Division by zero in TFLite's implementation of `Split`
        ",The implementation of the  Split  TFLite operator is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pmpr-55fj-r229,"
          Division by zero in TFLite's implementation of `SVDF`
        ",The implementation of the  SVDF  TFLite operator is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v52p-hfjf-wg88,"
          Division by zero in TFLite's implementation of `SpaceToBatchNd`
        ",The implementation of the  SpaceToBatchNd  TFLite operator is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cfx7-2xpc-8w4h,"
          Division by zero in TFLite's implementation of `BatchToSpaceNd`
        ",The implementation of the  BatchToSpaceNd  TFLite operator is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4vrf-ff7v-hpgr,"
          Division by zero in TFLite's implementation of `EmbeddingLookup`
        ",const,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3qgw-p4fm-x7gf,"
          Division by zero in TFLite's convolution code
        ",TFLite's  convolution code  has multiple division where the divisor is controlled by the user and not checked to be non-zero. For example:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vf94-36g5-69v8,"
          Division by zero in TFLite's implementation of `DepthToSpace`
        ",The implementation of the  DepthToSpace  TFLite operator is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cwv3-863g-39vx,"
          Stack overflow due to looping TFLite subgraph
        ","TFlite graphs must not have loops between nodes. However, this condition was not checked and an attacker could craft models that would result in infinite loop during evaluation. In certain cases, the infinite loop would be replaced by stack overflow due to too many recursive calls.",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jjr8-m8g8-p6wv,"
          Null pointer dereference in TFLite's `Reshape` operator
        ","The fix for  CVE-2020-15209  missed the case when the target shape of  Reshape  operator is given by the elements of a 1-D tensor. As such, the  fix for the vulnerability  allowed passing a null-buffer-backed tensor with a 1D shape:",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-24x6-8c7m-hv3f,"
          Heap OOB read in TFLite's implementation of `Minimum` or `Maximum`
        ","The implementations of the  Minimum  and  Maximum  TFLite operators can be used to read data outside of bounds of heap allocated objects, if any of the two input tensor arguments are empty.",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vfr4-x8j2-3rf9,"
          Division by zero in TFLite's implementation of `TransposeConv`
        ",The optimized implementation of the  TransposeConv  TFLite operator is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3w67-q784-6w7c,"
          Division by zero in TFLite's implementation of `GatherNd`
        ",The reference implementation of the  GatherNd  TFLite operator is  vulnerable to a division by zero error :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j7rm-8ww4-xx2g,"
          Division by zero in TFLite's implementation of `SpaceToDepth`
        ",The  Prepare  step of the  SpaceToDepth  TFLite operator  does not check for 0 before division .,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-26j7-6w8w-7922,"
          Division by zero in optimized pooling implementations in TFLite
        ",Optimized pooling implementations in TFLite fail to check that the stride arguments are not 0 before calling  ComputePaddingHeightWidth .,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mv78-g7wq-mhp4,"
          Division by zero in padding computation in TFLite
        ","The TFLite computation for size of output after padding,  ComputeOutSize , does not check that the  stride  argument is not 0 before doing the division.",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9xh4-23q4-v6wr,"
          Heap buffer overflow and undefined behavior in `FusedBatchNorm`
        ",The implementation of  tf.raw_ops.FusedBatchNorm  is vulnerable to a heap buffer overflow:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xvjm-fvxx-q3hv,"
          `CHECK`-fail due to integer overflow
        ",An attacker can trigger a denial of service via a  CHECK -fail in  caused by an integer overflow in constructing a new tensor shape:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c45w-2wxr-pp53,"
          Heap OOB read in `tf.raw_ops.Dequantize`
        ","Due to lack of validation in  tf.raw_ops.Dequantize , an attacker can trigger a read from outside of bounds of heap allocated data:",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vq2r-5xvm-3hc3,"
          Segfault in `CTCBeamSearchDecoder`
        ","Due to lack of validation in  tf.raw_ops.CTCBeamSearchDecoder , an attacker can trigger denial of service via segmentation faults:",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-79fv-9865-4qcv,"
          Heap buffer overflow in `MaxPoolGrad`
        ",The implementation of  tf.raw_ops.MaxPoolGrad  is vulnerable to a heap buffer overflow:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6f89-8j54-29xf,"
          Heap buffer overflow in `FractionalAvgPoolGrad`
        ",The implementation of  tf.raw_ops.FractionalAvgPoolGrad  is vulnerable to a heap buffer overflow:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x8h6-xgqx-jqgp,"
          Undefined behavior and `CHECK`-fail in `FractionalMaxPoolGrad`
        ",The implementation of  tf.raw_ops.FractionalMaxPoolGrad  triggers an undefined behavior if one of the input tensors is empty:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-v6r6-84gr-92rm,"
          Heap buffer overflow in `AvgPool3DGrad`
        ",The implementation of  tf.raw_ops.AvgPool3DGrad  is vulnerable to a heap buffer overflow:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7cqx-92hp-x6wh,"
          Heap buffer overflow in `MaxPool3DGradGrad`
        ",The implementation of  tf.raw_ops.MaxPool3DGradGrad  is vulnerable to a heap buffer overflow:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828x-qc2p-wprq,"
          Undefined behavior in `MaxPool3DGradGrad`
        ",The implementation of  tf.raw_ops.MaxPool3DGradGrad  exhibits undefined behavior by dereferencing null pointers backing attacker-supplied empty tensors:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9vpm-rcf4-9wqw,"
          Division by 0 in `MaxPoolGradWithArgmax`
        ",The implementation of  tf.raw_ops.MaxPoolGradWithArgmax  is vulnerable to a division by 0:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6qgm-fv6v-rfpv,"
          Overflow/denial of service in `tf.raw_ops.ReverseSequence`
        ",The implementation of  tf.raw_ops.ReverseSequence  allows for stack overflow and/or  CHECK -fail based denial of service.,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5gqf-456p-4836,"
          Reference binding to nullptr in `SdcaOptimizer`
        ",The implementation of  tf.raw_ops.SdcaOptimizer  triggers undefined behavior due to dereferencing a null pointer:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-whr9-vfh2-7hm6,"
          Memory corruption in `DrawBoundingBoxesV2`
        ",The implementation of  tf.raw_ops.MaxPoolGradWithArgmax  can cause reads outside of bounds of heap allocated data if attacker supplies specially crafted inputs:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3h8m-483j-7xxm,"
          Heap out of bounds read in `RequantizationRange`
        ",The implementation of  tf.raw_ops.MaxPoolGradWithArgmax  can cause reads outside of bounds of heap allocated data if attacker supplies specially crafted inputs:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-545v-42p7-98fq,"
          Heap out of bounds read in `MaxPoolGradWithArgmax`
        ",The implementation of  tf.raw_ops.MaxPoolGradWithArgmax  can cause reads outside of bounds of heap allocated data if attacker supplies specially crafted inputs:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wp3c-xw9g-gpcg,"
          Lack of validation in `SparseDenseCwiseMul`
        ","Due to lack of validation in  tf.raw_ops.SparseDenseCwiseMul , an attacker can trigger denial of service via  CHECK -fails or accesses to outside the bounds of heap allocated data:",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4p4p-www8-8fv9,"
          Reference binding to null in `ParameterizedTruncatedNormal`
        ",An attacker can trigger undefined behavior by binding to null pointer in  tf.raw_ops.ParameterizedTruncatedNormal :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pvrc-hg3f-58r6,"
          Heap OOB access in `Dilation2DBackpropInput`
        ",An attacker can write outside the bounds of heap allocated arrays by passing invalid arguments to  tf.raw_ops.Dilation2DBackpropInput :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6pg-pjwc-j585,"
          Null pointer dereference in `SparseFillEmptyRows`
        ",An attacker can trigger a null pointer dereference in the implementation of  tf.raw_ops.SparseFillEmptyRows :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75f6-78jr-4656,"
          Null pointer dereference in `EditDistance`
        ",An attacker can trigger a null pointer dereference in the implementation of  tf.raw_ops.EditDistance :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-ph87-fvjr-v33w,"
          `CHECK`-fail in `tf.raw_ops.RFFT`
        ",An attacker can cause a denial of service by exploiting a  CHECK -failure coming from the implementation of  tf.raw_ops.RFFT :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-36vm-xw34-x4pj,"
          `CHECK`-fail in `tf.raw_ops.IRFFT`
        ",An attacker can cause a denial of service by exploiting a  CHECK -failure coming from the implementation of  tf.raw_ops.IRFFT :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gvm4-h8j3-rjrq,"
          `CHECK`-fail in `LoadAndRemapMatrix` 
        ",An attacker can cause a denial of service by exploiting a  CHECK -failure coming from  tf.raw_ops.LoadAndRemapMatrix :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8gv3-57p6-g35r,"
          Heap buffer overflow in `RaggedTensorToTensor`
        ",An attacker can cause a heap buffer overflow in  tf.raw_ops.RaggedTensorToTensor :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-59q2-x2qc-4c97,"
          Heap OOB access in unicode ops
        ",An attacker can access data outside of bounds of heap allocated array in  tf.raw_ops.UnicodeEncode :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mqh2-9wrp-vx84,"
          Heap buffer overflow in `SparseSplit`
        ",An attacker can cause a heap buffer overflow in  tf.raw_ops.SparseSplit :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fxqh-cfjm-fp93,"
          Division by 0 in `Reverse`
        ",An attacker can cause a denial of service via a FPE runtime error in  tf.raw_ops.Reverse :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xw93-v57j-fcgh,"
          Division by 0 in `SparseMatMul`
        ",An attacker can cause a denial of service via a FPE runtime error in  tf.raw_ops.SparseMatMul :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r35g-4525-29fq,"
          Division by 0 in `FusedBatchNorm`
        ",An attacker can cause a denial of service via a FPE runtime error in  tf.raw_ops.FusedBatchNorm :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qg48-85hg-mqc5,"
          Division by 0 in `DenseCountSparseOutput`
        ",An attacker can cause a denial of service via a FPE runtime error in  tf.raw_ops.DenseCountSparseOutput :,"['>=2.3.0, < 2.5.0']","['2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jhq9-wm9m-cf89,"
          `CHECK`-failure in `UnsortedSegmentJoin`
        ",An attacker can cause a denial of service by controlling the values of  num_segments  tensor argument for  UnsortedSegmentJoin :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h9px-9vqg-222h,"
          Heap OOB in `QuantizeAndDequantizeV3`
        ",An attacker can read data outside of bounds of heap allocated buffer in  tf.raw_ops.QuantizeAndDequantizeV3 :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vqw6-72r7-fgw7,"
          OOB read in `MatrixTriangularSolve`
        ",The implementation of  MatrixTriangularSolve  fails to terminate kernel execution if one validation condition fails:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-f78g-q7r4-9wcv,"
          Division by 0 in `FractionalAvgPool`
        ",An attacker can cause a runtime division by zero error and denial of service in  tf.raw_ops.FractionalAvgPool :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x83m-p7pv-ch8v,"
          Division by 0 in `QuantizedAdd`
        ",An attacker can cause a runtime division by zero error and denial of service in  tf.raw_ops.QuantizedAdd :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p45v-v4pw-77jr,"
          Division by 0 in `QuantizedBatchNormWithGlobalNormalization`
        ",An attacker can cause a runtime division by zero error and denial of service in  tf.raw_ops.QuantizedBatchNormWithGlobalNormalization :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4fg4-p75j-w5xj,"
          Heap out of bounds in `QuantizedBatchNormWithGlobalNormalization`
        ",An attacker can cause a segfault and denial of service via accessing data outside of bounds in  tf.raw_ops.QuantizedBatchNormWithGlobalNormalization :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m34j-p8rj-wjxq,"
          Division by 0 in `QuantizedBiasAdd`
        ",An attacker can trigger an integer division by zero undefined behavior in  tf.raw_ops.QuantizedBiasAdd :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hmg3-c7xj-6qwm,"
          Heap buffer overflow in `SparseTensorToCSRSparseMatrix`
        ",An attacker can trigger a denial of service via a  CHECK -fail in converting sparse tensors to CSR Sparse matrices:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fphq-gw9m-ghrv,"
          `CHECK`-fail in `CTCGreedyDecoder`
        ",An attacker can trigger a denial of service via a  CHECK -fail in  tf.raw_ops.CTCGreedyDecoder :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6g85-3hm8-83f9,"
          `CHECK`-fail in `QuantizeAndDequantizeV4Grad`
        ",An attacker can trigger a denial of service via a  CHECK -fail in  tf.raw_ops.QuantizeAndDequantizeV4Grad :,"['2.4.0, 2.4.1']",['2.4.2']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xqfj-35wv-m3cr,"
          Null pointer dereference in `StringNGrams`
        ",An attacker can trigger a dereference of a null pointer in  tf.raw_ops.StringNGrams :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4hrh-9vmp-2jgg,"
          Heap buffer overflow in `StringNGrams`
        ",An attacker can cause a heap buffer overflow by passing crafted inputs to  tf.raw_ops.StringNGrams :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xgc3-m89p-vr3x,"
          Heap buffer overflow in `Conv2DBackpropFilter`
        ",An attacker can cause a heap buffer overflow to occur in  Conv2DBackpropFilter :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j8qc-5fqr-52fp,"
          Division by zero in `Conv2DBackpropFilter`
        ",An attacker can cause a division by zero to occur in  Conv2DBackpropFilter :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2gfx-95x2-5v3x,"
          Heap buffer overflow in `QuantizedReshape`
        ",An attacker can cause a heap buffer overflow in  QuantizedReshape  by passing in invalid thresholds for the quantization:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8c89-2vwr-chcq,"
          Heap buffer overflow in `QuantizedResizeBilinear`
        ",An attacker can cause a heap buffer overflow in  QuantizedResizeBilinear  by passing in invalid thresholds for the quantization:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6j9c-grc6-5m6g,"
          `CHECK`-fail in `SparseConcat`
        ",An attacker can trigger a denial of service via a  CHECK -fail in  tf.raw_ops.SparseConcat :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m3f9-w3p3-p669,"
          Heap buffer overflow in `QuantizedMul`
        ",An attacker can cause a heap buffer overflow in  QuantizedMul  by passing in invalid thresholds for the quantization:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-393f-2jr3-cp69,"
          `CHECK`-fail in `DrawBoundingBoxes`
        ",An attacker can trigger a denial of service via a  CHECK  failure by passing an empty image to  tf.raw_ops.DrawBoundingBoxes :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j47f-4232-hvv8,"
          Heap out of bounds read in `RaggedCross`
        ",An attacker can force accesses outside the bounds of heap allocated arrays by passing in invalid tensor values to  tf.raw_ops.RaggedCross :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3qxp-qjq7-w4hf,"
          `CHECK`-fail in `tf.raw_ops.EncodePng`
        ",An attacker can trigger a  CHECK  fail in PNG encoding by providing an empty input tensor as the pixel data:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jfp7-4j67-8r3q,"
          Heap buffer overflow caused by rounding
        ",An attacker can trigger a heap buffer overflow in  tf.raw_ops.QuantizedResizeBilinear  by manipulating input values so that float rounding results in off-by-one error in accessing image elements:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xcwj-wfcm-m23c,"
          Invalid validation in `SparseMatrixSparseCholesky`
        ",An attacker can trigger a null pointer dereference by providing an invalid  permutation  to  tf.raw_ops.SparseMatrixSparseCholesky :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6f84-42vf-ppwp,"
          Division by 0 in `QuantizedMul`
        ",An attacker can trigger a division by 0 in  tf.raw_ops.QuantizedMul :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x4g7-fvjj-prg8,"
          Division by 0 in `QuantizedConv2D`
        ",An attacker can trigger a division by 0 in  tf.raw_ops.QuantizedConv2D :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4vf2-4xcg-65cx,"
          Division by 0 in `Conv2D`
        ",An attacker can trigger a division by 0 in  tf.raw_ops.Conv2D :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xm2v-8rrw-w9pm,"
          Division by 0 in `Conv2DBackpropInput`
        ",An attacker can trigger a division by 0 in  tf.raw_ops.Conv2DBackpropInput :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r4pj-74mg-8868,"
          Division by 0 in `Conv2DBackpropFilter`
        ",An attacker can trigger a division by 0 in  tf.raw_ops.Conv2DBackpropFilter :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2cpx-427x-q2c6,"
          `CHECK`-fail in `AddManySparseToTensorsMap`
        ",An attacker can trigger a denial of service via a  CHECK -fail in   tf.raw_ops.AddManySparseToTensorsMap :,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c968-pq7h-7fxv,"
          Division by 0 in `Conv3DBackprop*`
        ","The  tf.raw_ops.Conv3DBackprop*  operations fail to validate that the input tensors are not empty. In turn, this would result in a division by 0:",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wcv5-qrj6-9pfm,"
          Heap buffer overflow in `Conv3DBackprop*`
        ",Missing validation between arguments to  tf.raw_ops.Conv3DBackprop*  operations can result in heap buffer overflows:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hr84-fqvp-48mm,"
          Segfault in `SparseCountSparseOutput`
        ",Specifying a negative dense shape in  tf.raw_ops.SparseCountSparseOutput  results in a segmentation fault being thrown out from the standard library as  std::vector  invariants are broken.,"['>2.3.0, < 2.5.0']","['2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-772j-h9xw-ffp5,"
          `CHECK`-fail in `SparseCross` due to type confusion
        ",The API of  tf.raw_ops.SparseCross  allows combinations which would result in a  CHECK -failure and denial of service:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-62gx-355r-9fhg,"
          Session operations in eager mode lead to null pointer dereferences
        ","In eager mode (default in TF 2.0 and later), session operations are invalid. However, users could still call the raw ops associated with them and trigger a null pointer dereference:",['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-772p-x54p-hjrv,"
          Division by zero in `Conv3D`
        ",A malicious user could trigger a division by 0 in  Conv3D  implementation:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-84mw-34w6-2q43,"
          Null pointer dereference via invalid Ragged Tensors
        ",Calling  tf.raw_ops.RaggedTensorToVariant  with arguments specifying an invalid ragged tensor results in a null pointer dereference:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hc6c-75p4-hmq4,"
          Reference binding to null pointer in `MatrixDiag*` ops
        ",The implementation of  MatrixDiag*  does not validate that the tensor arguments are non-empty:,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8h46-5m9h-7553,"
          Heap out of bounds write in `RaggedBinCount`
        ","If the  splits  argument of  RaggedBincount  does not specify a valid  SparseTensor , then an attacker can trigger a heap buffer overflow:","['>=2.3.0, < 2.5.0']","['2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-452g-f7fp-9jf7,"
          Type confusion during tensor casts lead to dereferencing null pointers
        ",Calling TF operations with tensors of non-numeric types when the operations expect numeric tensors result in null pointer dereferences.,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4278-2v5v-65r4,"
          Heap buffer overflow in `RaggedBinCount`
        ","If the  splits  argument of  RaggedBincount  does not specify a valid  SparseTensor , then an attacker can trigger a heap buffer overflow:","['>=2.3.0, < 2.5.0']","['2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g4h2-gqm3-c9wq,"
          Segfault in tf.raw_ops.ImmutableConst
        ",Calling  tf.raw_ops.ImmutableConst  with a  dtype  of  tf.resource  or  tf.variant  results in a segfault in the implementation as code assumes that the tensor contents are pure scalars.,['< 2.5.0'],"['2.1.4, 2.2.3, 2.3.3, 2.4.2']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q263-fvxm-m5mw,"
          Heap out of bounds access in MakeEdge
        ","Under certain cases, loading a saved model can result in accessing uninitialized memory while building the computation graph. The  MakeEdge  creates an edge between one output tensor of the  src  node (given by  output_index ) and the input slot of the  dst  node (given by  input_index ). This is only possible if the types of the tensors on both sides coincide, so the function begins by obtaining the corresponding  DataType  values and comparing these for equality:",['< 2.4.0'],"['1.15.5, 2.0.4, 2.1.3, 2.2.2, 2.3.2, 2.4.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m648-33qf-v3gp,"
          CHECK-fail in LSTM with zero-length input
        ",Running an LSTM/GRU model where the LSTM/GRU layer receives an input with zero-length results in a  CHECK  failure when using the CUDA backend.,['< 2.4.0'],"['1.15.5, 2.0.4, 2.1.3, 2.2.2, 2.3.2, 2.4.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9jjw-hf72-3mxw,"
          Heap out of bounds read in filesystem glob matching
        ",The general implementation for matching filesystem paths to globbing pattern is vulnerable to an access out of bounds of  the array holding the directories :,['2.4.0-rc*'],['2.4.0']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-hhvc-g5hv-48c6,"
          Write to immutable memory region
        ","The  tf.raw_ops.ImmutableConst  operation returns a constant tensor created from a memory mapped file which is assumed immutable. However, if the type of the tensor is not an integral type, the operation crashes the Python interpreter as it tries to write to the memory area:",['< 2.4.0'],"['1.15.5, 2.0.4, 2.1.3, 2.2.2, 2.3.2, 2.4.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-c9f3-9wfr-wgh7,"
          Lack of validation in data format attributes
        ",The  tf.raw_ops.DataFormatVecPermute  API does not validate the  src_format  and  dst_format  attributes.  The code  assumes that these two arguments define a permutation of  NHWC .,['< 2.4.0'],"['1.15.5, 2.0.4, 2.1.3, 2.2.2, 2.3.2, 2.4.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qhxx-j73r-qpm2,"
          Uninitialized memory access in Eigen types
        ","Under certain cases, a saved model can trigger use of uninitialized values during code execution. This is caused by having tensor buffers be filled with the default value of the type but forgetting to  default initialize the quantized floating point types in Eigen :",['< 2.4.0'],"['1.15.5, 2.0.4, 2.1.3, 2.2.2, 2.3.2, 2.4.0']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xwhf-g6j5-j5gc,"
          Float cast overflow undefined behavior
        ","When the  boxes  argument of  tf.image.crop_and_resize  has a very large value, the CPU kernel implementation receives it as a C++  nan  floating point value. Attempting to operate on this is undefined behavior which later produces a segmentation fault.",['< 2.4.0'],['2.4.0']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rrfp-j2mp-hq9c,"
          Segfault in `tf.quantization.quantize_and_dequantize`
        ",An attacker can pass an invalid  axis  value to  tf.quantization.quantize_and_dequantize :,['< 2.4.0'],['2.4.0']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-4g9f-63rx-5cw4,"
          Segfault in tf.raw_ops.Switch in eager mode
        ","The  tf.raw_ops.Switch  operation takes as input a tensor and a boolean and outputs two tensors. Depending on the boolean value, one of the tensors is exactly the input tensor whereas the other one should be an empty tensor.",['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q8qj-fc9q-cphr,"
          Undefined behavior in dlpack
        ",If a user passes an invalid argument to  dlpack.to_dlpack  the expected validations will cause variables to bind to  nullptr  while setting a  status  variable to the error condition.,"['2.2.0, 2.3.0']","['2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8fxw-76px-3rxv,"
          Memory leak in dlpack
        ","If a user passes a list of strings to  dlpack.to_dlpack  there is a memory leak following an expected validation failure: 
","['2.2.0, 2.3.0']","['2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjjg-hgv6-h69v,"
          Memory corruption in dlpack.to_dlpack
        ","The implementation of  dlpack.to_dlpack  can be made to use uninitialized memory resulting in further memory corruption. This is because the pybind11 glue code assumes that the argument is a tensor: 
","['2.2.0, 2.3.0']","['2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9mqp-7v2h-2382,"
          Crash due to invalid shape of grad_values in SparseFillEmptyRowsGrad
        ","The  SparseFillEmptyRowsGrad  implementation has incomplete validation of the shapes of its arguments: 
",['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-63xm-rx5p-xvqr,"
          Heap buffer overflow in SparseFillEmptyRowsGrad
        ","The implementation of  SparseFillEmptyRowsGrad  uses a double indexing pattern: 
",['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pg59-2f92-5cph,"
          Heap buffer overflow in weighted sparse count ops
        ","The  SparseCountSparseOutput  and  RaggedCountSparseOutput  implementations don't validate that the  weights  tensor has the same shape as the data. The check exists for  DenseCountSparseOutput , where both tensors are fully specified: 
",['2.3.0'],['2.3.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qc53-44cj-vfvx,"
          Crash due to invalid splits in SparseCountSparseOutput
        ","The  SparseCountSparseOutput  implementation does not validate that the input arguments form a valid sparse tensor. In particular, there is no validation that the  indices  tensor has rank 2. This tensor must be a matrix because code assumes its elements are accessed as elements of a matrix: 
",['2.3.0'],['2.3.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-jc87-6vpp-7ff3,"
          Heap buffer overflow due to invalid indices in SparseCountSparseOutput
        ","The  SparseCountSparseOutput  implementation does not validate that the input arguments form a valid sparse tensor. In particular, there is no validation that the  indices  tensor has the same shape as the  values  one. The values in these tensors are always accessed in parallel: 
",['2.3.0'],['2.3.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x5cp-9pcf-pp3h,"
          Abort due to invalid splits in RaggedCountSparseOutput
        ","The  RaggedCountSparseOutput  does not validate that the input arguments form a valid ragged tensor. In particular, there is no validation that the  splits  tensor has the minimum required number of elements. Code uses this quantity to initialize a different data structure: 
",['2.3.0'],['2.3.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-x7rp-74x2-mjf3,"
          Segfault due to invalid splits in RaggedCountSparseOutput
        ","The  RaggedCountSparseOutput  implementation does not validate that the input arguments form a valid ragged tensor. In particular, there is no validation that the values in the  splits  tensor generate a valid partitioning of the  values  tensor. Thus, the  following code  sets up conditions to cause a heap buffer overflow:",['2.3.0'],['2.3.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p5f8-gfw5-33w4,"
          Heap buffer overflow due to invalid splits in RaggedCountSparseOutput
        ","The  RaggedCountSparseOutput  implementation does not validate that the input arguments form a valid ragged tensor. In particular, there is no validation that the values in the  splits  tensor generate a valid partitioning of the  values  tensor. Hence, this code is prone to heap buffer overflow: 
",['2.3.0'],['2.3.1']
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-h6fg-mjxg-hqq4,"
          Integer truncation in Shard API usage
        ","The  Shard  API in TensorFlow expects the last argument to be a function taking two  int64  (i.e.,  long long ) arguments: 
",['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-xmq7-7fxm-rr79,"
          Format-string vulnerability in TensorFlow's `as_string`
        ","By controlling the  fill  argument of  tf.strings.as_string , a malicious attacker is able to trigger a format string vulnerability due to the way the internal format use in a  printf  call is constructed: ",['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q8gv-q7wr-9jf8,"
          Segfault by calling session-only ops in eager mode
        ","In eager mode, TensorFlow does not set the session state. Hence, calling  tf.raw_ops.GetSessionHandle  or  tf.raw_ops.GetSessionHandleV2  results in a null pointer dereference: 
",['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-g7p5-5759-qv46,"
          Data leak in `tf.raw_ops.StringNGrams`
        ",The  data_splits  argument of  tf.raw_ops.StringNGrams  lacks validation. This allows a user to pass values that can cause heap overflow errors and even leak contents of memory,['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-w5gh-2wr2-pm6g,"
          Incomplete validation in TensorFlow's SavedModel's constant nodes causes segfaults
        ",Changing the TensorFlow's  SavedModel  protocol buffer and altering the name of required keys results in segfaults and data corruption while loading the model. This can cause a denial of service in products using  tensorflow-serving  or other inference-as-a-service installments.,['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-q4qf-3fc6-8x34,"
          Segfault and data corruption caused by negative indexing in TFLite
        ","To mimic Python's indexing with negative values, TFLite uses  ResolveAxis  to convert negative values to positive indices. However, the only check that the converted index is now valid is only present in debug builds: 
",['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-mxjj-953w-2c2v,"
          Data corruption due to dimension mismatch in TFLite
        ","When determining the common dimension size of two tensors, TFLite uses a  DCHECK  which is no-op outside of debug compilation modes: 
",['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qh32-6jjc-qprm,"
          Null pointer dereference in TFLite
        ","A crafted TFLite model can force a node to have as input a tensor backed by a  nullptr  buffer. This can be achieved by changing a buffer index in the flatbuffer serialization to convert a read-only tensor to a read-write one. The runtime assumes that these buffers are written to before a possible read, hence they are initialized with  nullptr : 
",['< 2.3.0'],"['1.15.4, 2.0.3, 2.1.2, 2.2.1, 2.3.1']"
