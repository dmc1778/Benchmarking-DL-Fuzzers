Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.clip_by_value/1.py
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
2023-04-19 13:42:05.715849: W tensorflow/core/framework/op_kernel.cc:1733] UNKNOWN: JIT compilation failed.
{'res_cpu': <tf.Tensor: shape=(1, 5), dtype=uint16, numpy=array([[1, 1, 1, 1, 1]], dtype=uint16)>, 'err_gpu': 'Error:JIT compilation failed. [Op:Minimum]'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.clip_by_value/2.py
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
2023-04-19 13:42:08.053784: W tensorflow/core/framework/op_kernel.cc:1733] UNKNOWN: JIT compilation failed.
{'res_cpu': <tf.Tensor: shape=(1, 1), dtype=uint64, numpy=array([[1]], dtype=uint64)>, 'err_gpu': 'Error:JIT compilation failed. [Op:Minimum]'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.clip_by_value/3.py
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
2023-04-19 13:42:10.368034: W tensorflow/core/framework/op_kernel.cc:1733] UNKNOWN: JIT compilation failed.
{'res_cpu': <tf.Tensor: shape=(1, 472, 496, 3), dtype=uint64, numpy=
array([[[[204, 131, 238],
         [ 81, 202,  88],
         [254,   3,  84],
         ...,
         [ 89,  10,  43],
         [ 80, 251, 127],
         [  4, 117,  12]],

        [[206, 173, 103],
         [ 93, 181, 108],
         [  6,  95, 227],
         ...,
         [ 13, 108, 234],
         [ 87, 144, 176],
         [108, 153, 184]],

        [[157, 159, 144],
         [132, 119,  88],
         [ 49,  46,  50],
         ...,
         [192, 190,  75],
         [107,  22, 230],
         [ 49, 170,   1]],

        ...,

        [[  9, 137, 129],
         [ 17, 128, 154],
         [127, 166, 137],
         ...,
         [  3, 168,  37],
         [ 25,  38,  72],
         [198, 215, 135]],

        [[207, 175, 192],
         [ 53, 187,  64],
         [ 18,  12,   5],
         ...,
         [152, 158, 113],
         [100, 160, 232],
         [ 21, 217, 171]],

        [[ 35, 102, 190],
         [196, 150, 179],
         [125, 166, 189],
         ...,
         [100,  54, 217],
         [132, 207, 116],
         [223, 115, 121]]]], dtype=uint64)>, 'err_gpu': 'Error:JIT compilation failed. [Op:Minimum]'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.clip_by_value/4.py
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
2023-04-19 13:42:12.655977: W tensorflow/core/framework/op_kernel.cc:1733] UNKNOWN: JIT compilation failed.
{'res_cpu': <tf.Tensor: shape=(3, 3, 1), dtype=uint32, numpy=
array([[[4294967295],
        [4294967295],
        [4294967295]],

       [[4294967295],
        [4294967295],
        [4294967295]],

       [[4294967295],
        [4294967295],
        [4294967295]]], dtype=uint32)>, 'err_gpu': 'Error:JIT compilation failed. [Op:Minimum]'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.clip_by_value/5.py
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
2023-04-19 13:42:15.075816: W tensorflow/core/framework/op_kernel.cc:1733] UNKNOWN: JIT compilation failed.
{'res_cpu': <tf.Tensor: shape=(2, 3), dtype=uint16, numpy=
array([[65535, 65535, 65535],
       [65535, 65535, 65535]], dtype=uint16)>, 'err_gpu': 'Error:JIT compilation failed. [Op:Minimum]'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.clip_by_value/6.py
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
2023-04-19 13:42:17.483845: W tensorflow/core/framework/op_kernel.cc:1733] UNKNOWN: JIT compilation failed.
{'res_cpu': <tf.Tensor: shape=(1, 224, 224, 3), dtype=int8, numpy=
array([[[[ 1,  1,  1],
         [ 1,  1,  1],
         [ 1,  1,  1],
         ...,
         [ 1, -1, -1],
         [ 1, -1, -1],
         [-1,  1, -1]],

        [[ 1, -1,  1],
         [ 1,  1, -1],
         [-1,  1, -1],
         ...,
         [ 1,  1, -1],
         [-1, -1, -1],
         [ 1, -1,  1]],

        [[-1,  1, -1],
         [-1, -1, -1],
         [-1,  1, -1],
         ...,
         [-1,  1, -1],
         [-1,  1,  1],
         [ 1,  1,  1]],

        ...,

        [[-1, -1, -1],
         [ 1,  1, -1],
         [ 1, -1,  1],
         ...,
         [ 1,  1,  1],
         [ 1, -1,  1],
         [ 1, -1,  1]],

        [[-1, -1,  1],
         [ 1, -1, -1],
         [ 1,  1, -1],
         ...,
         [-1, -1,  1],
         [ 1, -1,  1],
         [ 1, -1, -1]],

        [[ 1,  1,  1],
         [ 1,  1, -1],
         [ 1,  1,  1],
         ...,
         [ 1, -1, -1],
         [ 1,  1, -1],
         [ 1, -1, -1]]]], dtype=int8)>, 'err_gpu': 'Error:JIT compilation failed. [Op:Minimum]'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.clip_by_value/7.py
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
error: Can't find libdevice directory ${CUDA_DIR}/nvvm/libdevice
2023-04-19 13:42:19.831830: W tensorflow/core/framework/op_kernel.cc:1733] UNKNOWN: JIT compilation failed.
{'res_cpu': <tf.Tensor: shape=(1, 472, 496, 3), dtype=uint16, numpy=
array([[[[214, 252, 214],
         [193,  72, 226],
         [185,  21, 163],
         ...,
         [101, 122, 163],
         [190, 122, 220],
         [ 80, 211, 158]],

        [[156, 211, 222],
         [ 12, 144,  79],
         [ 20, 185, 104],
         ...,
         [202, 122, 138],
         [217, 253,  40],
         [ 62,  78, 210]],

        [[ 96,  27,  22],
         [161, 241,  86],
         [189,  55,  79],
         ...,
         [ 25, 139,  72],
         [208,  79, 149],
         [216, 148,  47]],

        ...,

        [[232, 144, 207],
         [187, 172, 149],
         [ 35,  48,   0],
         ...,
         [255, 203, 208],
         [127, 146,  18],
         [ 61,  69, 128]],

        [[116,  35,  25],
         [172,  98, 111],
         [231, 195, 184],
         ...,
         [106,  60, 248],
         [117, 112, 142],
         [189,   8,  45]],

        [[ 97, 240, 163],
         [240,  47,   4],
         [122,  18, 171],
         ...,
         [ 26, 126, 104],
         [239, 200, 188],
         [ 27, 168, 252]]]], dtype=uint16)>, 'err_gpu': 'Error:JIT compilation failed. [Op:Minimum]'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.Conv3D/1.py
2023-04-19 13:42:23.935156: W tensorflow/stream_executor/gpu/asm_compiler.cc:80] Couldn't get ptxas version string: INTERNAL: Couldn't invoke ptxas --version
2023-04-19 13:42:23.935805: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] INTERNAL: Failed to launch ptxas
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
{'err_cpu': 'Error:Exception encountered when calling layer "conv3d_transpose" (type Conv3D).\n\nCPU implementation of Conv3D currently only supports the NHWC tensor format. [Op:Conv3D]\n\nCall arguments received by layer "conv3d_transpose" (type Conv3D):\n  • inputs=tf.Tensor(shape=(2, 5, 7, 6, 3), dtype=float32)', 'res_gpu': <tf.Tensor: shape=(2, 3, 3, 2, 1), dtype=float32, numpy=
array([[[[[-0.7430907 ],
          [-1.0934966 ]],

         [[-1.3006463 ],
          [-1.7713584 ]],

         [[-1.483143  ],
          [-1.3600109 ]]],


        [[[-0.8251654 ],
          [-1.3346809 ]],

         [[-0.6365075 ],
          [-1.2511069 ]],

         [[-0.11610788],
          [-1.4023283 ]]],


        [[[-0.6772661 ],
          [ 0.19408323]],

         [[ 0.4431197 ],
          [ 0.19698843]],

         [[ 0.18808112],
          [-0.27913016]]]],



       [[[[-1.3673697 ],
          [-0.9861346 ]],

         [[-1.0607587 ],
          [-1.1128914 ]],

         [[-1.3350414 ],
          [-1.4112911 ]]],


        [[[-0.9416051 ],
          [-0.8147452 ]],

         [[-0.8003806 ],
          [-0.9745075 ]],

         [[-0.7647407 ],
          [-0.16731143]]],


        [[[-0.22533008],
          [ 0.08281571]],

         [[ 0.2611676 ],
          [ 0.23179731]],

         [[ 0.15333632],
          [-0.29364422]]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.Conv3D/2.py
2023-04-19 13:42:27.401438: W tensorflow/stream_executor/gpu/asm_compiler.cc:80] Couldn't get ptxas version string: INTERNAL: Couldn't invoke ptxas --version
2023-04-19 13:42:27.401899: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] INTERNAL: Failed to launch ptxas
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
{'err_cpu': 'Error:Exception encountered when calling layer "conv3d_transpose" (type Conv3D).\n\nCPU implementation of Conv3D currently only supports the NHWC tensor format. [Op:Conv3D]\n\nCall arguments received by layer "conv3d_transpose" (type Conv3D):\n  • inputs=tf.Tensor(shape=(1, 5, 7, 6, 3), dtype=float32)', 'res_gpu': <tf.Tensor: shape=(1, 2, 3, 2, 1), dtype=float32, numpy=
array([[[[[ 1.4191427 ],
          [ 1.045409  ]],

         [[ 1.2626972 ],
          [ 1.1011117 ]],

         [[ 1.2434449 ],
          [ 0.9149926 ]]],


        [[[-0.06500512],
          [ 0.61193085]],

         [[ 0.4625224 ],
          [ 0.26447743]],

         [[-0.17416781],
          [ 0.80444777]]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.Conv3D/3.py
2023-04-19 13:42:30.747801: W tensorflow/stream_executor/gpu/asm_compiler.cc:80] Couldn't get ptxas version string: INTERNAL: Couldn't invoke ptxas --version
2023-04-19 13:42:30.748231: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] INTERNAL: Failed to launch ptxas
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
{'err_cpu': 'Error:Exception encountered when calling layer "conv3d_transpose" (type Conv3D).\n\nCPU implementation of Conv3D currently only supports the NHWC tensor format. [Op:Conv3D]\n\nCall arguments received by layer "conv3d_transpose" (type Conv3D):\n  • inputs=tf.Tensor(shape=(1, 5, 7, 6, 3), dtype=float32)', 'res_gpu': <tf.Tensor: shape=(1, 2, 3, 2, 1), dtype=float32, numpy=
array([[[[[-0.86061573],
          [-0.4854648 ]],

         [[ 0.07803738],
          [-0.48018014]],

         [[-0.619575  ],
          [ 0.08175373]]],


        [[[ 0.60768557],
          [ 1.0805447 ]],

         [[ 0.2522229 ],
          [ 0.97238916]],

         [[ 0.9187476 ],
          [ 0.03159106]]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/1.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.02342452,  0.1793681 , -0.07791284, -0.25713062, -0.2157598 ,
         0.11438509, -0.07120743,  0.11808275]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.02342453,  0.17936811, -0.07791284, -0.2571306 , -0.2157598 ,
         0.11438512, -0.07120745,  0.11808274]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/10.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 6), dtype=float32, numpy=
array([[ 0.23389   , -0.03375747,  0.33245587, -0.27477217, -0.38420486,
        -0.19229116],
       [ 0.18171638, -0.08346426,  0.3005863 , -0.22847414, -0.12915014,
        -0.26307094],
       [ 0.20978874,  0.02085565,  0.33727598, -0.27875608, -0.33612382,
        -0.30853626]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 6), dtype=float32, numpy=
array([[ 0.23389004, -0.03375749,  0.33245587, -0.27477214, -0.38420486,
        -0.19229117],
       [ 0.18171638, -0.08346425,  0.30058628, -0.22847416, -0.12915015,
        -0.26307088],
       [ 0.20978877,  0.02085563,  0.33727595, -0.2787561 , -0.3361238 ,
        -0.3085362 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/100.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 1, 128), dtype=float32, numpy=
array([[[ 0.02257982,  0.01109989, -0.0311881 , ..., -0.02710414,
         -0.00215583, -0.01955612]],

       [[ 0.01405063, -0.00201472, -0.02134417, ..., -0.02602504,
         -0.00809279, -0.00518349]],

       [[ 0.02156596,  0.0113961 , -0.01438206, ..., -0.00843201,
         -0.0111633 , -0.014703  ]],

       ...,

       [[ 0.01196942,  0.00640533, -0.01059326, ..., -0.00066754,
         -0.00098935, -0.00775331]],

       [[ 0.01349282, -0.00795679, -0.0181763 , ..., -0.02536817,
         -0.01486073,  0.0020154 ]],

       [[ 0.01699045, -0.00092412, -0.02925552, ..., -0.02010268,
         -0.00060887, -0.00673826]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 128), dtype=float32, numpy=
array([[[ 0.03945191,  0.01526905, -0.05128787, ..., -0.04320083,
         -0.00928758, -0.03211522]],

       [[ 0.02533495, -0.00497313, -0.03429556, ..., -0.04275389,
         -0.01789217, -0.00830759]],

       [[ 0.03529926,  0.01846787, -0.02473297, ..., -0.0116864 ,
         -0.02312615, -0.02245331]],

       ...,

       [[ 0.01928394,  0.01054053, -0.01902903, ..., -0.00022945,
         -0.00359058, -0.01081512]],

       [[ 0.02446253, -0.01432287, -0.02886217, ..., -0.04164267,
         -0.02955304,  0.00407784]],

       [[ 0.03056484, -0.00442531, -0.04890559, ..., -0.03235548,
         -0.00568671, -0.00915709]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/101.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 4), dtype=float32, numpy=
array([[-0.4005739 ,  0.39252484, -0.0089505 ,  0.2353223 ],
       [-0.30102092,  0.2736337 , -0.00125039,  0.21888033],
       [-0.3010822 ,  0.33627793,  0.0589454 ,  0.23522514],
       [-0.3318361 ,  0.30897906,  0.04410981,  0.20806538]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 4), dtype=float32, numpy=
array([[-0.40057388,  0.39252487, -0.00895048,  0.23532231],
       [-0.30102098,  0.2736337 , -0.00125039,  0.21888036],
       [-0.3010822 ,  0.3362778 ,  0.05894541,  0.23522516],
       [-0.33183607,  0.3089791 ,  0.04410981,  0.20806539]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/102.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.0824151 , -0.13789779, -0.20285016,  0.03865179,  0.12908113,
         0.30443937, -0.1035708 , -0.04857098]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.0824151 , -0.13789777, -0.20285016,  0.03865182,  0.12908117,
         0.3044394 , -0.1035708 , -0.048571  ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/103.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(50, 63), dtype=float32, numpy=
array([[-0.20209344, -0.37540564, -0.10131719, ...,  0.25723296,
         0.06697723, -0.04730922],
       [-0.22164962, -0.25789037, -0.1233559 , ...,  0.01495908,
         0.00401567, -0.04908643],
       [-0.25677064, -0.28393108, -0.11446422, ...,  0.03234559,
         0.11657155, -0.08091184],
       ...,
       [-0.07047494, -0.36082616, -0.0014624 , ...,  0.03538392,
         0.11794072, -0.04746782],
       [-0.06136819, -0.30570588, -0.04010227, ..., -0.02157795,
         0.13146381, -0.10394008],
       [-0.20705433, -0.24310036, -0.2659917 , ...,  0.1752509 ,
         0.10859915, -0.16854192]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(50, 63), dtype=float32, numpy=
array([[-0.20974766, -0.39068356, -0.0927354 , ...,  0.28319368,
         0.07654587, -0.0298565 ],
       [-0.23948684, -0.28296006, -0.1253702 , ...,  0.02263327,
        -0.00158596, -0.01214607],
       [-0.28781292, -0.2819213 , -0.12447282, ...,  0.03800409,
         0.15929693, -0.12633307],
       ...,
       [-0.04729231, -0.38278303,  0.0176869 , ...,  0.05343379,
         0.14913522, -0.04817404],
       [-0.04678054, -0.31401837, -0.02840142, ...,  0.00078708,
         0.1617011 , -0.13551714],
       [-0.2271813 , -0.25331408, -0.28305453, ...,  0.20430557,
         0.15597919, -0.21821593]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/104.py
2023-04-19 13:42:51.600946: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at cudnn_rnn_ops.cc:1553 : UNKNOWN: CUDNN_STATUS_BAD_PARAM
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): 'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)'
{'res_cpu': <tf.Tensor: shape=(4, 0), dtype=float32, numpy=array([], shape=(4, 0), dtype=float32)>, 'err_gpu': 'Error:Exception encountered when calling layer "lstm" (type LSTM).\n\nCUDNN_STATUS_BAD_PARAM\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): \'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)\' [Op:CudnnRNN]\n\nCall arguments received by layer "lstm" (type LSTM):\n  • inputs=tf.Tensor(shape=(4, 4, 10), dtype=float32)\n  • mask=None\n  • training=None\n  • initial_state=None'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/105.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[-0.12272727, -0.12831596,  0.04458315, -0.02225068, -0.06295334,
         0.30288407, -0.08478503,  0.12326749],
       [-0.17447738, -0.01431843,  0.02363192, -0.0445373 , -0.03974469,
         0.32228646, -0.03348203,  0.2078429 ],
       [-0.26341337, -0.05370425, -0.02681437, -0.03830525, -0.05092878,
         0.30033904, -0.10511196,  0.15418254]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[-0.12272727, -0.12831596,  0.04458316, -0.02225069, -0.06295336,
         0.30288407, -0.08478504,  0.12326752],
       [-0.1744774 , -0.01431843,  0.02363192, -0.04453731, -0.0397447 ,
         0.32228643, -0.03348203,  0.20784292],
       [-0.2634134 , -0.05370427, -0.02681438, -0.03830526, -0.05092882,
         0.3003391 , -0.10511196,  0.15418255]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/106.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 4), dtype=float32, numpy=
array([[-0.0147798 ,  0.08684427,  0.13379957,  0.26103336]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 4), dtype=float32, numpy=
array([[-0.01477979,  0.08684427,  0.1337996 ,  0.26103336]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/107.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.34930816,  0.04623251,  0.19414702,  0.09603671, -0.19144857,
         0.33335665,  0.11856588,  0.24324335]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.34930813,  0.04623248,  0.194147  ,  0.09603674, -0.1914486 ,
         0.33335665,  0.1185659 ,  0.24324341]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/108.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[ 0.00224803,  0.23705511, -0.2657086 , -0.25501186,  0.217459  ,
        -0.04124779]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[ 0.00224802,  0.23705512, -0.26570863, -0.25501186,  0.21745905,
        -0.04124781]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/109.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.03432521,  0.06478313,  0.02947105,  0.0031211 , -0.02272495,
         0.09068552, -0.12923987, -0.20407484]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.0343252 ,  0.06478315,  0.02947103,  0.00312112, -0.02272496,
         0.09068555, -0.12923983, -0.20407481]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/11.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 1, 128), dtype=float32, numpy=
array([[[-0.02305789,  0.03114474,  0.03685816, ...,  0.0298957 ,
         -0.01397542,  0.01475755]],

       [[-0.01673825,  0.05085302,  0.04234864, ...,  0.01523442,
         -0.02502952,  0.02025858]],

       [[-0.01160977,  0.01523718,  0.03270473, ...,  0.01675396,
         -0.0249989 ,  0.01504841]],

       ...,

       [[-0.01929825,  0.02584638,  0.04603981, ...,  0.02884437,
          0.00208573,  0.02486995]],

       [[-0.01430011,  0.0515175 ,  0.03590435, ...,  0.01563979,
         -0.00788905,  0.01843144]],

       [[-0.01545433,  0.01466656,  0.046885  , ...,  0.02500955,
         -0.01540191,  0.02395584]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 128), dtype=float32, numpy=
array([[[-0.04506705,  0.05727623,  0.06814533, ...,  0.05129044,
         -0.02208454,  0.02511413]],

       [[-0.03430485,  0.08990143,  0.07770162, ...,  0.02669615,
         -0.0424408 ,  0.03442046]],

       [[-0.02367599,  0.02753396,  0.05746318, ...,  0.02796059,
         -0.0400593 ,  0.0246457 ]],

       ...,

       [[-0.03625163,  0.04740999,  0.0826009 , ...,  0.05051226,
          0.00197231,  0.04508644]],

       [[-0.0286405 ,  0.09134868,  0.06684615, ...,  0.02821647,
         -0.01512555,  0.03261778]],

       [[-0.0299044 ,  0.02701428,  0.08216988, ...,  0.0426516 ,
         -0.02520308,  0.04163719]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/110.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.16232114, -0.08844633,  0.06080941,  0.25219688, -0.21017773,
         0.17649516, -0.19663411, -0.07452068]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.16232115, -0.08844633,  0.06080941,  0.25219685, -0.21017775,
         0.17649515, -0.19663413, -0.07452073]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/111.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 128), dtype=float32, numpy=
array([[-1.1622514e-02, -5.8203442e-03,  1.4892636e-02, ...,
        -1.8119421e-02,  3.3893455e-02, -9.5365001e-03],
       [-1.9558597e-02, -1.2739526e-02,  2.4937479e-02, ...,
        -1.8377095e-02,  3.0749332e-02, -1.2571070e-02],
       [ 6.2121945e-03, -1.5849419e-02,  1.7570620e-02, ...,
        -2.5380557e-02,  2.3021925e-02,  2.5301203e-03],
       ...,
       [ 4.6313992e-03, -2.1131441e-02,  1.3166975e-02, ...,
        -2.2495151e-02,  2.1057904e-02, -4.8850388e-03],
       [-1.3950755e-02,  1.5369616e-02,  1.4612366e-02, ...,
        -3.6846330e-05,  7.9976134e-03,  2.8070004e-03],
       [-8.1380494e-03, -7.9718390e-03,  1.6584154e-02, ...,
        -1.9029528e-02,  2.7721584e-02, -3.2976468e-04]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 128), dtype=float32, numpy=
array([[-0.01883584, -0.00898999,  0.02456583, ..., -0.02756191,
         0.0538153 , -0.0172973 ],
       [-0.03136742, -0.01957409,  0.04137308, ..., -0.02948815,
         0.04844826, -0.02270521],
       [ 0.00945678, -0.02724782,  0.02764892, ..., -0.03958289,
         0.03611794,  0.00514951],
       ...,
       [ 0.0085209 , -0.03612019,  0.02258574, ..., -0.03750005,
         0.03387113, -0.00791392],
       [-0.02490441,  0.02766291,  0.02120969, ...,  0.00551024,
         0.01031111,  0.0027764 ],
       [-0.01559456, -0.01262423,  0.02493635, ..., -0.02921451,
         0.04422453,  0.00032038]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/112.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[ 0.05821273, -0.20669621, -0.2783077 ,  0.20705482, -0.39158547,
         0.24655056, -0.20142406]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[ 0.05821274, -0.20669626, -0.27830768,  0.2070548 , -0.3915855 ,
         0.24655057, -0.20142408]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/113.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 7), dtype=float32, numpy=
array([[-1.3945509e-01, -2.5881428e-01, -2.4885491e-01,  5.6244120e-02,
         1.6077964e-01,  5.0153267e-02,  1.4095163e-01],
       [-1.0537733e-01, -2.0380345e-01, -3.1948051e-01,  2.8467758e-02,
         9.0797059e-03, -1.1088687e-01,  7.7368081e-02],
       [ 2.8243571e-04, -2.0390910e-01, -2.3613612e-01,  9.1125637e-02,
         1.6014475e-01,  8.4540367e-02,  2.4087887e-02]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 7), dtype=float32, numpy=
array([[-1.3945507e-01, -2.5881433e-01, -2.4885491e-01,  5.6244120e-02,
         1.6077964e-01,  5.0153267e-02,  1.4095162e-01],
       [-1.0537738e-01, -2.0380342e-01, -3.1948051e-01,  2.8467765e-02,
         9.0796966e-03, -1.1088688e-01,  7.7368096e-02],
       [ 2.8242645e-04, -2.0390914e-01, -2.3613614e-01,  9.1125600e-02,
         1.6014476e-01,  8.4540389e-02,  2.4087891e-02]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/114.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 1, 16), dtype=float32, numpy=
array([[[-1.83043908e-02,  5.13155088e-02, -4.06657085e-02,
         -2.43019219e-02, -3.89327742e-02,  2.68033966e-02,
         -8.75382945e-02, -7.54469587e-03, -2.46598069e-02,
         -3.52251269e-02, -3.45893167e-02, -1.03649090e-03,
          6.05439506e-02,  3.01887933e-02, -3.71724702e-02,
         -7.64875039e-02]],

       [[-3.58863771e-02,  9.03447419e-02, -6.92306757e-02,
          1.74254901e-03, -6.63965866e-02,  1.41336769e-02,
         -9.33449268e-02,  3.03319446e-03, -6.24067262e-02,
         -2.04169527e-02, -5.62690943e-02,  1.91457919e-03,
          3.05939075e-02, -1.56683624e-02,  1.25838304e-02,
         -4.83619496e-02]],

       [[-3.51336971e-02,  8.20420682e-02, -6.22265004e-02,
          1.55670464e-03, -6.18491024e-02,  1.07180160e-02,
         -8.67766291e-02,  1.96012598e-03, -5.48743382e-02,
         -1.87247880e-02, -5.36633395e-02,  1.30124216e-03,
          2.64403298e-02, -1.65504664e-02,  1.23560233e-02,
         -4.62983921e-02]],

       [[-4.02919874e-02,  4.18787375e-02, -5.17216921e-02,
         -4.42033354e-03, -9.46050137e-02,  2.99450345e-02,
         -9.32643041e-02, -4.96373363e-02, -1.82120893e-02,
         -3.98152173e-02, -6.13872223e-02,  3.06676272e-02,
          1.03052368e-03, -2.34658532e-02,  2.12478098e-02,
         -4.83649969e-02]],

       [[-5.87351732e-02,  8.99038538e-02, -3.51022147e-02,
          1.48670538e-03, -3.83263864e-02, -3.51726264e-02,
         -7.61266574e-02,  3.65640558e-02, -5.28793931e-02,
         -4.11115400e-03, -6.43299893e-02, -2.67950911e-02,
          2.70183142e-02, -3.66697386e-02,  8.29571858e-03,
         -7.64109194e-02]],

       [[-3.00683640e-02,  4.16302159e-02, -3.05430796e-02,
         -2.15022638e-02, -4.35960703e-02,  2.59712283e-02,
         -7.01229274e-02, -2.65513416e-02, -1.61639601e-02,
         -3.37277353e-02, -3.56929675e-02,  1.87979527e-02,
          2.98287682e-02,  4.20431048e-03, -1.52887255e-02,
         -7.14150667e-02]],

       [[ 1.84626244e-02,  1.62669718e-02, -3.15089151e-02,
         -2.36951206e-02, -1.63067337e-02,  4.87487689e-02,
         -5.48784994e-02, -1.24167046e-02, -6.66674646e-03,
         -3.37915495e-02,  3.30827944e-03,  1.51562423e-03,
          6.68516979e-02,  6.76833242e-02, -5.34239635e-02,
         -2.02989187e-02]],

       [[-6.13319278e-02,  1.03715017e-01, -5.39875105e-02,
         -3.07244584e-02, -6.83076829e-02,  2.66474448e-02,
         -1.04566112e-01, -2.77895294e-02, -5.25702424e-02,
         -4.51426655e-02, -6.41860440e-02,  3.19838449e-02,
          3.69360298e-02, -1.99880060e-02, -5.62158227e-03,
         -1.40083551e-01]],

       [[-2.00499152e-03,  3.03541776e-02, -5.51047772e-02,
         -1.29932361e-02, -7.44529441e-02,  5.26070707e-02,
         -9.64904204e-02, -3.60561199e-02, -1.40422471e-02,
         -4.64154296e-02, -3.37502100e-02,  1.75746046e-02,
          4.74733524e-02,  4.11070809e-02, -2.13626083e-02,
         -2.38297284e-02]],

       [[-5.15261889e-02,  1.34588480e-01, -7.53355175e-02,
         -1.72042362e-02, -5.52097633e-02,  1.58776678e-02,
         -1.09825581e-01,  1.34233600e-02, -9.09990743e-02,
         -2.98303254e-02, -6.17280416e-02,  9.53531300e-04,
          5.87592162e-02, -1.10723665e-02, -6.34825369e-03,
         -1.17770106e-01]],

       [[-4.43465598e-02,  1.10351034e-01, -5.42660654e-02,
         -2.64255702e-02, -3.19599807e-02,  2.16753874e-02,
         -8.62662271e-02,  2.27766996e-03, -6.59783185e-02,
         -3.09128296e-02, -4.41570655e-02,  1.02912383e-02,
          5.07262647e-02, -3.02158552e-03, -1.65415592e-02,
         -1.11554094e-01]],

       [[-3.11455745e-02,  1.00198232e-01, -5.83648421e-02,
         -3.91663425e-02, -1.64206605e-02,  7.77168795e-02,
         -6.36306331e-02, -3.72990631e-02, -5.91679662e-02,
         -5.19191474e-02, -1.43417018e-02,  5.89177161e-02,
          4.20830883e-02,  1.33105647e-02, -1.85265541e-02,
         -1.12064756e-01]],

       [[-5.99132776e-02,  5.72966523e-02, -6.20725900e-02,
         -1.63026676e-02, -1.31332561e-01,  1.87045243e-02,
         -1.49677500e-01, -4.35761735e-02, -1.86609216e-02,
         -5.81446849e-02, -1.01013742e-01,  1.48599921e-02,
          4.23147231e-02, -1.22592580e-02, -6.34197891e-03,
         -1.22579634e-01]],

       [[-5.71583807e-02,  6.92620575e-02, -4.22658585e-02,
         -1.66459866e-02, -6.92871064e-02,  1.46683697e-02,
         -8.75788927e-02, -3.11442912e-02, -3.19408104e-02,
         -3.45935710e-02, -6.12440817e-02,  2.50481367e-02,
          1.41578615e-02, -3.02884467e-02,  1.15841748e-02,
         -9.60183665e-02]],

       [[-5.78694828e-02,  6.52912557e-02, -3.69244702e-02,
         -2.42399797e-02, -6.85659721e-02,  1.83520075e-02,
         -9.10139754e-02, -3.66325304e-02, -2.51842681e-02,
         -4.00310643e-02, -6.12072013e-02,  2.96881422e-02,
          2.06513144e-02, -2.39564870e-02,  1.17872457e-03,
         -1.10544004e-01]],

       [[-4.06123325e-02,  9.92707536e-02, -8.68227929e-02,
         -1.88688119e-03, -1.00551412e-01,  2.53682602e-02,
         -1.30507112e-01, -6.14975346e-03, -6.98049143e-02,
         -3.66839804e-02, -7.63910636e-02,  3.18663544e-03,
          5.10003157e-02, -6.32226141e-03,  4.59348364e-03,
         -7.15078637e-02]],

       [[-2.22120993e-02,  1.34408437e-02, -7.31666619e-03,
         -2.12035421e-02, -2.36025769e-02,  1.30050033e-02,
         -4.46229614e-02, -2.11997535e-02,  1.77095807e-03,
         -2.43545324e-02, -2.30483860e-02,  1.04382616e-02,
          2.36519519e-02,  6.70612557e-03, -2.21211147e-02,
         -5.60119227e-02]],

       [[-2.59287097e-02,  4.07229401e-02, -4.65487838e-02,
         -1.41904159e-02, -8.03331584e-02,  3.51005117e-03,
         -1.26184449e-01, -6.27127336e-03, -1.46066453e-02,
         -3.71752232e-02, -6.89810067e-02, -2.36018058e-02,
          6.42432719e-02,  2.49604676e-02, -3.20524387e-02,
         -7.99693018e-02]],

       [[-5.67932567e-03, -1.34756789e-02, -3.48448358e-03,
         -2.05285624e-02, -3.38141471e-02,  1.15126539e-02,
         -5.63665554e-02, -2.23261323e-02,  1.98495854e-02,
         -2.82992888e-02, -2.30324697e-02, -4.02060430e-03,
          3.85325626e-02,  3.10422052e-02, -4.13467064e-02,
         -4.48035076e-02]],

       [[-4.38071154e-02,  1.34479687e-01, -7.58690909e-02,
         -2.03095693e-02, -4.82670963e-02,  1.74905919e-02,
         -1.15248047e-01,  2.04780884e-02, -9.14726928e-02,
         -3.07566598e-02, -5.81737533e-02, -7.58337602e-03,
          7.40825236e-02,  4.34648339e-03, -1.92251150e-02,
         -1.19616345e-01]],

       [[-7.28117535e-03,  3.69185023e-02, -3.57004628e-02,
         -8.79743509e-03, -3.50271799e-02,  7.51457224e-03,
         -7.09229112e-02,  7.06696603e-03, -2.02429350e-02,
         -1.86474659e-02, -3.09315529e-02, -1.55968964e-02,
          5.00453338e-02,  2.56600790e-02, -2.79823430e-02,
         -3.66082489e-02]],

       [[ 1.28287179e-02,  6.60381168e-02, -4.50267121e-02,
         -1.20147336e-02,  1.60975922e-02,  3.07647865e-02,
         -2.73184143e-02,  2.57846881e-02, -4.91634272e-02,
         -7.72603648e-03,  9.43150558e-03, -5.24836592e-03,
          5.87843508e-02,  4.36116047e-02, -3.33693698e-02,
         -6.38194522e-03]],

       [[-5.58837205e-02,  6.15786240e-02, -3.27367336e-02,
         -2.01603603e-02, -6.59184679e-02, -1.15176635e-02,
         -1.05075538e-01, -7.52889784e-03, -2.24317629e-02,
         -3.07373870e-02, -7.15818256e-02, -9.37230792e-03,
          4.04472537e-02, -1.36619909e-02, -1.66551415e-02,
         -1.07722081e-01]],

       [[ 1.47113167e-02,  2.91213822e-02, -3.77548225e-02,
         -1.79170072e-02, -1.57425273e-02,  4.45013605e-02,
         -4.97263148e-02, -8.06093868e-03, -1.77044068e-02,
         -2.74934918e-02,  1.39839808e-03,  3.91144305e-03,
          5.77633269e-02,  5.58978282e-02, -4.10146378e-02,
         -1.18581187e-02]],

       [[-4.41165939e-02,  5.89558855e-02, -2.82279141e-02,
          1.81519403e-03, -3.61491814e-02, -1.93668492e-02,
         -5.84699698e-02,  1.47746522e-02, -3.31748798e-02,
         -6.17896300e-03, -4.94408272e-02, -1.09866569e-02,
          1.26321139e-02, -3.13493796e-02,  1.36854528e-02,
         -5.33331372e-02]],

       [[-8.69311299e-03, -4.36550518e-03, -1.76455434e-02,
         -1.13716600e-02, -5.58337905e-02,  8.46667867e-03,
         -7.45017231e-02, -2.34032273e-02,  1.33765507e-02,
         -2.87144911e-02, -3.79112437e-02, -6.31764391e-03,
          3.55101824e-02,  2.39255261e-02, -2.79614031e-02,
         -3.69710363e-02]],

       [[-3.10679544e-02,  9.78949443e-02, -5.78844473e-02,
         -2.33388301e-02, -2.43055858e-02,  4.13659476e-02,
         -6.85599372e-02, -8.85242224e-03, -6.21358752e-02,
         -3.18269655e-02, -2.65801027e-02,  2.41157375e-02,
          4.16692942e-02,  4.56266617e-03, -1.01112723e-02,
         -8.13046247e-02]],

       [[-5.76042756e-02,  1.05269849e-01, -8.26431513e-02,
          1.71518477e-03, -1.04482003e-01,  1.24853980e-02,
         -1.24345399e-01, -7.92305917e-03, -7.17929155e-02,
         -3.19278874e-02, -8.52104947e-02,  5.82161825e-03,
          3.08515336e-02, -3.38064693e-02,  2.02680454e-02,
         -8.29604566e-02]],

       [[-1.85138732e-02,  6.32919520e-02, -6.06516749e-02,
         -3.13727334e-02, -6.05925731e-02,  6.26725107e-02,
         -1.13019355e-01, -2.78190486e-02, -3.20889391e-02,
         -5.78756407e-02, -3.79978418e-02,  2.19924264e-02,
          7.31687099e-02,  4.36754525e-02, -3.85031290e-02,
         -9.84486565e-02]],

       [[-3.56447957e-02,  4.21763174e-02, -3.93409021e-02,
         -1.92401302e-03, -7.19024315e-02, -1.33905830e-02,
         -1.00439817e-01,  3.01517925e-04, -1.84722915e-02,
         -2.14943662e-02, -6.78969547e-02, -2.00396068e-02,
          3.72357816e-02, -6.29309192e-03, -9.00251511e-03,
         -6.08286560e-02]],

       [[-4.92900144e-03,  3.02852113e-02, -2.30919495e-02,
         -3.37902457e-02, -1.09737357e-02,  3.55088376e-02,
         -6.36728257e-02, -7.95218535e-03, -9.99075640e-03,
         -3.52981798e-02, -1.16102379e-02, -1.43020385e-04,
          6.59288391e-02,  4.79022078e-02, -5.68314232e-02,
         -7.12671876e-02]],

       [[ 1.00253886e-02,  2.94145066e-02, -4.25283909e-02,
         -1.02262460e-02, -4.54855300e-02, -1.07278109e-04,
         -1.06130272e-01,  2.26816237e-02, -1.49224708e-02,
         -2.27967706e-02, -3.94523479e-02, -4.82371897e-02,
          8.58454108e-02,  6.07169494e-02, -5.16766980e-02,
         -3.88190299e-02]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 16), dtype=float32, numpy=
array([[[-0.03223437,  0.08742185, -0.07160249, -0.04200259,
         -0.07305537,  0.03957315, -0.14171295, -0.015284  ,
         -0.04984214, -0.06387953, -0.0627469 ,  0.00526407,
          0.09961064,  0.05231088, -0.06572684, -0.12640534]],

       [[-0.0633534 ,  0.15399489, -0.11766205,  0.00717592,
         -0.11980905,  0.02016953, -0.1535825 ,  0.00368842,
         -0.11092914, -0.04089593, -0.09241961,  0.00259784,
          0.04521247, -0.01639573,  0.02274081, -0.07961567]],

       [[-0.06177273,  0.14028908, -0.10589773,  0.00665619,
         -0.11167667,  0.01440303, -0.14321026,  0.00167135,
         -0.09833904, -0.0375297 , -0.0883382 ,  0.00147061,
          0.03917053, -0.0186821 ,  0.02238003, -0.07667442]],

       [[-0.07008947,  0.07765551, -0.08889713, -0.0026474 ,
         -0.16890569,  0.04605975, -0.15403496, -0.08275675,
         -0.03962961, -0.07467504, -0.10389911,  0.05757212,
         -0.00283825, -0.03651458,  0.03828745, -0.08702731]],

       [[-0.10041479,  0.1460025 , -0.0581402 ,  0.00580048,
         -0.07022558, -0.06561479, -0.12783323,  0.05440557,
         -0.09546252, -0.01162819, -0.10515884, -0.05270294,
          0.04624688, -0.0504994 ,  0.01596913, -0.12400634]],

       [[-0.05186882,  0.073038  , -0.05296683, -0.03550541,
         -0.08171494,  0.03760037, -0.11610574, -0.04607464,
         -0.03654708, -0.06100455, -0.06328422,  0.03841506,
          0.04771721,  0.00818109, -0.02667417, -0.12184937]],

       [[ 0.02839957,  0.03057357, -0.05814495, -0.0422243 ,
         -0.0311651 ,  0.08284037, -0.08629536, -0.02143052,
         -0.01449216, -0.05867137,  0.00363469,  0.01394115,
          0.10855748,  0.10791301, -0.09527298, -0.03826847]],

       [[-0.10358721,  0.17171949, -0.0923679 , -0.05131865,
         -0.12993623,  0.03319735, -0.1705466 , -0.0464837 ,
         -0.10476808, -0.08156536, -0.11013831,  0.0602237 ,
          0.05714975, -0.0282508 , -0.00803769, -0.22575894]],

       [[-0.00722421,  0.05781766, -0.09746353, -0.02051524,
         -0.13348718,  0.08866359, -0.1544144 , -0.06187021,
         -0.02914757, -0.08439356, -0.05974007,  0.04171077,
          0.07519152,  0.06521141, -0.03939663, -0.04619666]],

       [[-0.08906776,  0.21824455, -0.12848476, -0.02721713,
         -0.10374133,  0.01794762, -0.17910957,  0.02061175,
         -0.1608544 , -0.05722927, -0.10321193,  0.00062439,
          0.09263565, -0.00759961, -0.01029384, -0.18580784]],

       [[-0.07629033,  0.18078582, -0.09320301, -0.04446658,
         -0.06206128,  0.02773014, -0.14178212,  0.0032929 ,
         -0.12118549, -0.05691981, -0.07555719,  0.01904455,
          0.08016499,  0.00175665, -0.0281942 , -0.17878902]],

       [[-0.05393747,  0.16790117, -0.10226072, -0.06593966,
         -0.03619148,  0.12678854, -0.10424715, -0.05787421,
         -0.11231174, -0.09116068, -0.02463514,  0.10873346,
          0.05894148,  0.02425482, -0.03117645, -0.18421587]],

       [[-0.10153132,  0.10045823, -0.10685568, -0.02476705,
         -0.23308398,  0.01973217, -0.23587266, -0.07522492,
         -0.04614498, -0.1075721 , -0.17411304,  0.03519921,
          0.07089681, -0.01604302, -0.01073449, -0.20215335]],

       [[-0.09688338,  0.11895957, -0.07171649, -0.02496264,
         -0.12849861,  0.01558162, -0.14552252, -0.05293965,
         -0.06648047, -0.06411455, -0.10401636,  0.04571741,
          0.02018522, -0.04624873,  0.02212942, -0.16184089]],

       [[-0.09761993,  0.11200443, -0.06260063, -0.03912037,
         -0.12841846,  0.0203329 , -0.15041845, -0.0621173 ,
         -0.0566115 , -0.07266323, -0.10563979,  0.05626512,
          0.0318891 , -0.03728276,  0.00369921, -0.18466493]],

       [[-0.07154267,  0.16856183, -0.14730646,  0.00135428,
         -0.1797576 ,  0.03757863, -0.21068358, -0.01251078,
         -0.12547262, -0.07183164, -0.12813602,  0.00783116,
          0.07939854, -0.00089029,  0.00803588, -0.11699975]],

       [[-0.03786232,  0.02411456, -0.012529  , -0.03605586,
         -0.04473253,  0.01608045, -0.07542087, -0.03817111,
         -0.00369618, -0.04355764, -0.04257358,  0.02319254,
          0.03985345,  0.01060875, -0.03891087, -0.09695483]],

       [[-0.04450305,  0.069747  , -0.08142927, -0.02332981,
         -0.14430554, -0.0004836 , -0.20093952, -0.01749571,
         -0.03239127, -0.07001234, -0.12271549, -0.03438877,
          0.10944386,  0.04517185, -0.05712865, -0.1316602 ]],

       [[-0.00966465, -0.02108352, -0.00776628, -0.03614163,
         -0.06192577,  0.01508053, -0.09331827, -0.04270613,
          0.02922863, -0.05049068, -0.04511878,  0.00197752,
          0.06671124,  0.04968484, -0.07343571, -0.07914168]],

       [[-0.07615238,  0.21699734, -0.12984039, -0.03372838,
         -0.09117194,  0.02092079, -0.18646924,  0.03206811,
         -0.16037855, -0.05868995, -0.09852876, -0.01328486,
          0.11907449,  0.01711879, -0.03357265, -0.18605101]],

       [[-0.0132012 ,  0.06296758, -0.06277922, -0.01473018,
         -0.06333333,  0.01021353, -0.11543217,  0.00883168,
         -0.03761512, -0.03507321, -0.05476791, -0.02344706,
          0.08342609,  0.04506119, -0.05080921, -0.06151254]],

       [[ 0.01920758,  0.11148518, -0.07930208, -0.02160947,
          0.02790388,  0.05265726, -0.04045144,  0.04817445,
         -0.08222289, -0.0123667 ,  0.017929  , -0.00721934,
          0.0921859 ,  0.07310511, -0.06118581, -0.00934309]],

       [[-0.09477298,  0.10215006, -0.05572531, -0.03340707,
         -0.12199417, -0.03067479, -0.1715569 , -0.01870677,
         -0.0494161 , -0.057263  , -0.12351884, -0.01457747,
          0.06957198, -0.01778427, -0.02872043, -0.17620786]],

       [[ 0.02182561,  0.05241437, -0.06819955, -0.03145122,
         -0.02980734,  0.07597763, -0.07820643, -0.01283974,
         -0.03240415, -0.0478935 ,  0.00193114,  0.01501385,
          0.09248198,  0.0895515 , -0.07429705, -0.02323465]],

       [[-0.07509167,  0.0980882 , -0.04700629,  0.00618444,
         -0.06576994, -0.03768964, -0.09909286,  0.02078566,
         -0.06156201, -0.01442762, -0.08183603, -0.02275646,
          0.02086678, -0.04485921,  0.025501  , -0.08859612]],

       [[-0.0151575 , -0.00490981, -0.03235148, -0.01891662,
         -0.09997475,  0.01099681, -0.12216545, -0.04489419,
          0.01880014, -0.05284055, -0.06960736, -0.00304982,
          0.06152163,  0.03861574, -0.05051405, -0.06617579]],

       [[-0.05456087,  0.16402832, -0.10018086, -0.0382577 ,
         -0.04773486,  0.06475519, -0.11265697, -0.01261575,
         -0.1130046 , -0.05779995, -0.04455188,  0.04413796,
          0.06168882,  0.01257873, -0.01720384, -0.13394912]],

       [[-0.09960577,  0.17790672, -0.13946307,  0.00874999,
         -0.1870695 ,  0.0140819 , -0.20292068, -0.01576026,
         -0.13065028, -0.06369121, -0.14040886,  0.00935239,
          0.0455845 , -0.04342937,  0.03686404, -0.13636288]],

       [[-0.03339498,  0.10951016, -0.10711848, -0.05418452,
         -0.11412939,  0.10078716, -0.17948693, -0.04767904,
         -0.06567749, -0.10380179, -0.06952772,  0.05154195,
          0.11724335,  0.07297705, -0.0674629 , -0.16146609]],

       [[-0.0608377 ,  0.07176964, -0.06769422, -0.00050225,
         -0.12867017, -0.02808496, -0.16437171, -0.0062799 ,
         -0.03740421, -0.04271753, -0.11663941, -0.03352983,
          0.06441028, -0.00471254, -0.0163975 , -0.10172098]],

       [[-0.00940743,  0.05164701, -0.04186833, -0.06020989,
         -0.02268405,  0.05496727, -0.1031255 , -0.01523007,
         -0.02448878, -0.06180681, -0.02433539,  0.0094573 ,
          0.10873195,  0.07961625, -0.09920381, -0.1183713 ]],

       [[ 0.01733459,  0.04874592, -0.07566682, -0.01854091,
         -0.0807282 , -0.00062545, -0.16805786,  0.0326408 ,
         -0.02663219, -0.04316558, -0.07279416, -0.07725796,
          0.14447787,  0.10135639, -0.09233476, -0.06360387]]],
      dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/115.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[ 0.22490583, -0.29603928, -0.04259467, -0.04423223,  0.14590175,
        -0.08088762, -0.32563406, -0.08392892,  0.39297974]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[ 0.22490582, -0.29603928, -0.04259468, -0.04423225,  0.14590175,
        -0.08088765, -0.32563403, -0.08392894,  0.3929797 ]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/116.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 1, 126), dtype=float32, numpy=
array([[[ 0.01395186, -0.00834627, -0.03388306, ...,  0.03267003,
         -0.02302413,  0.00734031]],

       [[ 0.01574105, -0.00589347, -0.02597948, ...,  0.01971985,
         -0.02050993,  0.01411102]],

       [[ 0.02220615, -0.00052784, -0.05104357, ...,  0.01687446,
         -0.04890346,  0.0044676 ]],

       ...,

       [[ 0.01566258, -0.00890921, -0.04094388, ...,  0.02129182,
         -0.03334684,  0.00276193]],

       [[ 0.01744755, -0.00755519, -0.0364647 , ...,  0.02398186,
         -0.02850285,  0.01020635]],

       [[ 0.03430798,  0.01170219, -0.04771644, ...,  0.02050655,
         -0.03832335,  0.02771416]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 126), dtype=float32, numpy=
array([[[ 0.02429647, -0.01369766, -0.05446647, ...,  0.05816388,
         -0.04106366,  0.00880852]],

       [[ 0.02614317, -0.00969771, -0.04149638, ...,  0.03502347,
         -0.03705531,  0.02144525]],

       [[ 0.03956313, -0.00164196, -0.09066547, ...,  0.03278751,
         -0.08663645,  0.00823547]],

       ...,

       [[ 0.02736608, -0.01593393, -0.06781575, ...,  0.03898966,
         -0.05836434,  0.00477978]],

       [[ 0.02978822, -0.01294316, -0.05940038, ...,  0.04306081,
         -0.05060201,  0.01547342]],

       [[ 0.06000459,  0.01941741, -0.07960185, ...,  0.03691947,
         -0.06639099,  0.04558054]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/29.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 7), dtype=float32, numpy=
array([[-0.08582404,  0.13433723, -0.06505511,  0.06307145, -0.10303878,
        -0.16175511, -0.214853  ],
       [-0.0731815 ,  0.17317525, -0.0166787 , -0.00089069, -0.08851802,
        -0.27684256, -0.20536692],
       [-0.08457101,  0.00359693, -0.06811295, -0.01528794, -0.05568187,
        -0.11978702, -0.1257331 ],
       [-0.07254262,  0.05134751,  0.01136965, -0.04363248, -0.04239793,
        -0.16772664, -0.1781793 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 7), dtype=float32, numpy=
array([[-0.08582407,  0.13433725, -0.06505515,  0.06307147, -0.10303878,
        -0.16175511, -0.21485297],
       [-0.0731815 ,  0.1731752 , -0.01667869, -0.00089068, -0.08851802,
        -0.27684262, -0.20536691],
       [-0.08457102,  0.00359693, -0.06811296, -0.01528794, -0.05568188,
        -0.11978705, -0.1257331 ],
       [-0.07254262,  0.05134752,  0.01136966, -0.0436325 , -0.04239794,
        -0.16772667, -0.1781793 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/3.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.06375702, -0.28043312,  0.2793353 ,  0.00980369, -0.26583552,
        -0.19088571, -0.00245235,  0.26687413],
       [-0.2427164 , -0.2954191 ,  0.13387492,  0.14601508, -0.23487891,
        -0.2258715 , -0.02037623,  0.12451404],
       [-0.03128909, -0.26703596,  0.23547961, -0.07891438, -0.3438939 ,
        -0.27549517,  0.01595178,  0.16363914]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.06375702, -0.28043312,  0.2793353 ,  0.0098037 , -0.26583558,
        -0.19088575, -0.00245235,  0.26687416],
       [-0.24271648, -0.29541904,  0.13387492,  0.1460151 , -0.23487891,
        -0.2258715 , -0.02037624,  0.12451405],
       [-0.03128912, -0.26703605,  0.23547962, -0.07891436, -0.34389386,
        -0.2754951 ,  0.01595178,  0.16363917]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/30.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(3, 2), dtype=float32, numpy=
array([[-0.04462633,  0.03556869],
       [ 0.02588804,  0.05410564],
       [-0.02627177,  0.03487815]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(3, 2), dtype=float32, numpy=
array([[-0.08229355,  0.05461166],
       [ 0.03446184,  0.06926604],
       [-0.0504817 ,  0.05213868]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/31.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 9), dtype=float32, numpy=
array([[-0.3207053 ,  0.2493774 ,  0.05265657,  0.3080213 , -0.00685269,
         0.1800877 , -0.09572534, -0.24119562,  0.1505808 ],
       [-0.3005373 ,  0.17723075,  0.02092995,  0.13915288, -0.04730791,
         0.2453162 , -0.05349539, -0.2368021 ,  0.0992303 ],
       [-0.16940065,  0.16420157,  0.08631185,  0.30471197, -0.08026458,
         0.18923074, -0.29444233, -0.2653863 ,  0.1942051 ],
       [-0.3373301 ,  0.19273326,  0.01026641,  0.32590204, -0.02237613,
         0.10503104, -0.07068131, -0.2966932 ,  0.1674375 ]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 9), dtype=float32, numpy=
array([[-0.32070524,  0.24937741,  0.05265658,  0.30802134, -0.0068527 ,
         0.1800877 , -0.09572537, -0.24119563,  0.15058084],
       [-0.3005373 ,  0.1772307 ,  0.02092994,  0.1391529 , -0.04730794,
         0.24531627, -0.05349541, -0.23680212,  0.09923031],
       [-0.16940069,  0.16420157,  0.08631187,  0.30471197, -0.0802646 ,
         0.1892308 , -0.29444242, -0.26538637,  0.19420514],
       [-0.33733007,  0.1927333 ,  0.0102664 ,  0.32590207, -0.02237614,
         0.10503105, -0.07068133, -0.29669327,  0.16743748]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/32.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.26616552, -0.09718122, -0.18857054,  0.00178423,  0.22918452,
        -0.32326645, -0.14416212, -0.04767086]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.26616555, -0.09718125, -0.18857057,  0.00178423,  0.22918458,
        -0.32326645, -0.14416212, -0.04767087]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/33.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 6), dtype=float32, numpy=
array([[ 2.70599544e-01, -1.52867004e-01, -3.39933842e-01,
        -6.96106851e-02,  4.10512090e-01, -3.53616811e-02],
       [ 3.98910165e-01, -7.97977746e-02, -4.43612307e-01,
        -2.40064063e-03,  4.75844949e-01,  4.88232337e-02],
       [ 3.00335914e-01,  3.07967477e-02, -3.32855940e-01,
        -3.80559973e-02,  4.46035057e-01,  8.81186202e-02],
       [ 2.44928613e-01, -5.09480154e-03, -3.07347059e-01,
        -4.50431891e-02,  4.38430429e-01, -4.50371876e-02],
       [ 1.60372257e-01, -2.64822058e-02, -3.04931492e-01,
        -2.16251239e-02,  4.57087845e-01,  5.55930436e-02],
       [ 4.32185590e-01, -3.94094996e-02, -3.96458238e-01,
         6.28876220e-03,  4.52898055e-01,  1.87463447e-01],
       [ 3.24184716e-01, -1.28831699e-01, -3.74327630e-01,
        -5.21604717e-02,  5.08882165e-01,  8.70166905e-03],
       [ 3.25761586e-01, -4.48194183e-02, -2.62027889e-01,
        -4.13679406e-02,  4.58856791e-01,  1.33289009e-01],
       [ 3.13032091e-01, -7.19547719e-02, -3.47224891e-01,
         4.11481736e-03,  4.79660273e-01,  6.99263439e-02],
       [ 4.32437897e-01, -5.76414950e-02, -3.21488619e-01,
        -3.87582317e-04,  4.17638689e-01,  1.09088130e-01],
       [ 3.74613434e-01, -1.12331793e-01, -3.77014548e-01,
        -7.39927217e-02,  4.02046919e-01, -2.66154595e-02],
       [ 3.29544365e-01, -5.82268126e-02, -2.48169973e-01,
        -3.88857089e-02,  5.31197309e-01,  1.41710535e-01],
       [ 2.18129069e-01, -9.05131251e-02, -2.97642976e-01,
         4.68873372e-03,  5.00332713e-01,  1.50460899e-01],
       [ 3.19893897e-01, -5.29773645e-02, -3.63918751e-01,
        -2.19130069e-02,  3.70572090e-01,  4.79524173e-02],
       [ 2.57805705e-01, -1.04107521e-01, -4.56529856e-01,
        -2.94790901e-02,  5.21391451e-01,  1.13721400e-01],
       [ 1.25692368e-01, -3.52233499e-02, -4.09304887e-01,
        -5.76604158e-02,  4.91846532e-01,  1.24277741e-01],
       [ 4.04759586e-01, -7.68366009e-02, -3.90897512e-01,
        -1.15156379e-02,  5.27652681e-01,  6.71892092e-02],
       [ 2.66646773e-01, -1.06258281e-01, -3.08463663e-01,
        -1.04163066e-02,  4.28384364e-01,  1.11538589e-01],
       [ 2.20879599e-01, -1.95086464e-01, -4.14100111e-01,
        -5.82055897e-02,  4.45987225e-01,  1.28308594e-01],
       [ 3.37265909e-01, -3.82909440e-02, -2.52273917e-01,
        -2.06836835e-02,  5.71341991e-01,  1.37139961e-01],
       [ 3.67419779e-01, -1.22222736e-01, -3.72007042e-01,
        -2.57348511e-02,  5.01174569e-01,  3.35154273e-02],
       [ 3.86982977e-01, -1.23632938e-01, -3.24186921e-01,
         2.19652858e-02,  4.95048195e-01,  1.61343917e-01],
       [ 2.51554102e-01, -1.22720405e-01, -3.12539667e-01,
        -1.71551518e-02,  4.99664903e-01,  1.76037565e-01],
       [ 7.90275931e-02, -7.73766711e-02, -2.89662629e-01,
        -2.29340233e-02,  5.06815255e-01,  9.05469507e-02],
       [ 1.92232415e-01, -1.38357580e-01, -3.31271440e-01,
        -3.41654010e-02,  4.77472812e-01,  7.64475316e-02],
       [ 3.77044231e-01,  6.93575293e-02, -2.93174893e-01,
        -2.49812268e-02,  4.77866799e-01,  3.78898717e-02],
       [ 2.45949283e-01, -2.06400618e-01, -3.73131424e-01,
        -4.44141030e-02,  4.60771114e-01,  9.59734693e-02],
       [ 1.09921075e-01, -1.09322391e-01, -3.27351600e-01,
        -3.93550806e-02,  4.27789271e-01,  1.52182728e-01],
       [ 2.49772951e-01, -1.31011799e-01, -2.92693198e-01,
        -1.14828032e-02,  4.99416709e-01,  6.11329712e-02],
       [ 2.52270788e-01, -1.32864108e-02, -3.30596179e-01,
        -8.10517892e-02,  3.62171382e-01,  4.69766855e-02],
       [ 3.56047839e-01, -1.57096773e-01, -3.76766831e-01,
        -1.55122671e-02,  4.65999782e-01,  1.61257237e-01],
       [ 2.88338155e-01, -9.03106257e-02, -3.80285710e-01,
        -4.45171408e-02,  4.15070981e-01,  3.89460176e-02]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 6), dtype=float32, numpy=
array([[ 2.70599544e-01, -1.52866989e-01, -3.39933813e-01,
        -6.96106926e-02,  4.10512030e-01, -3.53616960e-02],
       [ 3.98910195e-01, -7.97977746e-02, -4.43612307e-01,
        -2.40064249e-03,  4.75844949e-01,  4.88232337e-02],
       [ 3.00335944e-01,  3.07967644e-02, -3.32855910e-01,
        -3.80560011e-02,  4.46035087e-01,  8.81186500e-02],
       [ 2.44928658e-01, -5.09480108e-03, -3.07347059e-01,
        -4.50431854e-02,  4.38430429e-01, -4.50371951e-02],
       [ 1.60372227e-01, -2.64822096e-02, -3.04931462e-01,
        -2.16251295e-02,  4.57087874e-01,  5.55930398e-02],
       [ 4.32185501e-01, -3.94094922e-02, -3.96458268e-01,
         6.28876220e-03,  4.52898026e-01,  1.87463492e-01],
       [ 3.24184686e-01, -1.28831714e-01, -3.74327600e-01,
        -5.21604791e-02,  5.08882165e-01,  8.70167185e-03],
       [ 3.25761527e-01, -4.48194370e-02, -2.62027949e-01,
        -4.13679518e-02,  4.58856761e-01,  1.33289009e-01],
       [ 3.13032091e-01, -7.19548017e-02, -3.47224921e-01,
         4.11481550e-03,  4.79660153e-01,  6.99263513e-02],
       [ 4.32437867e-01, -5.76414801e-02, -3.21488649e-01,
        -3.87582957e-04,  4.17638689e-01,  1.09088153e-01],
       [ 3.74613404e-01, -1.12331830e-01, -3.77014548e-01,
        -7.39927590e-02,  4.02046919e-01, -2.66154595e-02],
       [ 3.29544395e-01, -5.82268313e-02, -2.48169944e-01,
        -3.88857089e-02,  5.31197250e-01,  1.41710535e-01],
       [ 2.18129098e-01, -9.05131400e-02, -2.97642976e-01,
         4.68873838e-03,  5.00332654e-01,  1.50460929e-01],
       [ 3.19893897e-01, -5.29773757e-02, -3.63918662e-01,
        -2.19130069e-02,  3.70572031e-01,  4.79524210e-02],
       [ 2.57805794e-01, -1.04107544e-01, -4.56529856e-01,
        -2.94791050e-02,  5.21391451e-01,  1.13721453e-01],
       [ 1.25692382e-01, -3.52233350e-02, -4.09304947e-01,
        -5.76604307e-02,  4.91846561e-01,  1.24277733e-01],
       [ 4.04759556e-01, -7.68366009e-02, -3.90897572e-01,
        -1.15156407e-02,  5.27652681e-01,  6.71892092e-02],
       [ 2.66646743e-01, -1.06258303e-01, -3.08463722e-01,
        -1.04163121e-02,  4.28384304e-01,  1.11538589e-01],
       [ 2.20879629e-01, -1.95086449e-01, -4.14100111e-01,
        -5.82055934e-02,  4.45987254e-01,  1.28308609e-01],
       [ 3.37265939e-01, -3.82909402e-02, -2.52273917e-01,
        -2.06836909e-02,  5.71341932e-01,  1.37140021e-01],
       [ 3.67419749e-01, -1.22222736e-01, -3.72007102e-01,
        -2.57348455e-02,  5.01174569e-01,  3.35154384e-02],
       [ 3.86982888e-01, -1.23632953e-01, -3.24186951e-01,
         2.19652988e-02,  4.95048225e-01,  1.61343902e-01],
       [ 2.51554221e-01, -1.22720413e-01, -3.12539637e-01,
        -1.71551593e-02,  4.99664932e-01,  1.76037595e-01],
       [ 7.90275857e-02, -7.73767009e-02, -2.89662629e-01,
        -2.29340270e-02,  5.06815255e-01,  9.05469730e-02],
       [ 1.92232490e-01, -1.38357610e-01, -3.31271440e-01,
        -3.41654010e-02,  4.77472782e-01,  7.64475390e-02],
       [ 3.77044201e-01,  6.93575442e-02, -2.93174803e-01,
        -2.49812324e-02,  4.77866769e-01,  3.78898978e-02],
       [ 2.45949328e-01, -2.06400678e-01, -3.73131484e-01,
        -4.44141068e-02,  4.60771084e-01,  9.59734991e-02],
       [ 1.09921083e-01, -1.09322436e-01, -3.27351600e-01,
        -3.93550992e-02,  4.27789241e-01,  1.52182743e-01],
       [ 2.49772951e-01, -1.31011799e-01, -2.92693108e-01,
        -1.14828041e-02,  4.99416739e-01,  6.11329824e-02],
       [ 2.52270848e-01, -1.32864192e-02, -3.30596179e-01,
        -8.10517967e-02,  3.62171382e-01,  4.69766967e-02],
       [ 3.56047839e-01, -1.57096758e-01, -3.76766860e-01,
        -1.55122736e-02,  4.65999752e-01,  1.61257237e-01],
       [ 2.88338065e-01, -9.03106183e-02, -3.80285621e-01,
        -4.45171408e-02,  4.15071011e-01,  3.89460139e-02]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/34.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 7), dtype=float32, numpy=
array([[ 0.06102685, -0.41444546,  0.5475042 ,  0.30602974, -0.15232754,
        -0.06052545,  0.2681981 ],
       [ 0.16182795, -0.3471966 ,  0.49811232,  0.2901554 , -0.01327969,
        -0.11420824,  0.29488108],
       [ 0.06157439, -0.42853922,  0.5757538 ,  0.1905564 , -0.05950415,
        -0.04545313,  0.3087302 ],
       [ 0.05155673, -0.26886144,  0.5884115 ,  0.3076861 , -0.0107697 ,
        -0.07009688,  0.28331986],
       [ 0.07608389, -0.3393902 ,  0.4889424 ,  0.35199735, -0.0073872 ,
        -0.05992553,  0.2960892 ],
       [ 0.03670491, -0.44243738,  0.4782769 ,  0.2948426 , -0.2177258 ,
        -0.0767238 ,  0.25563326],
       [ 0.05606546, -0.3151624 ,  0.48801336,  0.44268063, -0.03666065,
        -0.01417634,  0.28870013],
       [ 0.04643659, -0.32329205,  0.5697379 ,  0.30754974,  0.06675796,
        -0.01807639,  0.29571977],
       [ 0.13189851, -0.2659683 ,  0.53907084,  0.24419728,  0.13428953,
        -0.09478415,  0.27515516],
       [ 0.0362364 , -0.2951739 ,  0.4796894 ,  0.2695224 , -0.02153785,
        -0.10460827,  0.32168472],
       [ 0.12412798, -0.30926558,  0.5267076 ,  0.09387032, -0.00572362,
         0.04614076,  0.23534226],
       [ 0.09175482, -0.33552027,  0.4194225 ,  0.2580146 , -0.1066023 ,
        -0.08097292,  0.22893268],
       [ 0.18639176, -0.32793278,  0.43966278,  0.37715936, -0.06794406,
        -0.13060851,  0.28229246],
       [ 0.12558031, -0.3104875 ,  0.4638713 ,  0.18512878,  0.06814049,
        -0.05271986,  0.21147521],
       [ 0.1720431 , -0.2921077 ,  0.46746495,  0.45686987,  0.14303817,
        -0.13601339,  0.27590305],
       [ 0.05974131, -0.41074914,  0.45512503,  0.22857249, -0.11559681,
        -0.06034864,  0.23400083],
       [ 0.11226781, -0.32065696,  0.40989134,  0.33395666, -0.03243576,
        -0.15394947,  0.23238507],
       [ 0.0877883 , -0.429372  ,  0.48864943,  0.27416041, -0.10030014,
        -0.1498363 ,  0.32858673],
       [ 0.04623817, -0.31589672,  0.5055383 ,  0.28552362, -0.03320346,
        -0.04371571,  0.2518204 ],
       [ 0.152265  , -0.33822653,  0.4553065 ,  0.4012844 , -0.0008056 ,
        -0.1498837 ,  0.27088985],
       [ 0.1269563 , -0.22241639,  0.5320091 ,  0.4372593 ,  0.03949919,
        -0.16321549,  0.29324472],
       [ 0.12882371, -0.30887884,  0.4801304 ,  0.16345039, -0.13852891,
        -0.07644664,  0.23083442],
       [ 0.18969601, -0.22557063,  0.4218526 ,  0.29984933,  0.05423307,
        -0.19314508,  0.29182726],
       [ 0.24152362, -0.28824952,  0.45171198,  0.29742092,  0.0729629 ,
        -0.13933381,  0.24539363],
       [ 0.08635035, -0.3509697 ,  0.5471079 ,  0.1924953 , -0.16017322,
        -0.04030538,  0.263145  ],
       [ 0.02560585, -0.324093  ,  0.5342775 ,  0.26299977, -0.04085011,
        -0.06454346,  0.2621011 ],
       [ 0.14271657, -0.3478574 ,  0.5618992 ,  0.23914419, -0.00728447,
        -0.12337532,  0.32195178],
       [ 0.09765581, -0.26844066,  0.45359612,  0.21620846,  0.02929645,
        -0.04094847,  0.26847225],
       [ 0.12395346, -0.27413887,  0.39817157,  0.24001661, -0.0295559 ,
        -0.17335147,  0.25737482],
       [ 0.0312536 , -0.31360587,  0.524203  ,  0.28698596, -0.04151962,
        -0.04180321,  0.26536864],
       [ 0.12673752, -0.24712478,  0.45589596,  0.35807654, -0.03087821,
        -0.19207782,  0.34224644],
       [ 0.08896554, -0.38233384,  0.54921323,  0.34051958,  0.03021131,
         0.03412926,  0.30904844]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 7), dtype=float32, numpy=
array([[ 0.06102686, -0.41444555,  0.5475042 ,  0.30602974, -0.15232757,
        -0.06052548,  0.26819804],
       [ 0.161828  , -0.34719667,  0.49811235,  0.29015538, -0.01327968,
        -0.11420823,  0.29488108],
       [ 0.0615744 , -0.42853928,  0.57575375,  0.1905564 , -0.05950416,
        -0.04545314,  0.30873024],
       [ 0.05155675, -0.2688615 ,  0.58841145,  0.3076861 , -0.0107697 ,
        -0.0700969 ,  0.2833199 ],
       [ 0.07608389, -0.3393902 ,  0.4889424 ,  0.35199738, -0.00738719,
        -0.05992555,  0.2960892 ],
       [ 0.03670491, -0.44243738,  0.4782769 ,  0.29484263, -0.21772584,
        -0.07672379,  0.25563326],
       [ 0.05606547, -0.3151624 ,  0.48801333,  0.44268063, -0.03666066,
        -0.01417633,  0.28870016],
       [ 0.04643661, -0.32329208,  0.56973803,  0.30754977,  0.06675793,
        -0.01807639,  0.29571974],
       [ 0.13189851, -0.26596832,  0.5390708 ,  0.24419728,  0.13428956,
        -0.09478416,  0.27515516],
       [ 0.03623642, -0.2951739 ,  0.47968927,  0.2695224 , -0.02153786,
        -0.1046083 ,  0.32168475],
       [ 0.124128  , -0.30926558,  0.52670753,  0.09387035, -0.00572363,
         0.04614077,  0.23534228],
       [ 0.09175485, -0.33552027,  0.41942254,  0.2580146 , -0.10660231,
        -0.08097292,  0.22893262],
       [ 0.18639177, -0.3279328 ,  0.4396629 ,  0.37715948, -0.06794406,
        -0.13060851,  0.2822924 ],
       [ 0.1255803 , -0.31048754,  0.4638713 ,  0.18512878,  0.06814053,
        -0.05271988,  0.21147524],
       [ 0.17204314, -0.29210773,  0.46746498,  0.45686993,  0.14303821,
        -0.13601339,  0.27590305],
       [ 0.05974133, -0.41074917,  0.45512494,  0.2285725 , -0.11559683,
        -0.06034865,  0.23400082],
       [ 0.11226781, -0.32065693,  0.40989134,  0.33395666, -0.03243578,
        -0.15394945,  0.23238507],
       [ 0.08778834, -0.42937207,  0.48864946,  0.27416053, -0.10030016,
        -0.14983627,  0.32858667],
       [ 0.04623819, -0.3158967 ,  0.5055383 ,  0.28552368, -0.03320342,
        -0.04371572,  0.25182042],
       [ 0.152265  , -0.33822653,  0.45530644,  0.4012844 , -0.00080562,
        -0.14988372,  0.27088985],
       [ 0.12695627, -0.2224164 ,  0.5320092 ,  0.4372593 ,  0.03949919,
        -0.16321549,  0.2932447 ],
       [ 0.12882371, -0.30887884,  0.4801304 ,  0.16345038, -0.13852891,
        -0.07644665,  0.23083442],
       [ 0.18969607, -0.22557068,  0.42185268,  0.2998493 ,  0.05423308,
        -0.19314507,  0.2918273 ],
       [ 0.24152362, -0.28824955,  0.45171192,  0.297421  ,  0.07296292,
        -0.13933383,  0.2453936 ],
       [ 0.08635036, -0.3509697 ,  0.5471078 ,  0.19249532, -0.16017325,
        -0.0403054 ,  0.26314497],
       [ 0.02560586, -0.32409295,  0.53427744,  0.26299977, -0.04085013,
        -0.06454346,  0.26210108],
       [ 0.14271656, -0.34785745,  0.56189924,  0.23914424, -0.00728448,
        -0.1233753 ,  0.3219518 ],
       [ 0.09765582, -0.26844072,  0.4535961 ,  0.21620846,  0.02929644,
        -0.04094848,  0.26847225],
       [ 0.12395344, -0.27413884,  0.39817157,  0.24001664, -0.02955591,
        -0.1733514 ,  0.25737482],
       [ 0.03125362, -0.3136059 ,  0.524203  ,  0.28698608, -0.04151962,
        -0.04180322,  0.26536864],
       [ 0.12673755, -0.24712476,  0.45589596,  0.3580765 , -0.03087821,
        -0.19207783,  0.34224644],
       [ 0.08896555, -0.38233384,  0.5492132 ,  0.34051958,  0.03021129,
         0.03412927,  0.30904835]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/35.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': <tf.Tensor: shape=(32, 1, 2), dtype=float32, numpy=
array([[[-0.09273209,  0.10991953]],

       [[-0.06105531,  0.05764998]],

       [[-0.08322313,  0.1074954 ]],

       [[-0.12176365,  0.05967164]],

       [[-0.07823649,  0.15443839]],

       [[-0.11197247,  0.12066693]],

       [[-0.05695836,  0.1708047 ]],

       [[-0.10357191,  0.08164702]],

       [[-0.09038233,  0.00276025]],

       [[-0.09202525,  0.17264125]],

       [[-0.12470994, -0.02036297]],

       [[-0.09964286,  0.03120432]],

       [[-0.11298183,  0.09806295]],

       [[-0.09075306,  0.14150855]],

       [[-0.1075721 ,  0.10098767]],

       [[-0.09911294,  0.05437645]],

       [[-0.06524813, -0.0071435 ]],

       [[-0.10975359,  0.05224065]],

       [[-0.10042565,  0.10701369]],

       [[-0.07515582,  0.15966645]],

       [[-0.08130833,  0.18698208]],

       [[-0.0649799 , -0.06487503]],

       [[-0.08142938,  0.14288297]],

       [[-0.10395902,  0.11241336]],

       [[-0.07745542,  0.15838784]],

       [[-0.10290848,  0.12708667]],

       [[-0.08196017,  0.19687188]],

       [[-0.04943516,  0.15174638]],

       [[-0.12338912,  0.07854943]],

       [[-0.11262532,  0.05813736]],

       [[-0.11070745,  0.06281421]],

       [[-0.10298421,  0.11781483]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 2), dtype=float32, numpy=
array([[[-0.16995789,  0.18457866]],

       [[-0.11520044,  0.09622797]],

       [[-0.15375116,  0.18365255]],

       [[-0.2070902 ,  0.10388076]],

       [[-0.14350092,  0.24452806]],

       [[-0.19779418,  0.210711  ]],

       [[-0.11183623,  0.26445046]],

       [[-0.18286593,  0.14253291]],

       [[-0.15520665,  0.00365129]],

       [[-0.1675174 ,  0.28955963]],

       [[-0.20815729, -0.03904371]],

       [[-0.17631325,  0.05425425]],

       [[-0.19383323,  0.16331922]],

       [[-0.16251002,  0.23207298]],

       [[-0.18577817,  0.17155889]],

       [[-0.17698462,  0.09292028]],

       [[-0.11602469, -0.01399287]],

       [[-0.19075789,  0.09160733]],

       [[-0.17697982,  0.17537896]],

       [[-0.13987073,  0.24892645]],

       [[-0.14943823,  0.29299653]],

       [[-0.10498079, -0.11508075]],

       [[-0.14919794,  0.22295769]],

       [[-0.18549174,  0.19601561]],

       [[-0.14487898,  0.2552526 ]],

       [[-0.18299696,  0.21457656]],

       [[-0.14395267,  0.29762492]],

       [[-0.10136228,  0.24395086]],

       [[-0.20987038,  0.13527864]],

       [[-0.19667841,  0.10093281]],

       [[-0.1891865 ,  0.10913225]],

       [[-0.17833577,  0.1903369 ]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/36.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': <tf.Tensor: shape=(3, 32), dtype=float32, numpy=
array([[ 0.06928083, -0.02811553, -0.1820185 , -0.04721517,  0.0781149 ,
         0.08957988,  0.00346605,  0.07031458,  0.07203913,  0.18153226,
        -0.22248949, -0.13228244,  0.04069807, -0.04746212,  0.05389218,
        -0.00244848, -0.06730866, -0.08326884,  0.12926245,  0.11801218,
        -0.13077691,  0.14827348, -0.02219961, -0.04433598,  0.07912458,
        -0.06428376,  0.16345869, -0.24087612, -0.1089981 , -0.1665176 ,
         0.15271664, -0.12464013],
       [-0.10146047,  0.05216072, -0.08202995, -0.10039881, -0.13823861,
         0.13694713,  0.07433326,  0.05322059, -0.09681562,  0.17185652,
        -0.19692276, -0.10954759,  0.01607659,  0.08783551,  0.06976267,
         0.04599562, -0.13186818, -0.24941081, -0.01060774, -0.11453441,
        -0.0797435 ,  0.14306341, -0.03392019,  0.08077814,  0.16182826,
        -0.05278895,  0.29397267, -0.18277611, -0.04814971, -0.08277589,
         0.14344676, -0.11903635],
       [ 0.02433665,  0.0087876 , -0.08918902, -0.0525368 ,  0.00950288,
         0.05496624,  0.10775601,  0.06210413,  0.0292284 ,  0.14734736,
        -0.2356229 , -0.1141049 , -0.01452893, -0.05715778,  0.0459122 ,
         0.04492792, -0.08670417, -0.13033222, -0.07220313,  0.07576717,
        -0.1664495 ,  0.16113435,  0.0524171 ,  0.14671898,  0.10791226,
        -0.09987572,  0.13092567, -0.22965753, -0.03120796, -0.10457788,
         0.12022783, -0.00182764]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(3, 32), dtype=float32, numpy=
array([[ 0.12464902, -0.02887231, -0.27642447, -0.04052735,  0.10410699,
         0.12681304,  0.00948831,  0.06100832,  0.09644009,  0.2790826 ,
        -0.27600178, -0.18371956,  0.06892803, -0.04713962,  0.05906418,
        -0.00065253, -0.10135542, -0.14964594,  0.19318295,  0.19830176,
        -0.22129895,  0.19620639, -0.05249815, -0.0796254 ,  0.11823761,
        -0.07526863,  0.22659548, -0.30988333, -0.11727005, -0.25735596,
         0.21774384, -0.14463496],
       [-0.11610924,  0.06610855, -0.12047592, -0.12187923, -0.15385143,
         0.23078398,  0.0766168 ,  0.04823544, -0.14686328,  0.25147456,
        -0.2564716 , -0.16843604,  0.02342484,  0.12332823,  0.09900128,
         0.07938013, -0.18741965, -0.31095418, -0.03216664, -0.1372201 ,
        -0.15070637,  0.1976394 , -0.05157546,  0.11782364,  0.24616334,
        -0.07429426,  0.38735664, -0.23719388, -0.02700808, -0.13662626,
         0.2110993 , -0.14873567],
       [ 0.04443583,  0.0272117 , -0.13801995, -0.04451902,  0.01894525,
         0.07101399,  0.1555781 ,  0.04405087,  0.03288705,  0.21675931,
        -0.28219312, -0.16429156, -0.01037198, -0.06793515,  0.04925467,
         0.07149332, -0.12726706, -0.19873893, -0.12709987,  0.14407243,
        -0.27743694,  0.22798103,  0.07794053,  0.19170877,  0.1633846 ,
        -0.132838  ,  0.17954737, -0.30820838, -0.00844467, -0.16457187,
         0.18206489,  0.02654605]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/37.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(3, 3, 3), dtype=float32, numpy=
array([[[-0.05020287,  0.0877997 , -0.01503098],
        [-0.05778539,  0.10854254, -0.07228809],
        [-0.05646165,  0.19721894, -0.09177838]],

       [[-0.08348844,  0.09972347, -0.02582249],
        [-0.1173991 ,  0.05595141, -0.02655594],
        [-0.16509289,  0.12055417, -0.05464608]],

       [[-0.08219641,  0.03111978, -0.00835132],
        [-0.09013087,  0.12138554, -0.09655236],
        [-0.16982712,  0.1805405 , -0.08303001]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(3, 3, 3), dtype=float32, numpy=
array([[[-0.09816121,  0.16815075, -0.06447367],
        [-0.0929989 ,  0.14467694, -0.10330441],
        [-0.07781666,  0.21936886, -0.11104915]],

       [[-0.18136404,  0.14978713, -0.06355542],
        [-0.17303559,  0.077622  , -0.05251366],
        [-0.19408965,  0.13124442, -0.06988638]],

       [[-0.18271348,  0.09385772, -0.06009404],
        [-0.15850526,  0.15220785, -0.13096572],
        [-0.20359792,  0.19386883, -0.10244602]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/38.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.29987097, -0.09181559,  0.20727359, -0.06901655,  0.08352309,
         0.18404678,  0.2363967 , -0.28120482]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.29987094, -0.09181562,  0.20727365, -0.06901657,  0.08352312,
         0.18404682,  0.23639672, -0.28120485]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/39.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[ 5.05900150e-03, -5.32131910e-01, -3.87133695e-02,
        -1.31909847e-01,  1.13504149e-01,  3.34148228e-01,
        -1.11067988e-01, -2.32353300e-01],
       [-1.22852154e-01, -5.65635562e-01, -1.12717710e-02,
        -5.80085702e-02, -3.09555493e-02,  3.17846894e-01,
        -1.89933077e-01, -1.78060696e-01],
       [-1.05382338e-01, -5.27383864e-01, -3.90398223e-03,
        -1.76178608e-02, -1.61234394e-03,  3.80987495e-01,
        -2.02921629e-01, -1.81538969e-01],
       [ 9.56002623e-03, -4.66308117e-01, -1.16033934e-01,
        -2.14705929e-01, -7.28127509e-02,  3.01274955e-01,
        -1.30244464e-01, -1.46611661e-01],
       [-2.20126122e-01, -4.50970173e-01, -4.46840972e-02,
        -4.10550423e-02, -2.04762727e-01,  3.85988325e-01,
        -3.04375738e-01, -1.84373721e-01],
       [-7.47959390e-02, -4.81269985e-01, -1.00260444e-01,
        -7.92435482e-02, -8.76817778e-02,  2.61482060e-01,
        -1.56180799e-01, -3.61789204e-02],
       [-1.37708873e-01, -4.66495514e-01, -9.56662744e-02,
        -4.88345735e-02, -5.00421338e-02,  3.99511248e-01,
        -2.40370408e-01, -1.80917218e-01],
       [-1.58298358e-01, -3.88478547e-01, -1.20372057e-01,
        -1.28985256e-01, -1.77183449e-01,  2.75613964e-01,
        -2.23425612e-01, -1.72922045e-01],
       [-2.16710083e-02, -2.45451033e-01, -1.67694762e-01,
        -2.22197995e-01, -2.00189888e-01,  2.76021540e-01,
        -2.20131248e-01, -2.30918139e-01],
       [-8.82385205e-03, -6.02014005e-01, -1.39854372e-01,
        -1.37483135e-01,  4.86070514e-02,  2.86939025e-01,
        -1.16180234e-01, -4.98109013e-02],
       [-1.53016541e-02, -4.46285099e-01, -1.11901037e-01,
        -1.84999198e-01,  2.96177808e-02,  3.60994101e-01,
        -1.47108346e-01, -2.38756135e-01],
       [-1.13233551e-01, -5.14516830e-01, -5.32274209e-02,
        -1.15134474e-02, -1.21143028e-01,  2.75807679e-01,
        -2.53132164e-01, -2.00091943e-01],
       [-4.75079343e-02, -3.47227216e-01, -1.47757724e-01,
        -1.53185844e-01, -5.03411330e-02,  2.90269792e-01,
        -1.88822061e-01, -1.24428287e-01],
       [-1.17776878e-01, -3.45590383e-01, -4.33677342e-03,
         9.69968829e-03, -2.81821194e-05,  2.68763244e-01,
        -1.92640111e-01, -9.92556959e-02],
       [-1.83639023e-02, -4.52433497e-01, -1.50689647e-01,
        -2.04501763e-01, -1.12104438e-01,  3.14502507e-01,
        -1.63947940e-01, -1.14534624e-01],
       [-4.20843810e-02, -5.24201572e-01, -1.32820800e-01,
        -1.97387829e-01,  4.90463786e-02,  3.70576829e-01,
        -1.36890993e-01, -9.00528803e-02],
       [-1.44168273e-01, -6.06853962e-01, -4.06568982e-02,
         7.38242595e-03,  7.41543435e-03,  3.46198797e-01,
        -2.01001167e-01, -1.70106322e-01],
       [-1.70439422e-01, -5.93179107e-01, -4.42050062e-02,
        -1.14589140e-01, -1.16827384e-01,  3.96963149e-01,
        -2.25550562e-01, -3.23457003e-01],
       [-6.54111728e-02, -5.16239643e-01, -1.23635687e-01,
        -1.11396611e-01, -7.47717544e-02,  3.07724148e-01,
        -1.77434623e-01, -5.47965579e-02],
       [-1.64312854e-01, -3.31365615e-01, -1.35465875e-01,
        -8.30863044e-02, -1.77716568e-01,  2.99999326e-01,
        -2.72144645e-01, -2.27195203e-01],
       [-4.38750833e-02, -3.47456932e-01, -6.55024350e-02,
        -1.78811491e-01, -2.45242603e-02,  2.95873493e-01,
        -1.45859972e-01, -2.31323436e-01],
       [-1.80254683e-01, -4.55338150e-01, -7.88781643e-02,
        -2.19018199e-02, -9.67076719e-02,  3.25831145e-01,
        -2.58899391e-01, -1.95645839e-01],
       [-1.27718553e-01, -6.08536422e-01, -2.77909823e-02,
         6.94555640e-02,  7.98792914e-02,  3.73990089e-01,
        -2.21920013e-01, -1.73693419e-01],
       [-1.42879814e-01, -5.13576686e-01, -8.14921111e-02,
        -2.35008448e-02,  2.08772179e-02,  3.67647558e-01,
        -1.91725448e-01, -1.06755815e-01],
       [-7.71070644e-02, -4.98558730e-01, -2.33375635e-02,
        -1.00390688e-01, -3.51426341e-02,  3.60029906e-01,
        -1.77077487e-01, -2.46728525e-01],
       [-1.59254178e-01, -5.98094642e-01, -1.80913657e-02,
        -4.79988158e-02, -4.94632348e-02,  4.43646401e-01,
        -2.06515357e-01, -2.62890190e-01],
       [-1.79236606e-01, -4.76676166e-01, -1.40835680e-02,
         1.15995808e-02, -4.20467034e-02,  4.13973719e-01,
        -2.55411714e-01, -1.11851767e-01],
       [-1.60640314e-01, -5.07153332e-01, -3.04569006e-02,
        -2.35925894e-02, -2.34966376e-03,  3.47699285e-01,
        -1.96314156e-01, -1.35884032e-01],
       [-1.25007883e-01, -4.69802052e-01, -7.38560110e-02,
        -2.53049005e-02, -4.87160124e-02,  4.07054484e-01,
        -2.30473682e-01, -9.21328180e-03],
       [-8.80859494e-02, -4.45744872e-01, -4.97544855e-02,
        -5.37454113e-02, -2.63143871e-02,  3.25120300e-01,
        -2.09776551e-01, -1.98745385e-01],
       [-1.77105010e-01, -4.55949157e-01, -6.41057491e-02,
        -2.25986075e-02, -1.08012356e-01,  3.02833408e-01,
        -2.73969054e-01, -2.17731118e-01],
       [-1.61958367e-01, -5.72296143e-01, -1.42342165e-01,
        -6.56816438e-02,  1.63053218e-02,  4.29049075e-01,
        -2.08575755e-01, -2.69168407e-01]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[ 5.05898986e-03, -5.32131910e-01, -3.87133881e-02,
        -1.31909892e-01,  1.13504104e-01,  3.34148198e-01,
        -1.11067966e-01, -2.32353359e-01],
       [-1.22852162e-01, -5.65635562e-01, -1.12717776e-02,
        -5.80085926e-02, -3.09555419e-02,  3.17846864e-01,
        -1.89933047e-01, -1.78060696e-01],
       [-1.05382353e-01, -5.27383864e-01, -3.90397967e-03,
        -1.76178552e-02, -1.61233533e-03,  3.80987465e-01,
        -2.02921659e-01, -1.81538910e-01],
       [ 9.56001226e-03, -4.66308117e-01, -1.16033942e-01,
        -2.14705974e-01, -7.28127658e-02,  3.01274985e-01,
        -1.30244449e-01, -1.46611676e-01],
       [-2.20126137e-01, -4.50970203e-01, -4.46840972e-02,
        -4.10550609e-02, -2.04762757e-01,  3.85988325e-01,
        -3.04375768e-01, -1.84373707e-01],
       [-7.47959390e-02, -4.81269985e-01, -1.00260459e-01,
        -7.92435259e-02, -8.76817778e-02,  2.61482060e-01,
        -1.56180799e-01, -3.61789390e-02],
       [-1.37708902e-01, -4.66495603e-01, -9.56662893e-02,
        -4.88345884e-02, -5.00421301e-02,  3.99511248e-01,
        -2.40370363e-01, -1.80917218e-01],
       [-1.58298403e-01, -3.88478518e-01, -1.20372057e-01,
        -1.28985286e-01, -1.77183419e-01,  2.75613904e-01,
        -2.23425642e-01, -1.72922030e-01],
       [-2.16710102e-02, -2.45451048e-01, -1.67694762e-01,
        -2.22198009e-01, -2.00189903e-01,  2.76021510e-01,
        -2.20131233e-01, -2.30918124e-01],
       [-8.82383902e-03, -6.02014005e-01, -1.39854386e-01,
        -1.37483150e-01,  4.86070551e-02,  2.86939085e-01,
        -1.16180263e-01, -4.98109013e-02],
       [-1.53016588e-02, -4.46285039e-01, -1.11901037e-01,
        -1.84999198e-01,  2.96178050e-02,  3.60994071e-01,
        -1.47108331e-01, -2.38756150e-01],
       [-1.13233551e-01, -5.14516890e-01, -5.32274358e-02,
        -1.15134483e-02, -1.21143028e-01,  2.75807679e-01,
        -2.53132164e-01, -2.00091973e-01],
       [-4.75079529e-02, -3.47227186e-01, -1.47757739e-01,
        -1.53185874e-01, -5.03411442e-02,  2.90269792e-01,
        -1.88822061e-01, -1.24428280e-01],
       [-1.17776893e-01, -3.45590353e-01, -4.33678320e-03,
         9.69968550e-03, -2.81737066e-05,  2.68763274e-01,
        -1.92640141e-01, -9.92557108e-02],
       [-1.83639098e-02, -4.52433497e-01, -1.50689691e-01,
        -2.04501808e-01, -1.12104446e-01,  3.14502567e-01,
        -1.63947880e-01, -1.14534639e-01],
       [-4.20843884e-02, -5.24201632e-01, -1.32820815e-01,
        -1.97387859e-01,  4.90463935e-02,  3.70576948e-01,
        -1.36890963e-01, -9.00528878e-02],
       [-1.44168273e-01, -6.06853962e-01, -4.06568907e-02,
         7.38242362e-03,  7.41544180e-03,  3.46198708e-01,
        -2.01001182e-01, -1.70106336e-01],
       [-1.70439437e-01, -5.93179107e-01, -4.42050137e-02,
        -1.14589132e-01, -1.16827399e-01,  3.96963149e-01,
        -2.25550547e-01, -3.23456943e-01],
       [-6.54111803e-02, -5.16239643e-01, -1.23635702e-01,
        -1.11396641e-01, -7.47717693e-02,  3.07724118e-01,
        -1.77434623e-01, -5.47965728e-02],
       [-1.64312899e-01, -3.31365675e-01, -1.35465890e-01,
        -8.30863118e-02, -1.77716568e-01,  2.99999356e-01,
        -2.72144645e-01, -2.27195203e-01],
       [-4.38750871e-02, -3.47456932e-01, -6.55024275e-02,
        -1.78811491e-01, -2.45242510e-02,  2.95873463e-01,
        -1.45859927e-01, -2.31323481e-01],
       [-1.80254668e-01, -4.55338150e-01, -7.88781643e-02,
        -2.19018124e-02, -9.67076719e-02,  3.25831145e-01,
        -2.58899420e-01, -1.95645884e-01],
       [-1.27718583e-01, -6.08536422e-01, -2.77909972e-02,
         6.94555938e-02,  7.98793063e-02,  3.73990089e-01,
        -2.21919999e-01, -1.73693433e-01],
       [-1.42879784e-01, -5.13576686e-01, -8.14921260e-02,
        -2.35008523e-02,  2.08772309e-02,  3.67647648e-01,
        -1.91725463e-01, -1.06755823e-01],
       [-7.71070868e-02, -4.98558730e-01, -2.33375654e-02,
        -1.00390717e-01, -3.51426378e-02,  3.60029966e-01,
        -1.77077457e-01, -2.46728569e-01],
       [-1.59254178e-01, -5.98094583e-01, -1.80913657e-02,
        -4.79988307e-02, -4.94632348e-02,  4.43646431e-01,
        -2.06515402e-01, -2.62890190e-01],
       [-1.79236606e-01, -4.76676226e-01, -1.40835699e-02,
         1.15995808e-02, -4.20467183e-02,  4.13973778e-01,
        -2.55411714e-01, -1.11851804e-01],
       [-1.60640299e-01, -5.07153332e-01, -3.04569080e-02,
        -2.35926080e-02, -2.34967750e-03,  3.47699285e-01,
        -1.96314201e-01, -1.35884061e-01],
       [-1.25007898e-01, -4.69802052e-01, -7.38560259e-02,
        -2.53049042e-02, -4.87160087e-02,  4.07054484e-01,
        -2.30473697e-01, -9.21329111e-03],
       [-8.80859718e-02, -4.45744842e-01, -4.97544967e-02,
        -5.37454225e-02, -2.63143983e-02,  3.25120389e-01,
        -2.09776551e-01, -1.98745355e-01],
       [-1.77104965e-01, -4.55949247e-01, -6.41057640e-02,
        -2.25986112e-02, -1.08012393e-01,  3.02833438e-01,
        -2.73969114e-01, -2.17731133e-01],
       [-1.61958396e-01, -5.72296143e-01, -1.42342195e-01,
        -6.56816512e-02,  1.63053349e-02,  4.29048985e-01,
        -2.08575740e-01, -2.69168437e-01]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/4.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 1024), dtype=float32, numpy=
array([[ 0.00361719, -0.02201085, -0.04096252, ...,  0.00574454,
        -0.06119001, -0.01358329]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 1024), dtype=float32, numpy=
array([[ 0.00361719, -0.02201085, -0.04096254, ...,  0.00574454,
        -0.06119002, -0.0135833 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/40.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 7), dtype=float32, numpy=
array([[-1.1782027e-01, -1.0067361e-01, -2.7090198e-01,  2.3402508e-01,
        -2.3107885e-01, -6.4467818e-02,  4.7978044e-01],
       [-1.5334365e-01, -1.2682715e-01, -1.3020274e-01,  8.1294673e-03,
        -2.1318848e-01, -1.3063841e-01,  3.0406588e-01],
       [-2.7433157e-01, -1.5508910e-01, -1.9367735e-01,  1.1171943e-01,
        -2.9241347e-01, -2.5709854e-02,  4.3164757e-01],
       [-1.2190487e-01, -1.6379859e-01, -1.9621226e-01,  2.3432484e-01,
        -1.4091222e-01, -4.5701019e-02,  2.8958154e-01],
       [-1.6886750e-01, -1.6571677e-01, -2.3791210e-01,  8.9717507e-02,
        -2.5850806e-01, -8.7906584e-02,  3.3410493e-01],
       [-2.2353616e-01, -1.9048323e-01, -2.8396401e-01,  5.8609441e-02,
        -1.5925483e-01, -1.6139457e-01,  3.5525349e-01],
       [-1.4831944e-01,  2.6908837e-02, -1.6832244e-01,  2.0687141e-01,
        -2.3882926e-01, -4.1878134e-02,  3.8031694e-01],
       [-1.2748349e-01, -2.3062205e-02, -3.5323179e-01,  2.6899302e-01,
        -1.4192434e-01,  2.0012299e-02,  3.4158945e-01],
       [-9.5595695e-02, -1.7095266e-01, -1.8597382e-01,  7.8861535e-02,
        -1.8614648e-01, -1.4502960e-01,  3.5741958e-01],
       [-2.0509855e-01, -1.3070367e-01, -2.2235164e-01,  1.4026085e-01,
        -1.8751016e-01, -7.2678342e-02,  3.8680419e-01],
       [-5.5748604e-02, -1.6552487e-01, -2.8372243e-01,  2.7593178e-01,
        -1.8458465e-01, -1.0464337e-01,  2.5440228e-01],
       [-1.1929908e-01, -2.9468760e-01, -3.3933514e-01,  2.6127124e-01,
        -1.2711701e-01, -7.9429016e-02,  3.1115463e-01],
       [-1.3287811e-01, -1.6428763e-01, -2.3272219e-01,  1.6462497e-01,
        -1.7218450e-01, -1.3157143e-01,  2.7745262e-01],
       [-2.1253973e-01, -1.2761299e-01, -2.6626477e-01,  8.3888136e-02,
        -1.6862857e-01,  2.6370842e-02,  3.5767305e-01],
       [-1.7036472e-01, -1.7359819e-01, -1.9481713e-01,  5.9177443e-02,
        -1.9774637e-01,  5.9525762e-02,  2.9569352e-01],
       [-1.7212079e-01, -2.1514338e-01, -2.2487672e-01,  1.1380072e-01,
        -1.7162979e-01,  3.8495764e-05,  2.4450879e-01],
       [-3.0162081e-01, -2.9009846e-01, -3.0814731e-01,  1.0307800e-01,
        -2.9372486e-01, -1.6888170e-01,  2.8701597e-01],
       [-2.0075402e-01, -1.4813715e-01, -3.1102556e-01,  2.0163950e-01,
        -2.1672209e-01, -7.9856612e-02,  3.7252960e-01],
       [-1.9187851e-01, -1.4657971e-01, -2.1359402e-01,  1.3794732e-01,
        -2.1485652e-01, -1.3310757e-02,  3.6496913e-01],
       [-1.4912561e-01, -2.2522290e-01, -2.7257439e-01,  1.4373386e-01,
        -2.0211706e-01, -1.3317016e-01,  4.5706412e-01],
       [-1.9473729e-01, -2.2352612e-01, -2.0880814e-01,  8.3334677e-02,
        -2.0294395e-01, -1.9846742e-01,  3.1120700e-01],
       [-2.2269799e-01, -5.8285497e-02, -2.3358361e-01,  6.7143418e-02,
        -1.9343209e-01, -9.4549134e-02,  4.0260169e-01],
       [-1.6048880e-01, -8.3062015e-02, -2.3709014e-01,  1.0037795e-01,
        -1.9692127e-01, -7.6640360e-02,  3.8315785e-01],
       [-1.5063918e-01, -1.2437077e-01, -3.1357598e-01,  5.4510087e-02,
        -2.4750839e-01, -2.1458495e-02,  3.5020187e-01],
       [-1.9876222e-01, -2.5461304e-01, -1.8520814e-01,  7.5763345e-02,
        -2.1007648e-01, -5.3672981e-02,  4.0957651e-01],
       [-2.4034978e-01, -1.0065658e-01, -3.3136845e-01,  2.9373270e-01,
        -1.4196648e-01,  2.4174307e-02,  2.4940974e-01],
       [-2.6341883e-02, -1.5175086e-01, -2.4134105e-01,  1.7268667e-01,
        -1.7018594e-01, -1.0329799e-01,  2.9303941e-01],
       [-9.3501665e-02, -1.4281674e-01, -2.8483436e-01,  2.7604821e-01,
        -2.3559739e-01, -1.4593688e-01,  3.3676147e-01],
       [-2.3268387e-01, -2.5891405e-01, -2.4942270e-01,  2.6212430e-01,
        -1.7526405e-01, -3.5593960e-02,  3.5182980e-01],
       [-2.3284988e-01, -2.1854222e-01, -1.7788678e-01,  9.9842973e-02,
        -1.6091451e-01,  5.5457605e-03,  2.8378129e-01],
       [-8.3340190e-02, -2.5253457e-01, -2.3713863e-01,  2.5280452e-01,
        -2.0112120e-01, -1.2827358e-01,  5.1447040e-01],
       [-1.7214093e-01, -1.2355759e-01, -2.0112394e-01,  1.6154882e-01,
        -2.2798105e-01, -4.4076502e-02,  3.7888044e-01]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 7), dtype=float32, numpy=
array([[-1.17820278e-01, -1.00673608e-01, -2.70901978e-01,
         2.34025076e-01, -2.31078818e-01, -6.44678324e-02,
         4.79780406e-01],
       [-1.53343633e-01, -1.26827121e-01, -1.30202755e-01,
         8.12944956e-03, -2.13188484e-01, -1.30638421e-01,
         3.04065853e-01],
       [-2.74331570e-01, -1.55089110e-01, -1.93677366e-01,
         1.11719467e-01, -2.92413443e-01, -2.57098619e-02,
         4.31647539e-01],
       [-1.21904865e-01, -1.63798586e-01, -1.96212262e-01,
         2.34324753e-01, -1.40912220e-01, -4.57010120e-02,
         2.89581567e-01],
       [-1.68867528e-01, -1.65716767e-01, -2.37912074e-01,
         8.97175223e-02, -2.58508056e-01, -8.79065990e-02,
         3.34104896e-01],
       [-2.23536193e-01, -1.90483198e-01, -2.83964008e-01,
         5.86094670e-02, -1.59254864e-01, -1.61394566e-01,
         3.55253547e-01],
       [-1.48319423e-01,  2.69088484e-02, -1.68322399e-01,
         2.06871390e-01, -2.38829285e-01, -4.18781303e-02,
         3.80316913e-01],
       [-1.27483472e-01, -2.30622143e-02, -3.53231758e-01,
         2.68993050e-01, -1.41924366e-01,  2.00123135e-02,
         3.41589481e-01],
       [-9.55957025e-02, -1.70952678e-01, -1.85973808e-01,
         7.88615420e-02, -1.86146513e-01, -1.45029604e-01,
         3.57419699e-01],
       [-2.05098525e-01, -1.30703703e-01, -2.22351700e-01,
         1.40260845e-01, -1.87510177e-01, -7.26783499e-02,
         3.86804223e-01],
       [-5.57486154e-02, -1.65524915e-01, -2.83722460e-01,
         2.75931776e-01, -1.84584677e-01, -1.04643404e-01,
         2.54402310e-01],
       [-1.19299084e-01, -2.94687629e-01, -3.39335203e-01,
         2.61271209e-01, -1.27117023e-01, -7.94290528e-02,
         3.11154664e-01],
       [-1.32878080e-01, -1.64287612e-01, -2.32722193e-01,
         1.64624989e-01, -1.72184482e-01, -1.31571472e-01,
         2.77452618e-01],
       [-2.12539732e-01, -1.27613008e-01, -2.66264766e-01,
         8.38881433e-02, -1.68628588e-01,  2.63708401e-02,
         3.57673019e-01],
       [-1.70364752e-01, -1.73598200e-01, -1.94817126e-01,
         5.91774434e-02, -1.97746396e-01,  5.95257804e-02,
         2.95693606e-01],
       [-1.72120780e-01, -2.15143368e-01, -2.24876747e-01,
         1.13800749e-01, -1.71629801e-01,  3.84974774e-05,
         2.44508788e-01],
       [-3.01620781e-01, -2.90098459e-01, -3.08147281e-01,
         1.03078015e-01, -2.93724865e-01, -1.68881729e-01,
         2.87015975e-01],
       [-2.00754061e-01, -1.48137137e-01, -3.11025560e-01,
         2.01639518e-01, -2.16722041e-01, -7.98566341e-02,
         3.72529626e-01],
       [-1.91878542e-01, -1.46579713e-01, -2.13594034e-01,
         1.37947321e-01, -2.14856490e-01, -1.33107658e-02,
         3.64969134e-01],
       [-1.49125621e-01, -2.25222901e-01, -2.72574395e-01,
         1.43733859e-01, -2.02117026e-01, -1.33170187e-01,
         4.57064122e-01],
       [-1.94737315e-01, -2.23526165e-01, -2.08808169e-01,
         8.33346546e-02, -2.02943951e-01, -1.98467374e-01,
         3.11207026e-01],
       [-2.22697958e-01, -5.82855195e-02, -2.33583659e-01,
         6.71434551e-02, -1.93432108e-01, -9.45491493e-02,
         4.02601689e-01],
       [-1.60488814e-01, -8.30620378e-02, -2.37090141e-01,
         1.00377977e-01, -1.96921304e-01, -7.66403824e-02,
         3.83157849e-01],
       [-1.50639176e-01, -1.24370776e-01, -3.13575923e-01,
         5.45100830e-02, -2.47508347e-01, -2.14584954e-02,
         3.50201875e-01],
       [-1.98762268e-01, -2.54613042e-01, -1.85208127e-01,
         7.57633448e-02, -2.10076466e-01, -5.36729880e-02,
         4.09576476e-01],
       [-2.40349725e-01, -1.00656591e-01, -3.31368417e-01,
         2.93732792e-01, -1.41966477e-01,  2.41743028e-02,
         2.49409765e-01],
       [-2.63419040e-02, -1.51750892e-01, -2.41341054e-01,
         1.72686681e-01, -1.70185938e-01, -1.03297979e-01,
         2.93039352e-01],
       [-9.35016945e-02, -1.42816722e-01, -2.84834385e-01,
         2.76048183e-01, -2.35597342e-01, -1.45936877e-01,
         3.36761445e-01],
       [-2.32683912e-01, -2.58913994e-01, -2.49422714e-01,
         2.62124270e-01, -1.75264031e-01, -3.55939679e-02,
         3.51829827e-01],
       [-2.32849941e-01, -2.18542233e-01, -1.77886784e-01,
         9.98429880e-02, -1.60914496e-01,  5.54576050e-03,
         2.83781320e-01],
       [-8.33402276e-02, -2.52534598e-01, -2.37138674e-01,
         2.52804518e-01, -2.01121211e-01, -1.28273591e-01,
         5.14470398e-01],
       [-1.72140941e-01, -1.23557597e-01, -2.01123938e-01,
         1.61548868e-01, -2.27981046e-01, -4.40765247e-02,
         3.78880411e-01]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/41.py
2023-04-19 13:44:19.290257: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at cudnn_rnn_ops.cc:1553 : UNKNOWN: CUDNN_STATUS_BAD_PARAM
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): 'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)'
{'res_cpu': [<tf.Tensor: shape=(32, 10, 0), dtype=float32, numpy=array([], shape=(32, 10, 0), dtype=float32)>, <tf.Tensor: shape=(32, 0), dtype=float32, numpy=array([], shape=(32, 0), dtype=float32)>, <tf.Tensor: shape=(32, 0), dtype=float32, numpy=array([], shape=(32, 0), dtype=float32)>], 'err_gpu': 'Error:Exception encountered when calling layer "lstm" (type LSTM).\n\nCUDNN_STATUS_BAD_PARAM\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): \'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)\' [Op:CudnnRNN]\n\nCall arguments received by layer "lstm" (type LSTM):\n  • inputs=tf.Tensor(shape=(32, 10, 8), dtype=float32)\n  • mask=None\n  • training=None\n  • initial_state=None'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/42.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.28054607,  0.11196616,  0.14493027,  0.03758933, -0.03042063,
         0.06907731,  0.02487427, -0.12072494]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.28054607,  0.11196617,  0.14493026,  0.03758935, -0.03042063,
         0.06907734,  0.02487427, -0.12072496]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/43.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 6), dtype=float32, numpy=
array([[-0.06629691, -0.38422403,  0.27730533,  0.30087197,  0.0493338 ,
         0.03610511],
       [-0.10087135, -0.38107604,  0.22929087,  0.2873723 ,  0.04409414,
         0.20923948],
       [-0.04549836, -0.35916543,  0.20723145,  0.34535795,  0.17626913,
         0.23138699],
       [-0.05880125, -0.37935203,  0.24141867,  0.37200186,  0.06735773,
         0.29999158],
       [ 0.01031596, -0.37848213,  0.2970122 ,  0.26416335,  0.14939381,
         0.18904261],
       [ 0.06226625, -0.3506341 ,  0.27006647,  0.3512864 ,  0.13955766,
         0.1237977 ],
       [ 0.0722686 , -0.27965987,  0.28472584,  0.35958588, -0.17370227,
         0.17803417],
       [-0.13255435, -0.3133451 ,  0.20268719,  0.31190392,  0.26159126,
         0.10039007],
       [-0.10482576, -0.35296234,  0.23483199,  0.24807215,  0.10059763,
         0.21186917],
       [-0.14321426, -0.3662011 ,  0.2767161 ,  0.34691253,  0.1050868 ,
         0.27836648],
       [ 0.04164665, -0.27362496,  0.23688659,  0.5086518 ,  0.03204148,
         0.20110926],
       [-0.18018626, -0.3795969 ,  0.2842995 ,  0.3292468 ,  0.09258238,
         0.18564136],
       [-0.05574128, -0.41656375,  0.30447298,  0.3412783 ,  0.09355728,
         0.32596338],
       [-0.05521836, -0.40346882,  0.26408643,  0.2875917 ,  0.10263801,
         0.15559557],
       [-0.07277361, -0.37204957,  0.19293754,  0.2852849 ,  0.10597949,
         0.10445268],
       [-0.06878195, -0.29023975,  0.25557452,  0.2963238 ,  0.284223  ,
         0.15596728],
       [-0.05973166, -0.54913354,  0.29231414,  0.23937204,  0.13375114,
         0.3287775 ],
       [-0.0381701 , -0.37658545,  0.21553816,  0.29589763,  0.1172991 ,
         0.24154997],
       [-0.17452438, -0.51119554,  0.27838132,  0.25212097,  0.19067834,
         0.25818324],
       [-0.11471545, -0.33224943,  0.23691964,  0.25641337,  0.24326323,
         0.18643788],
       [-0.15234181, -0.48182678,  0.2509604 ,  0.24751352,  0.07924874,
         0.13743691],
       [-0.08554478, -0.36681643,  0.2805167 ,  0.33881015,  0.10741555,
         0.2550568 ],
       [-0.07982347, -0.31845814,  0.22789589,  0.34347424,  0.31005257,
         0.245013  ],
       [-0.00890809, -0.57106966,  0.31628877,  0.2573289 , -0.00562701,
         0.35206515],
       [-0.13563053, -0.42130753,  0.25584581,  0.33906877,  0.30649635,
         0.2777371 ],
       [-0.05653637, -0.2773348 ,  0.23334609,  0.3687868 , -0.03008389,
         0.08584772],
       [-0.07797109, -0.38126385,  0.24429202,  0.27701193,  0.04002124,
         0.1759063 ],
       [-0.08086645, -0.4255033 ,  0.253427  ,  0.34095317,  0.10912859,
         0.24451746],
       [-0.10860115, -0.40776953,  0.2829993 ,  0.32547036,  0.19289598,
         0.11312216],
       [-0.16221966, -0.46514115,  0.32018298,  0.2214927 ,  0.28483796,
         0.21382543],
       [-0.12846959, -0.56943774,  0.30890787,  0.29731578,  0.27068713,
         0.32549885],
       [-0.08585554, -0.3540616 ,  0.2222864 ,  0.4121184 ,  0.04335648,
         0.2396522 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 6), dtype=float32, numpy=
array([[-0.06629691, -0.3842241 ,  0.27730542,  0.30087197,  0.04933379,
         0.03610513],
       [-0.10087135, -0.3810761 ,  0.22929087,  0.28737232,  0.04409411,
         0.20923951],
       [-0.04549835, -0.35916546,  0.20723139,  0.345358  ,  0.17626913,
         0.2313871 ],
       [-0.05880126, -0.3793521 ,  0.24141864,  0.3720018 ,  0.06735776,
         0.29999158],
       [ 0.01031597, -0.37848204,  0.2970122 ,  0.26416332,  0.14939381,
         0.18904264],
       [ 0.06226625, -0.3506341 ,  0.2700665 ,  0.3512864 ,  0.13955766,
         0.12379771],
       [ 0.07226863, -0.2796598 ,  0.2847258 ,  0.35958585, -0.17370225,
         0.17803422],
       [-0.13255435, -0.31334513,  0.20268722,  0.3119039 ,  0.26159126,
         0.10039014],
       [-0.10482579, -0.3529624 ,  0.23483196,  0.24807216,  0.10059761,
         0.21186914],
       [-0.14321424, -0.36620116,  0.27671605,  0.34691247,  0.10508679,
         0.27836648],
       [ 0.04164664, -0.27362502,  0.23688659,  0.50865173,  0.03204149,
         0.2011093 ],
       [-0.18018627, -0.37959686,  0.28429952,  0.32924676,  0.09258237,
         0.1856414 ],
       [-0.0557413 , -0.41656387,  0.30447298,  0.3412784 ,  0.09355731,
         0.32596338],
       [-0.05521835, -0.4034688 ,  0.26408643,  0.2875917 ,  0.10263804,
         0.15559554],
       [-0.07277363, -0.3720495 ,  0.19293752,  0.28528485,  0.1059795 ,
         0.10445269],
       [-0.06878196, -0.29023975,  0.2555745 ,  0.2963238 ,  0.284223  ,
         0.1559673 ],
       [-0.05973168, -0.5491335 ,  0.29231408,  0.23937201,  0.13375114,
         0.32877755],
       [-0.0381701 , -0.37658542,  0.21553811,  0.29589766,  0.11729912,
         0.24155001],
       [-0.17452444, -0.51119554,  0.2783813 ,  0.25212097,  0.19067834,
         0.25818327],
       [-0.11471547, -0.3322495 ,  0.23691964,  0.25641334,  0.24326321,
         0.18643788],
       [-0.15234183, -0.4818268 ,  0.25096038,  0.2475135 ,  0.07924873,
         0.13743693],
       [-0.08554479, -0.3668165 ,  0.28051674,  0.33881012,  0.10741553,
         0.25505683],
       [-0.07982349, -0.31845808,  0.22789592,  0.34347424,  0.3100526 ,
         0.24501303],
       [-0.00890809, -0.57106966,  0.3162887 ,  0.2573289 , -0.00562701,
         0.35206515],
       [-0.13563053, -0.4213075 ,  0.25584581,  0.33906868,  0.30649638,
         0.2777372 ],
       [-0.05653638, -0.27733478,  0.23334615,  0.3687868 , -0.03008386,
         0.08584774],
       [-0.0779711 , -0.38126388,  0.24429204,  0.27701193,  0.04002127,
         0.17590627],
       [-0.08086647, -0.42550325,  0.253427  ,  0.3409532 ,  0.10912857,
         0.24451749],
       [-0.10860115, -0.4077695 ,  0.28299928,  0.32547036,  0.192896  ,
         0.11312217],
       [-0.16221966, -0.46514115,  0.32018298,  0.2214927 ,  0.28483796,
         0.21382542],
       [-0.12846959, -0.5694378 ,  0.30890787,  0.29731575,  0.2706871 ,
         0.32549882],
       [-0.08585554, -0.3540616 ,  0.22228639,  0.41211838,  0.0433565 ,
         0.23965223]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/44.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 4), dtype=float32, numpy=array([[0.0564874 , 0.27626753, 0.2064472 , 0.16680446]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 4), dtype=float32, numpy=array([[0.0564874 , 0.27626756, 0.20644715, 0.16680445]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/45.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[ 0.11844663, -0.28883705]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[ 0.11844664, -0.2888371 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/46.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[ 9.17636156e-02,  4.49901760e-01,  2.25391999e-01,
        -1.20931529e-01,  1.06727727e-01, -1.75992474e-01,
        -1.70474410e-01, -5.98392971e-02],
       [ 1.16601773e-01,  4.40388978e-01,  6.99737072e-02,
        -1.17110997e-01,  1.34292275e-01, -3.45369399e-01,
        -1.03387721e-01, -6.27273321e-02],
       [ 2.24927768e-01,  3.69676620e-01,  1.52493611e-01,
        -1.08755670e-01,  1.40371054e-01, -2.66358733e-01,
        -2.89161980e-01,  1.98135767e-02],
       [ 1.88214004e-01,  3.97763819e-01,  7.14799687e-02,
        -8.42395052e-02,  1.28437787e-01, -1.61396012e-01,
        -1.64387658e-01, -1.56503450e-02],
       [ 6.58432767e-02,  3.49617958e-01,  8.05123895e-02,
        -4.03067246e-02,  1.93698958e-01, -8.24492276e-02,
        -4.72514927e-02, -1.08234040e-01],
       [ 1.82050794e-01,  4.99921441e-01,  1.31813392e-01,
        -1.23120159e-01,  1.07558757e-01, -2.86240339e-01,
        -1.85369581e-01, -3.66676785e-02],
       [ 4.90748025e-02,  4.10585344e-01, -6.06426829e-03,
        -1.57961976e-02,  2.10100502e-01, -6.98932856e-02,
        -1.14896871e-01, -1.86903581e-01],
       [ 1.88462853e-01,  4.12410945e-01,  3.19384448e-02,
        -2.51228530e-02,  1.47962004e-01, -9.53830630e-02,
        -2.59500086e-01, -8.33524987e-02],
       [ 1.35858729e-01,  3.80009651e-01,  1.12006865e-01,
        -1.04216589e-02,  1.36214152e-01, -1.13713540e-01,
        -1.69958189e-01, -8.57062116e-02],
       [ 1.51893869e-01,  4.84832764e-01,  2.56551169e-02,
        -2.30039209e-02,  2.12235138e-01, -1.66355968e-01,
        -6.54726103e-02, -1.36164427e-01],
       [ 1.27609640e-01,  4.59528893e-01,  5.26600815e-02,
        -1.32885292e-01,  1.10661119e-01, -1.81759566e-01,
        -1.83511361e-01, -6.36850893e-02],
       [ 1.11799717e-01,  3.98425043e-01,  2.31165048e-02,
         7.68860504e-02,  1.77406207e-01, -1.05901003e-01,
        -1.73262492e-01, -1.39200449e-01],
       [ 1.64341509e-01,  4.71567661e-01,  1.51250318e-01,
        -9.26155150e-02,  1.41825318e-01, -3.17622513e-01,
        -1.59436479e-01, -7.98455402e-02],
       [ 1.27302110e-01,  4.11919802e-01,  4.79599126e-02,
         4.13463935e-02,  1.91710860e-01, -1.45977169e-01,
        -1.60964504e-01, -1.20662130e-01],
       [ 1.30812868e-01,  4.83334959e-01,  1.29057184e-01,
        -2.85914820e-02,  1.80825934e-01, -2.93933392e-01,
        -8.61589164e-02, -4.35771048e-02],
       [ 1.85186282e-01,  4.95580643e-01,  1.56464241e-02,
         3.31764333e-02,  1.93321645e-01, -3.92501742e-01,
        -1.78845987e-01, -1.22920066e-01],
       [ 1.68218091e-01,  4.18673515e-01,  1.24062575e-01,
        -3.11622974e-02,  1.68576121e-01, -8.23726505e-02,
        -1.58801481e-01, -7.52332583e-02],
       [ 1.88662842e-01,  3.94094348e-01,  6.96926489e-02,
         4.13294765e-04,  1.81187302e-01, -2.71618724e-01,
        -2.35666931e-01, -4.16017137e-02],
       [ 1.57834709e-01,  4.12863940e-01,  1.88856527e-01,
         3.48897949e-02,  1.55620530e-01, -6.17231615e-02,
        -1.43365860e-01, -1.05290465e-01],
       [ 1.68293744e-01,  4.38118011e-01,  1.72383919e-01,
        -9.85043589e-03,  1.84630632e-01, -2.08066046e-01,
        -1.38373852e-01, -4.93862443e-02],
       [ 1.42064929e-01,  3.85301411e-01,  1.13423906e-01,
        -4.40660417e-02,  2.00374246e-01, -1.52309075e-01,
        -7.12072551e-02, -6.65907785e-02],
       [ 1.59560069e-01,  4.32147741e-01,  8.29573050e-02,
        -2.84833722e-02,  1.48381755e-01, -2.20471039e-01,
        -1.65927708e-01, -2.30992790e-02],
       [ 1.45938769e-01,  4.02945369e-01,  5.51771186e-02,
        -5.17337292e-04,  1.62514135e-01, -2.52030104e-01,
        -1.65264517e-01, -7.97491372e-02],
       [ 2.01819792e-01,  4.62731868e-01,  1.79042861e-01,
        -1.04547516e-01,  1.26109943e-01, -2.76368767e-01,
        -2.02397555e-01, -1.38870915e-02],
       [ 1.55369088e-01,  4.85264063e-01,  7.27821290e-02,
         9.63507220e-03,  1.69194549e-01, -8.00527856e-02,
        -1.77593052e-01, -1.46225616e-01],
       [ 9.05604288e-02,  4.65575844e-01,  1.22807346e-01,
         4.32024822e-02,  1.45679086e-01, -1.47181734e-01,
        -1.48873091e-01, -9.48507786e-02],
       [ 1.03147954e-01,  4.45317358e-01,  7.53206760e-02,
         1.52062913e-02,  2.53525048e-01, -2.73764998e-01,
        -2.49023959e-02, -1.11809090e-01],
       [ 1.67632088e-01,  4.19721216e-01,  7.16247633e-02,
        -9.89754871e-02,  1.67146578e-01, -2.36145020e-01,
        -1.17773719e-01, -7.99027178e-03],
       [ 1.42673761e-01,  3.86146665e-01,  2.59052888e-02,
         3.72827463e-02,  2.17036366e-01, -1.33101031e-01,
        -4.63599041e-02, -9.57459956e-02],
       [ 1.10934094e-01,  4.71843630e-01,  1.55541161e-02,
        -9.07378346e-02,  1.51460499e-01, -2.80910343e-01,
        -1.53697744e-01, -1.41839549e-01],
       [ 1.63151935e-01,  5.57577968e-01,  1.92769215e-01,
        -1.88627109e-01,  9.54186991e-02, -2.76873171e-01,
        -2.53813863e-01, -1.91922467e-02],
       [ 1.40576646e-01,  3.57937932e-01,  4.87718470e-02,
        -3.94030698e-02,  1.57892212e-01, -1.99533299e-01,
        -1.31991431e-01, -9.91870239e-02]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[ 9.17636231e-02,  4.49901700e-01,  2.25392014e-01,
        -1.20931536e-01,  1.06727757e-01, -1.75992459e-01,
        -1.70474425e-01, -5.98393120e-02],
       [ 1.16601765e-01,  4.40389037e-01,  6.99737221e-02,
        -1.17111005e-01,  1.34292230e-01, -3.45369428e-01,
        -1.03387721e-01, -6.27273470e-02],
       [ 2.24927798e-01,  3.69676590e-01,  1.52493641e-01,
        -1.08755685e-01,  1.40371054e-01, -2.66358733e-01,
        -2.89161980e-01,  1.98135749e-02],
       [ 1.88214034e-01,  3.97763819e-01,  7.14799687e-02,
        -8.42394829e-02,  1.28437757e-01, -1.61395952e-01,
        -1.64387658e-01, -1.56503525e-02],
       [ 6.58432990e-02,  3.49617958e-01,  8.05124044e-02,
        -4.03067246e-02,  1.93698972e-01, -8.24492574e-02,
        -4.72515151e-02, -1.08234063e-01],
       [ 1.82050794e-01,  4.99921411e-01,  1.31813392e-01,
        -1.23120159e-01,  1.07558750e-01, -2.86240369e-01,
        -1.85369596e-01, -3.66676748e-02],
       [ 4.90748063e-02,  4.10585314e-01, -6.06427295e-03,
        -1.57961808e-02,  2.10100472e-01, -6.98932931e-02,
        -1.14896864e-01, -1.86903596e-01],
       [ 1.88462839e-01,  4.12410885e-01,  3.19384374e-02,
        -2.51228772e-02,  1.47962004e-01, -9.53831226e-02,
        -2.59500116e-01, -8.33525136e-02],
       [ 1.35858729e-01,  3.80009621e-01,  1.12006873e-01,
        -1.04216542e-02,  1.36214167e-01, -1.13713555e-01,
        -1.69958204e-01, -8.57062265e-02],
       [ 1.51893884e-01,  4.84832823e-01,  2.56551225e-02,
        -2.30039284e-02,  2.12235168e-01, -1.66355982e-01,
        -6.54726177e-02, -1.36164442e-01],
       [ 1.27609640e-01,  4.59528893e-01,  5.26600815e-02,
        -1.32885277e-01,  1.10661119e-01, -1.81759566e-01,
        -1.83511361e-01, -6.36850893e-02],
       [ 1.11799702e-01,  3.98425043e-01,  2.31165085e-02,
         7.68860504e-02,  1.77406222e-01, -1.05901040e-01,
        -1.73262507e-01, -1.39200434e-01],
       [ 1.64341509e-01,  4.71567631e-01,  1.51250318e-01,
        -9.26155299e-02,  1.41825303e-01, -3.17622572e-01,
        -1.59436479e-01, -7.98455626e-02],
       [ 1.27302095e-01,  4.11919832e-01,  4.79599237e-02,
         4.13464010e-02,  1.91710904e-01, -1.45977199e-01,
        -1.60964504e-01, -1.20662123e-01],
       [ 1.30812854e-01,  4.83334899e-01,  1.29057214e-01,
        -2.85914838e-02,  1.80825904e-01, -2.93933392e-01,
        -8.61589089e-02, -4.35771123e-02],
       [ 1.85186282e-01,  4.95580643e-01,  1.56464186e-02,
         3.31764445e-02,  1.93321645e-01, -3.92501771e-01,
        -1.78846002e-01, -1.22920096e-01],
       [ 1.68218091e-01,  4.18673515e-01,  1.24062553e-01,
        -3.11623085e-02,  1.68576136e-01, -8.23726729e-02,
        -1.58801451e-01, -7.52332658e-02],
       [ 1.88662842e-01,  3.94094378e-01,  6.96926489e-02,
         4.13298083e-04,  1.81187272e-01, -2.71618783e-01,
        -2.35666960e-01, -4.16017175e-02],
       [ 1.57834694e-01,  4.12863880e-01,  1.88856542e-01,
         3.48897986e-02,  1.55620530e-01, -6.17231615e-02,
        -1.43365905e-01, -1.05290495e-01],
       [ 1.68293729e-01,  4.38118011e-01,  1.72383860e-01,
        -9.85043403e-03,  1.84630632e-01, -2.08066121e-01,
        -1.38373852e-01, -4.93862405e-02],
       [ 1.42064959e-01,  3.85301560e-01,  1.13423921e-01,
        -4.40660417e-02,  2.00374231e-01, -1.52309075e-01,
        -7.12072700e-02, -6.65908009e-02],
       [ 1.59560084e-01,  4.32147771e-01,  8.29573348e-02,
        -2.84833759e-02,  1.48381755e-01, -2.20471159e-01,
        -1.65927693e-01, -2.30992865e-02],
       [ 1.45938754e-01,  4.02945310e-01,  5.51771298e-02,
        -5.17332577e-04,  1.62514105e-01, -2.52030075e-01,
        -1.65264517e-01, -7.97491670e-02],
       [ 2.01819822e-01,  4.62731808e-01,  1.79042831e-01,
        -1.04547530e-01,  1.26109928e-01, -2.76368797e-01,
        -2.02397555e-01, -1.38870869e-02],
       [ 1.55369073e-01,  4.85264122e-01,  7.27821290e-02,
         9.63508058e-03,  1.69194564e-01, -8.00527856e-02,
        -1.77593067e-01, -1.46225616e-01],
       [ 9.05604213e-02,  4.65575844e-01,  1.22807354e-01,
         4.32024896e-02,  1.45679086e-01, -1.47181720e-01,
        -1.48873135e-01, -9.48507860e-02],
       [ 1.03147954e-01,  4.45317298e-01,  7.53206760e-02,
         1.52063044e-02,  2.53525078e-01, -2.73765087e-01,
        -2.49023996e-02, -1.11809112e-01],
       [ 1.67632073e-01,  4.19721156e-01,  7.16247782e-02,
        -9.89755020e-02,  1.67146564e-01, -2.36145079e-01,
        -1.17773704e-01, -7.99026806e-03],
       [ 1.42673776e-01,  3.86146665e-01,  2.59052832e-02,
         3.72827575e-02,  2.17036366e-01, -1.33101046e-01,
        -4.63599116e-02, -9.57459956e-02],
       [ 1.10934071e-01,  4.71843630e-01,  1.55541161e-02,
        -9.07378346e-02,  1.51460513e-01, -2.80910373e-01,
        -1.53697789e-01, -1.41839564e-01],
       [ 1.63151950e-01,  5.57577908e-01,  1.92769229e-01,
        -1.88627139e-01,  9.54186916e-02, -2.76873171e-01,
        -2.53813833e-01, -1.91922449e-02],
       [ 1.40576676e-01,  3.57937872e-01,  4.87718396e-02,
        -3.94030698e-02,  1.57892212e-01, -1.99533284e-01,
        -1.31991401e-01, -9.91870165e-02]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/48.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[-0.30623278, -0.00268472, -0.0765185 ,  0.10833932,  0.4524258 ,
         0.12932195]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[-0.30623278, -0.00268472, -0.07651852,  0.10833932,  0.4524258 ,
         0.12932193]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/49.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': [<tf.Tensor: shape=(2, 2), dtype=float32, numpy=
array([[ 0.0133318 , -0.01265088],
       [-0.03011861, -0.00049768]], dtype=float32)>, <tf.Tensor: shape=(2, 2), dtype=float32, numpy=
array([[ 0.0133318 , -0.01265088],
       [-0.03011861, -0.00049768]], dtype=float32)>, <tf.Tensor: shape=(2, 2), dtype=float32, numpy=
array([[ 0.03229654, -0.02091328],
       [-0.07873341, -0.00091585]], dtype=float32)>], 'res_gpu': [<tf.Tensor: shape=(2, 2), dtype=float32, numpy=
array([[ 0.01344479, -0.01463865],
       [-0.03190241, -0.000876  ]], dtype=float32)>, <tf.Tensor: shape=(2, 2), dtype=float32, numpy=
array([[ 0.01344479, -0.01463865],
       [-0.03190241, -0.000876  ]], dtype=float32)>, <tf.Tensor: shape=(2, 2), dtype=float32, numpy=
array([[ 0.03261267, -0.02418828],
       [-0.08331327, -0.00161372]], dtype=float32)>]}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/5.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.00568455, 0.25572032]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.00568456, 0.25572035]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/50.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.09078633,  0.0951496 , -0.11729565,  0.259397  , -0.23369901,
        -0.26429352, -0.04167034,  0.32905012],
       [-0.09865672, -0.00975297, -0.15469024,  0.12662011, -0.25055555,
        -0.20525628,  0.04053627,  0.1946794 ],
       [-0.14782925,  0.05129383, -0.20845748,  0.28462374, -0.18427107,
        -0.20951816,  0.04239888,  0.1855815 ],
       [-0.22786874, -0.11661763, -0.15380397,  0.23800083, -0.26264113,
        -0.4199503 ,  0.06308544,  0.19813542],
       [-0.04876117,  0.10605124, -0.14355531,  0.22864509, -0.16375335,
        -0.26313838,  0.1083109 ,  0.20781194],
       [-0.23917328,  0.05079826, -0.22030407,  0.32530996, -0.23999028,
        -0.39290562, -0.03007406,  0.21075857],
       [-0.15123521,  0.07759497, -0.1277189 ,  0.14199185, -0.21596475,
        -0.14707063, -0.02842296,  0.22297606],
       [-0.12555945,  0.06763931, -0.18110934,  0.32151547, -0.21979591,
        -0.22469705, -0.0304049 ,  0.22175838],
       [-0.11349005,  0.0337384 , -0.21107417,  0.2944875 , -0.18309835,
        -0.19597982,  0.0622077 ,  0.19578356],
       [-0.14439552,  0.0143553 , -0.15115741,  0.30966043, -0.18469839,
        -0.39308012,  0.19299644,  0.20479935],
       [-0.1583819 ,  0.01465881, -0.15294233,  0.15046948, -0.2644575 ,
        -0.2936894 , -0.22227341,  0.24878311],
       [-0.26595882, -0.02447071, -0.26027453,  0.29912803, -0.16406007,
        -0.29028085,  0.07853332,  0.12278063],
       [-0.1598659 , -0.0701571 , -0.13287449,  0.25321692, -0.28154215,
        -0.33635035,  0.10583962,  0.2442997 ],
       [-0.08513242,  0.08469063, -0.13963707,  0.26689917, -0.21292016,
        -0.25865072, -0.00956232,  0.24107932],
       [-0.09861457, -0.01370967, -0.15712896,  0.2904559 , -0.22928168,
        -0.33276278,  0.11550486,  0.29450932],
       [-0.06231999,  0.17825203, -0.13426478,  0.23047198, -0.14692456,
        -0.19524308,  0.06761058,  0.14594996],
       [-0.18032245, -0.00392227, -0.13456522,  0.2555825 , -0.26122984,
        -0.28906006,  0.08846131,  0.12232712],
       [-0.1353389 ,  0.13312174, -0.20823751,  0.29100358, -0.16870159,
        -0.28545156, -0.00729063,  0.24726897],
       [-0.03447044,  0.03552932, -0.03198635,  0.18525806, -0.2689786 ,
        -0.29660746,  0.00264186,  0.30505675],
       [-0.17251402,  0.13523446, -0.18328984,  0.29819995, -0.2479228 ,
        -0.27645928,  0.03734342,  0.17829254],
       [-0.16390553, -0.04618436, -0.19229628,  0.22199008, -0.16186607,
        -0.31260258,  0.05163348,  0.1498644 ],
       [-0.24677385, -0.11190445, -0.19564152,  0.29727605, -0.24470906,
        -0.4260948 ,  0.07423639,  0.27097023],
       [-0.1698109 ,  0.18392065, -0.18556847,  0.23111358, -0.15407369,
        -0.2507886 , -0.0749272 ,  0.18014629],
       [-0.12382277,  0.14803705, -0.22723158,  0.29231367, -0.16784377,
        -0.19888446, -0.05525947,  0.18547589],
       [-0.15858911,  0.17036808, -0.13128254,  0.15909426, -0.21097723,
        -0.14307526, -0.05881587,  0.19675148],
       [-0.17819104, -0.02067388, -0.19895607,  0.23581538, -0.21933042,
        -0.25994524,  0.1533427 ,  0.17925335],
       [-0.16049415,  0.03809176, -0.18363336,  0.26515   , -0.20497881,
        -0.32352564,  0.10839166,  0.22361244],
       [-0.15830311, -0.01173649, -0.19522409,  0.3019117 , -0.19908227,
        -0.30099127,  0.16631065,  0.20752172],
       [-0.17883444, -0.06100082, -0.17761381,  0.23530556, -0.21205859,
        -0.38406992, -0.05495765,  0.265141  ],
       [-0.1475389 ,  0.08635779, -0.1373001 ,  0.22791412, -0.15904279,
        -0.27025393,  0.11020508,  0.13480994],
       [-0.07494565,  0.10212288, -0.11742567,  0.18221577, -0.14800061,
        -0.2530977 ,  0.01361628,  0.18669003],
       [-0.15449327,  0.12685163, -0.15571205,  0.20998996, -0.19208935,
        -0.21088062, -0.12896633,  0.18482408]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.09078634,  0.09514963, -0.11729563,  0.25939703, -0.23369907,
        -0.26429352, -0.04167034,  0.32905015],
       [-0.0986567 , -0.00975297, -0.15469027,  0.12662013, -0.25055557,
        -0.20525633,  0.04053628,  0.1946794 ],
       [-0.14782928,  0.05129382, -0.20845748,  0.28462377, -0.18427104,
        -0.20951815,  0.04239888,  0.18558154],
       [-0.22786875, -0.11661766, -0.15380396,  0.23800085, -0.2626411 ,
        -0.41995028,  0.06308547,  0.19813544],
       [-0.04876118,  0.10605128, -0.14355536,  0.2286451 , -0.16375336,
        -0.26313847,  0.1083109 ,  0.20781195],
       [-0.2391733 ,  0.05079829, -0.22030401,  0.32530996, -0.23999028,
        -0.39290568, -0.03007406,  0.2107586 ],
       [-0.15123522,  0.077595  , -0.12771888,  0.14199188, -0.21596478,
        -0.14707065, -0.02842296,  0.22297603],
       [-0.12555945,  0.06763932, -0.1811093 ,  0.32151547, -0.21979591,
        -0.22469711, -0.0304049 ,  0.22175841],
       [-0.11349005,  0.03373841, -0.21107417,  0.29448757, -0.18309833,
        -0.19597985,  0.06220772,  0.19578359],
       [-0.1443955 ,  0.01435533, -0.15115742,  0.3096604 , -0.18469839,
        -0.39308012,  0.19299644,  0.2047993 ],
       [-0.15838188,  0.01465883, -0.15294237,  0.15046948, -0.26445752,
        -0.2936895 , -0.22227341,  0.24878319],
       [-0.26595885, -0.02447071, -0.26027456,  0.2991281 , -0.16406006,
        -0.29028088,  0.07853335,  0.12278064],
       [-0.15986592, -0.07015712, -0.13287447,  0.25321698, -0.2815422 ,
        -0.33635044,  0.10583963,  0.24429978],
       [-0.08513243,  0.08469062, -0.13963707,  0.2668992 , -0.21292013,
        -0.2586508 , -0.0095623 ,  0.24107924],
       [-0.09861454, -0.01370967, -0.15712897,  0.2904559 , -0.22928168,
        -0.3327628 ,  0.1155049 ,  0.29450935],
       [-0.06232   ,  0.17825206, -0.1342648 ,  0.23047194, -0.14692459,
        -0.19524306,  0.06761059,  0.14594996],
       [-0.18032247, -0.00392228, -0.13456525,  0.25558254, -0.26122987,
        -0.2890601 ,  0.08846129,  0.12232712],
       [-0.13533892,  0.1331218 , -0.20823753,  0.29100356, -0.1687016 ,
        -0.28545156, -0.00729064,  0.24726902],
       [-0.03447044,  0.03552934, -0.03198636,  0.18525809, -0.26897857,
        -0.29660752,  0.00264185,  0.3050568 ],
       [-0.17251399,  0.1352344 , -0.18328986,  0.29819998, -0.24792282,
        -0.2764593 ,  0.03734342,  0.17829254],
       [-0.16390553, -0.04618433, -0.19229628,  0.22199006, -0.16186605,
        -0.31260264,  0.05163352,  0.14986442],
       [-0.24677385, -0.11190446, -0.19564153,  0.29727602, -0.24470907,
        -0.42609483,  0.07423642,  0.27097028],
       [-0.1698109 ,  0.1839206 , -0.18556848,  0.2311136 , -0.15407366,
        -0.25078857, -0.07492723,  0.18014629],
       [-0.12382277,  0.14803705, -0.22723165,  0.2923137 , -0.16784376,
        -0.19888449, -0.05525948,  0.1854759 ],
       [-0.15858911,  0.17036808, -0.13128257,  0.15909427, -0.21097726,
        -0.14307529, -0.05881587,  0.1967515 ],
       [-0.17819105, -0.02067388, -0.19895604,  0.23581536, -0.21933047,
        -0.25994524,  0.15334272,  0.17925332],
       [-0.16049415,  0.03809178, -0.18363337,  0.26515   , -0.20497884,
        -0.32352567,  0.10839169,  0.22361246],
       [-0.15830311, -0.01173649, -0.19522406,  0.30191168, -0.1990823 ,
        -0.3009913 ,  0.16631062,  0.2075217 ],
       [-0.17883442, -0.06100084, -0.17761381,  0.23530559, -0.21205854,
        -0.38406998, -0.05495766,  0.265141  ],
       [-0.14753889,  0.08635781, -0.13730012,  0.22791421, -0.15904279,
        -0.27025396,  0.11020507,  0.13480993],
       [-0.07494566,  0.10212291, -0.11742567,  0.18221575, -0.1480006 ,
        -0.2530977 ,  0.01361629,  0.18669005],
       [-0.15449329,  0.12685168, -0.15571205,  0.20998995, -0.19208938,
        -0.21088062, -0.12896633,  0.18482411]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/51.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.24455884,  0.06234633,  0.16449796,  0.153536  ,  0.11584033,
        -0.04837079,  0.09082624,  0.14621252]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.24455884,  0.06234635,  0.16449796,  0.15353604,  0.11584034,
        -0.04837079,  0.09082625,  0.14621252]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/52.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 16), dtype=float32, numpy=
array([[-0.08955567, -0.1061049 , -0.11799285,  0.09669141, -0.1314522 ,
        -0.10590748,  0.07316389,  0.06004513,  0.11552188,  0.09092595,
         0.13293158,  0.11802109,  0.04158972,  0.13694565,  0.07694255,
         0.17551146]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 16), dtype=float32, numpy=
array([[-0.08955572, -0.10610493, -0.11799287,  0.09669145, -0.13145226,
        -0.10590748,  0.07316391,  0.06004513,  0.11552189,  0.09092597,
         0.13293158,  0.11802109,  0.04158972,  0.13694565,  0.07694256,
         0.17551146]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/53.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 7), dtype=float32, numpy=
array([[ 0.11480334, -0.12798367,  0.257822  ,  0.17501855, -0.17080548,
        -0.22236654, -0.20993337],
       [ 0.09561773, -0.02819011,  0.26994467,  0.31364068, -0.14562777,
        -0.12358043, -0.17018306],
       [ 0.06221256, -0.09945048,  0.33880106,  0.2742341 , -0.19131333,
        -0.14487483, -0.26126435],
       [ 0.11432711, -0.20468615,  0.2960752 ,  0.19351457, -0.1905046 ,
        -0.21777894, -0.21065634]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 7), dtype=float32, numpy=
array([[ 0.11480337, -0.12798367,  0.257822  ,  0.17501858, -0.17080547,
        -0.22236651, -0.20993333],
       [ 0.09561773, -0.02819013,  0.26994467,  0.3136407 , -0.14562775,
        -0.12358044, -0.17018309],
       [ 0.06221257, -0.09945048,  0.33880106,  0.27423403, -0.1913133 ,
        -0.14487484, -0.2612644 ],
       [ 0.11432711, -0.20468616,  0.29607522,  0.1935146 , -0.19050458,
        -0.21777888, -0.21065634]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/54.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-2.64937859e-02, -2.23034143e-01, -3.57743800e-01,
        -9.53251868e-02,  4.73487638e-02, -1.83732837e-01,
        -1.08222753e-01, -4.23729479e-01],
       [ 8.32373947e-02, -1.13676049e-01, -3.04051071e-01,
        -9.62226316e-02,  4.89139836e-03, -2.10729584e-01,
        -8.61450285e-02, -3.61307830e-01],
       [ 1.05645591e-02, -1.85017288e-01, -3.31148118e-01,
        -1.23217911e-01,  7.69659355e-02, -1.69534937e-01,
        -5.14299199e-02, -2.65750080e-01],
       [-1.43540353e-01, -2.35052645e-01, -3.58502746e-01,
        -5.50552718e-02,  6.91284984e-02, -1.89349279e-01,
        -2.00036764e-01, -2.50300825e-01],
       [-5.62650338e-02, -1.66703269e-01, -3.41013521e-01,
        -1.88200772e-01,  2.79059517e-04, -1.51981160e-01,
        -5.20488322e-02, -3.41679692e-01],
       [-3.20751965e-02, -1.99479520e-01, -3.72785926e-01,
        -1.10875204e-01,  1.09155081e-01, -1.13718919e-01,
        -1.15791507e-01, -3.60626876e-01],
       [-8.69466141e-02, -9.30511877e-02, -3.62101316e-01,
        -1.39125988e-01,  2.42384337e-02, -1.46056160e-01,
        -1.91797197e-01, -4.34679240e-01],
       [-1.15826949e-01, -1.89774454e-01, -4.14279819e-01,
        -1.71304509e-01, -1.07826563e-02, -1.82328373e-01,
        -1.05913207e-01, -4.12245929e-01],
       [-1.06314579e-02, -1.62555709e-01, -3.52362752e-01,
        -1.49689183e-01,  5.94317131e-02, -1.32872745e-01,
        -7.63060972e-02, -4.27785218e-01],
       [ 6.73363209e-02, -9.21899676e-02, -3.87913227e-01,
        -1.51161209e-01, -4.65704575e-02, -1.84835762e-01,
        -4.14429344e-02, -4.23858941e-01],
       [-1.00144982e-01, -1.84409171e-01, -4.16398644e-01,
        -5.75199276e-02,  1.41699538e-02, -2.08906859e-01,
        -1.88169643e-01, -4.30180401e-01],
       [-1.14919372e-01, -1.34240493e-01, -3.38261306e-01,
        -1.00086361e-01, -7.95472320e-03, -1.86920226e-01,
        -1.73172697e-01, -3.77999306e-01],
       [ 3.42453569e-02, -2.00145617e-01, -2.39843413e-01,
        -1.12799048e-01,  1.07790865e-01, -1.30523890e-01,
        -3.14273871e-02, -3.41691971e-01],
       [ 3.12619172e-02, -1.82632163e-01, -3.77345085e-01,
        -2.09660940e-02, -5.50809093e-02, -2.13191330e-01,
        -1.34333119e-01, -4.38407540e-01],
       [-1.10939078e-01, -1.44899786e-01, -3.37755710e-01,
        -1.37726441e-01, -4.64041643e-02, -2.09797323e-01,
        -1.59117416e-01, -4.06952947e-01],
       [-1.71709493e-01, -1.59468099e-01, -4.29399014e-01,
        -1.18569009e-01, -2.05250271e-02, -1.82087421e-01,
        -1.34828031e-01, -4.65547770e-01],
       [-1.59864239e-02, -1.61276102e-01, -3.48131597e-01,
        -6.21399470e-02,  2.98686400e-02, -1.41814932e-01,
        -9.43269283e-02, -4.42082345e-01],
       [-1.91745773e-01, -1.97321251e-01, -4.17948753e-01,
        -1.33167848e-01,  3.62231210e-02, -1.89169183e-01,
        -2.39319608e-01, -4.54554886e-01],
       [-1.33566037e-01, -2.17827171e-01, -3.55084687e-01,
        -1.36291012e-01, -2.00718772e-02, -2.41886452e-01,
        -1.27933413e-01, -3.82632613e-01],
       [ 1.20582739e-02, -2.52099365e-01, -3.53560001e-01,
        -8.23625326e-02, -3.79145192e-03, -2.01197535e-01,
        -2.23164391e-02, -3.90009284e-01],
       [-1.39612362e-01, -9.93318111e-02, -3.28385204e-01,
        -1.06687427e-01,  5.72343543e-02, -4.80461717e-02,
        -7.86516666e-02, -4.33891773e-01],
       [-9.73755494e-02, -1.43389031e-01, -3.09708118e-01,
        -9.45961475e-02,  6.84010610e-02, -1.40406966e-01,
        -1.53765351e-01, -3.70797276e-01],
       [-9.22832638e-02, -1.55306309e-01, -3.01664650e-01,
        -1.11657172e-01,  6.60146624e-02, -1.05774038e-01,
        -1.19851604e-01, -4.33322608e-01],
       [-6.07537068e-02, -1.53947011e-01, -2.72498488e-01,
        -1.30653635e-01,  1.19660459e-01, -1.20499484e-01,
        -9.68863815e-02, -3.23880911e-01],
       [-1.50607124e-01, -2.08379537e-01, -3.42933416e-01,
        -1.39905751e-01,  5.74633740e-02, -1.57894209e-01,
        -1.16149187e-01, -3.17254961e-01],
       [-8.43450502e-02, -1.61003530e-01, -3.33225280e-01,
        -9.42936167e-02,  2.52081845e-02, -2.24783719e-01,
        -1.50092259e-01, -2.82936424e-01],
       [-1.18084989e-01, -1.96842223e-01, -3.10179681e-01,
        -8.87022614e-02,  7.36933053e-02, -1.60336122e-01,
        -1.73636973e-01, -4.69737679e-01],
       [ 1.40416520e-02, -1.04058772e-01, -2.86533326e-01,
        -1.39960691e-01,  6.21042140e-02, -1.53440252e-01,
        -1.08226977e-01, -2.78303474e-01],
       [ 3.35698538e-02, -1.20450422e-01, -3.72457802e-01,
        -1.09133571e-01,  2.50193570e-02, -1.25476658e-01,
        -3.67438868e-02, -3.85213286e-01],
       [-2.79227979e-02, -1.47566140e-01, -2.99511015e-01,
        -5.63460290e-02,  1.54223526e-02, -2.26943716e-01,
        -1.32757127e-01, -4.02818233e-01],
       [ 4.68212646e-03, -1.48959368e-01, -2.92285591e-01,
        -1.00439668e-01,  5.96574396e-02, -1.47216827e-01,
        -1.19763397e-01, -3.59787196e-01],
       [-1.08501203e-01, -1.41870216e-01, -3.59664679e-01,
        -1.17609002e-01, -1.37201520e-02, -1.92542359e-01,
        -1.95964336e-01, -3.51560354e-01]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-2.64937822e-02, -2.23034158e-01, -3.57743859e-01,
        -9.53252092e-02,  4.73487750e-02, -1.83732778e-01,
        -1.08222775e-01, -4.23729479e-01],
       [ 8.32374096e-02, -1.13676071e-01, -3.04051101e-01,
        -9.62226242e-02,  4.89140116e-03, -2.10729614e-01,
        -8.61450434e-02, -3.61307830e-01],
       [ 1.05645563e-02, -1.85017332e-01, -3.31148148e-01,
        -1.23217911e-01,  7.69659430e-02, -1.69534966e-01,
        -5.14299348e-02, -2.65750170e-01],
       [-1.43540382e-01, -2.35052601e-01, -3.58502686e-01,
        -5.50552756e-02,  6.91285133e-02, -1.89349324e-01,
        -2.00036734e-01, -2.50300795e-01],
       [-5.62650636e-02, -1.66703254e-01, -3.41013461e-01,
        -1.88200831e-01,  2.79052649e-04, -1.51981190e-01,
        -5.20488396e-02, -3.41679782e-01],
       [-3.20752077e-02, -1.99479550e-01, -3.72785926e-01,
        -1.10875227e-01,  1.09155081e-01, -1.13718919e-01,
        -1.15791544e-01, -3.60626876e-01],
       [-8.69466439e-02, -9.30512100e-02, -3.62101287e-01,
        -1.39125988e-01,  2.42384318e-02, -1.46056190e-01,
        -1.91797167e-01, -4.34679300e-01],
       [-1.15826957e-01, -1.89774469e-01, -4.14279759e-01,
        -1.71304494e-01, -1.07826442e-02, -1.82328373e-01,
        -1.05913214e-01, -4.12245899e-01],
       [-1.06314560e-02, -1.62555709e-01, -3.52362722e-01,
        -1.49689212e-01,  5.94317168e-02, -1.32872760e-01,
        -7.63061270e-02, -4.27785248e-01],
       [ 6.73363507e-02, -9.21899751e-02, -3.87913167e-01,
        -1.51161224e-01, -4.65704650e-02, -1.84835762e-01,
        -4.14429307e-02, -4.23858821e-01],
       [-1.00145005e-01, -1.84409186e-01, -4.16398615e-01,
        -5.75199239e-02,  1.41699575e-02, -2.08906844e-01,
        -1.88169658e-01, -4.30180401e-01],
       [-1.14919417e-01, -1.34240478e-01, -3.38261336e-01,
        -1.00086376e-01, -7.95472786e-03, -1.86920211e-01,
        -1.73172668e-01, -3.77999306e-01],
       [ 3.42453606e-02, -2.00145647e-01, -2.39843398e-01,
        -1.12799056e-01,  1.07790850e-01, -1.30523890e-01,
        -3.14273834e-02, -3.41691971e-01],
       [ 3.12619247e-02, -1.82632178e-01, -3.77345055e-01,
        -2.09661089e-02, -5.50809391e-02, -2.13191316e-01,
        -1.34333134e-01, -4.38407511e-01],
       [-1.10939085e-01, -1.44899786e-01, -3.37755650e-01,
        -1.37726396e-01, -4.64041755e-02, -2.09797323e-01,
        -1.59117430e-01, -4.06952947e-01],
       [-1.71709493e-01, -1.59468099e-01, -4.29398894e-01,
        -1.18568987e-01, -2.05250159e-02, -1.82087421e-01,
        -1.34828046e-01, -4.65547770e-01],
       [-1.59864165e-02, -1.61276102e-01, -3.48131627e-01,
        -6.21399507e-02,  2.98686493e-02, -1.41814947e-01,
        -9.43269432e-02, -4.42082435e-01],
       [-1.91745803e-01, -1.97321266e-01, -4.17948723e-01,
        -1.33167848e-01,  3.62231284e-02, -1.89169168e-01,
        -2.39319637e-01, -4.54554886e-01],
       [-1.33566067e-01, -2.17827201e-01, -3.55084687e-01,
        -1.36290997e-01, -2.00718772e-02, -2.41886452e-01,
        -1.27933413e-01, -3.82632583e-01],
       [ 1.20582692e-02, -2.52099365e-01, -3.53560060e-01,
        -8.23625550e-02, -3.79145565e-03, -2.01197535e-01,
        -2.23164428e-02, -3.90009254e-01],
       [-1.39612362e-01, -9.93318260e-02, -3.28385174e-01,
        -1.06687419e-01,  5.72343618e-02, -4.80461903e-02,
        -7.86516815e-02, -4.33891714e-01],
       [-9.73755941e-02, -1.43389046e-01, -3.09708208e-01,
        -9.45961326e-02,  6.84010759e-02, -1.40406981e-01,
        -1.53765410e-01, -3.70797306e-01],
       [-9.22832862e-02, -1.55306280e-01, -3.01664680e-01,
        -1.11657187e-01,  6.60146698e-02, -1.05774038e-01,
        -1.19851626e-01, -4.33322638e-01],
       [-6.07537143e-02, -1.53947011e-01, -2.72498488e-01,
        -1.30653635e-01,  1.19660482e-01, -1.20499484e-01,
        -9.68863815e-02, -3.23880941e-01],
       [-1.50607124e-01, -2.08379522e-01, -3.42933446e-01,
        -1.39905751e-01,  5.74633665e-02, -1.57894209e-01,
        -1.16149187e-01, -3.17254990e-01],
       [-8.43450651e-02, -1.61003545e-01, -3.33225220e-01,
        -9.42936242e-02,  2.52081789e-02, -2.24783704e-01,
        -1.50092259e-01, -2.82936484e-01],
       [-1.18085004e-01, -1.96842179e-01, -3.10179710e-01,
        -8.87022540e-02,  7.36932904e-02, -1.60336152e-01,
        -1.73636973e-01, -4.69737709e-01],
       [ 1.40416631e-02, -1.04058765e-01, -2.86533326e-01,
        -1.39960721e-01,  6.21042401e-02, -1.53440297e-01,
        -1.08226992e-01, -2.78303474e-01],
       [ 3.35698538e-02, -1.20450407e-01, -3.72457772e-01,
        -1.09133579e-01,  2.50193644e-02, -1.25476688e-01,
        -3.67439017e-02, -3.85213345e-01],
       [-2.79227979e-02, -1.47566140e-01, -2.99510986e-01,
        -5.63460477e-02,  1.54223535e-02, -2.26943746e-01,
        -1.32757187e-01, -4.02818203e-01],
       [ 4.68212506e-03, -1.48959368e-01, -2.92285562e-01,
        -1.00439698e-01,  5.96574470e-02, -1.47216886e-01,
        -1.19763419e-01, -3.59787196e-01],
       [-1.08501181e-01, -1.41870216e-01, -3.59664708e-01,
        -1.17609024e-01, -1.37201846e-02, -1.92542359e-01,
        -1.95964366e-01, -3.51560384e-01]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/55.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 1, 127), dtype=float32, numpy=
array([[[-0.01652286, -0.0380692 ,  0.00701221, ..., -0.00392963,
         -0.05318625,  0.00068052]],

       [[-0.02398927, -0.04438161,  0.01779244, ...,  0.00266574,
         -0.05797663,  0.00696137]],

       [[-0.01467645, -0.02861995,  0.00945988, ..., -0.02518352,
         -0.01539179,  0.00099005]],

       ...,

       [[-0.02062527, -0.02655249, -0.00262849, ..., -0.00142199,
         -0.02994268,  0.01493966]],

       [[-0.02354197, -0.03259254,  0.00672985, ...,  0.00671129,
         -0.03713943,  0.01787574]],

       [[-0.02598049, -0.05533759, -0.00899094, ...,  0.00711675,
         -0.05269804,  0.03837211]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 127), dtype=float32, numpy=
array([[[-0.02582045, -0.06731165,  0.01129102, ..., -0.00915727,
         -0.09050423,  0.00116737]],

       [[-0.03678884, -0.07917295,  0.02952223, ...,  0.00398324,
         -0.09882714,  0.00856494]],

       [[-0.0211644 , -0.04913552,  0.01606464, ..., -0.04555446,
         -0.02423457,  0.00035496]],

       ...,

       [[-0.03420384, -0.04600803, -0.00428672, ..., -0.00496596,
         -0.05165984,  0.02664163]],

       [[-0.03812883, -0.0575397 ,  0.010913  , ...,  0.0105816 ,
         -0.06435761,  0.02854277]],

       [[-0.04558693, -0.09464715, -0.01686656, ...,  0.00897379,
         -0.09291589,  0.0665534 ]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/56.py
2023-04-19 13:45:05.280864: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at cudnn_rnn_ops.cc:1553 : UNKNOWN: CUDNN_STATUS_BAD_PARAM
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): 'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)'
{'res_cpu': (<tf.Tensor: shape=(1, 0), dtype=float32, numpy=array([], shape=(1, 0), dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'err_gpu': 'Error:Exception encountered when calling layer "lstm" (type LSTM).\n\nCUDNN_STATUS_BAD_PARAM\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): \'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)\' [Op:CudnnRNN]\n\nCall arguments received by layer "lstm" (type LSTM):\n  • inputs=tf.Tensor(shape=(1, 4, 10), dtype=float32)\n  • mask=None\n  • training=None\n  • initial_state=None'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/57.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 32), dtype=float32, numpy=
array([[-0.20309642, -0.0124747 , -0.0302925 ,  0.04461069, -0.18812814,
        -0.2504279 , -0.03144361, -0.04884867, -0.10051046,  0.2760856 ,
         0.22455715, -0.12863232,  0.11759129, -0.05743031, -0.14724632,
         0.04705727,  0.21037506,  0.00491591, -0.11903334, -0.05774368,
         0.03869078, -0.06808126, -0.0932226 , -0.07414762, -0.04911968,
         0.0693957 ,  0.15181707, -0.06436816, -0.06774396,  0.06816885,
        -0.18651947,  0.05908219]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 32), dtype=float32, numpy=
array([[-0.20309643, -0.01247469, -0.03029251,  0.04461071, -0.18812819,
        -0.25042787, -0.03144362, -0.04884868, -0.10051045,  0.27608567,
         0.22455719, -0.12863235,  0.11759131, -0.05743033, -0.14724636,
         0.04705728,  0.21037509,  0.00491592, -0.11903337, -0.05774369,
         0.0386908 , -0.06808127, -0.09322266, -0.0741476 , -0.04911969,
         0.06939571,  0.15181708, -0.06436819, -0.06774396,  0.06816889,
        -0.18651946,  0.0590822 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/58.py
2023-04-19 13:45:11.478122: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at cudnn_rnn_ops.cc:1553 : UNKNOWN: CUDNN_STATUS_BAD_PARAM
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): 'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)'
{'res_cpu': <tf.Tensor: shape=(32, 0), dtype=float32, numpy=array([], shape=(32, 0), dtype=float32)>, 'err_gpu': 'Error:Exception encountered when calling layer "lstm" (type LSTM).\n\nCUDNN_STATUS_BAD_PARAM\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): \'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)\' [Op:CudnnRNN]\n\nCall arguments received by layer "lstm" (type LSTM):\n  • inputs=tf.Tensor(shape=(32, 4, 4), dtype=float32)\n  • mask=None\n  • training=None\n  • initial_state=None'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/59.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[ 0.25198865,  0.0649366 , -0.11435501, -0.2660923 , -0.3561459 ,
        -0.4399877 , -0.10383186,  0.00401117],
       [ 0.23063222, -0.05571174, -0.10081942, -0.14143251, -0.29003364,
        -0.31340477, -0.03497088,  0.02353046],
       [ 0.3089009 , -0.09368268, -0.05901933, -0.1802111 , -0.36485413,
        -0.34450337, -0.08455776,  0.04208516],
       [ 0.21708974, -0.11330729, -0.07646091, -0.04031331, -0.2188613 ,
        -0.17800479, -0.03013232, -0.01188849]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[ 0.2519887 ,  0.06493659, -0.11435501, -0.26609227, -0.35614592,
        -0.43998766, -0.10383187,  0.00401115],
       [ 0.23063219, -0.05571174, -0.10081945, -0.14143251, -0.29003364,
        -0.3134048 , -0.03497088,  0.02353046],
       [ 0.30890092, -0.09368271, -0.05901932, -0.18021111, -0.36485416,
        -0.3445034 , -0.08455776,  0.04208518],
       [ 0.21708973, -0.11330731, -0.07646091, -0.04031333, -0.21886131,
        -0.17800477, -0.03013232, -0.01188849]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/6.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 6), dtype=float32, numpy=
array([[-0.05816249,  0.04020048, -0.15300503,  0.13001916,  0.01830771,
        -0.15325376],
       [-0.12312566,  0.20087345, -0.28921008,  0.18029119, -0.04424968,
        -0.19426328],
       [-0.05360468,  0.21664432, -0.16021228,  0.14098515,  0.05764119,
        -0.21507236],
       [-0.08684849,  0.16454124, -0.19733289,  0.20774528, -0.07846899,
        -0.3449038 ],
       [-0.00129562,  0.06274997, -0.18359049,  0.18514179, -0.01667941,
        -0.25960213],
       [-0.18281227,  0.15441893, -0.2427636 ,  0.20356506, -0.04613035,
        -0.2925829 ],
       [-0.07338515,  0.14538357, -0.1650828 ,  0.08544046, -0.02867904,
        -0.1513247 ],
       [-0.09897118,  0.21706073, -0.29925987,  0.09036653, -0.02415758,
        -0.11153887],
       [-0.01982792,  0.28174067, -0.10257347,  0.05024396,  0.05482527,
        -0.2618137 ],
       [-0.02749121,  0.25811973, -0.21275689,  0.09945294,  0.04322012,
        -0.26381838],
       [ 0.00589875,  0.10884185, -0.17108934,  0.1519038 , -0.19530956,
        -0.2556408 ],
       [ 0.09746573,  0.23630063, -0.01697945,  0.05469418,  0.1339484 ,
        -0.18158092],
       [ 0.01774647,  0.26036274, -0.09838248,  0.06319544,  0.07311655,
        -0.2991398 ],
       [-0.07681985,  0.07757955, -0.3314897 ,  0.10907849,  0.05484959,
        -0.02247366],
       [ 0.02081683,  0.12736079, -0.07567761,  0.17708889, -0.04193709,
        -0.31679097],
       [-0.17483617,  0.22429794, -0.17529196,  0.10427824,  0.02713805,
        -0.24764962],
       [ 0.02032738,  0.04502732, -0.13791616,  0.15985054, -0.02829353,
        -0.04975272],
       [-0.09391955,  0.25279778, -0.21085943,  0.21623528, -0.12321629,
        -0.18425171],
       [-0.08901595,  0.35478866, -0.12122232,  0.12220451, -0.11799522,
        -0.35217515],
       [-0.10206747,  0.10871202, -0.16458234,  0.18806566,  0.03013312,
        -0.07561614],
       [ 0.012122  ,  0.12550826, -0.16936472,  0.15143609,  0.00979936,
        -0.33108497],
       [-0.11930234,  0.03680786, -0.28478706,  0.2440934 , -0.10537182,
        -0.15166853],
       [-0.18174067,  0.26944742, -0.27182335,  0.22293031, -0.09307727,
        -0.30789056],
       [-0.09378026,  0.07462772, -0.3951305 ,  0.2379485 , -0.16216472,
        -0.07675615],
       [ 0.01474493,  0.2686692 , -0.16327022,  0.08108832,  0.06109051,
        -0.2809938 ],
       [-0.07177546,  0.21059467, -0.28001195,  0.17433244, -0.07156295,
        -0.26994732],
       [-0.05604456,  0.28695512, -0.19851886,  0.10113028,  0.0793821 ,
        -0.21713631],
       [ 0.01786889,  0.25242305, -0.21081613,  0.15672697, -0.13975136,
        -0.23631005],
       [-0.05088962,  0.28781837, -0.23458499,  0.17041397, -0.05340149,
        -0.34514064],
       [ 0.02121272,  0.21222773, -0.11185256,  0.13894293,  0.05136088,
        -0.24044591],
       [-0.01351451,  0.22822095, -0.24202685,  0.16549884,  0.02477309,
        -0.26488677],
       [-0.0208188 ,  0.15508597, -0.20661259,  0.12366474, -0.10872841,
        -0.2846753 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 6), dtype=float32, numpy=
array([[-0.05816251,  0.04020048, -0.15300505,  0.13001913,  0.01830772,
        -0.1532538 ],
       [-0.12312568,  0.2008735 , -0.2892101 ,  0.18029119, -0.04424969,
        -0.1942633 ],
       [-0.05360468,  0.2166443 , -0.16021228,  0.14098515,  0.05764121,
        -0.21507236],
       [-0.0868485 ,  0.16454124, -0.19733286,  0.20774525, -0.07846902,
        -0.3449038 ],
       [-0.00129562,  0.06274997, -0.18359049,  0.18514177, -0.01667945,
        -0.25960207],
       [-0.18281227,  0.15441895, -0.24276356,  0.20356503, -0.04613038,
        -0.29258293],
       [-0.07338518,  0.14538357, -0.1650828 ,  0.08544046, -0.02867905,
        -0.1513247 ],
       [-0.0989712 ,  0.21706074, -0.29925984,  0.09036651, -0.02415756,
        -0.1115389 ],
       [-0.01982794,  0.2817407 , -0.10257348,  0.05024397,  0.0548253 ,
        -0.26181367],
       [-0.02749122,  0.2581198 , -0.21275689,  0.09945293,  0.04322013,
        -0.26381844],
       [ 0.00589874,  0.10884186, -0.17108934,  0.15190381, -0.1953096 ,
        -0.2556408 ],
       [ 0.09746575,  0.2363006 , -0.01697944,  0.05469419,  0.13394842,
        -0.18158095],
       [ 0.01774648,  0.2603627 , -0.09838247,  0.06319545,  0.07311658,
        -0.2991398 ],
       [-0.07681985,  0.07757958, -0.33148968,  0.1090785 ,  0.0548496 ,
        -0.02247369],
       [ 0.02081683,  0.1273608 , -0.07567761,  0.1770889 , -0.04193708,
        -0.316791  ],
       [-0.1748362 ,  0.22429796, -0.17529196,  0.10427824,  0.02713804,
        -0.24764965],
       [ 0.02032738,  0.04502734, -0.13791615,  0.15985058, -0.02829353,
        -0.0497527 ],
       [-0.09391958,  0.25279784, -0.21085946,  0.21623524, -0.12321632,
        -0.18425174],
       [-0.08901598,  0.35478866, -0.12122231,  0.12220452, -0.11799521,
        -0.35217515],
       [-0.10206749,  0.10871202, -0.16458237,  0.18806565,  0.03013313,
        -0.07561614],
       [ 0.01212199,  0.12550828, -0.16936474,  0.15143606,  0.00979937,
        -0.331085  ],
       [-0.11930234,  0.03680786, -0.28478706,  0.24409339, -0.10537184,
        -0.15166852],
       [-0.18174066,  0.26944745, -0.2718234 ,  0.2229303 , -0.0930773 ,
        -0.30789047],
       [-0.09378025,  0.07462771, -0.39513052,  0.2379485 , -0.16216469,
        -0.07675617],
       [ 0.01474493,  0.26866916, -0.1632702 ,  0.08108832,  0.06109052,
        -0.28099382],
       [-0.07177546,  0.21059465, -0.28001198,  0.17433244, -0.07156295,
        -0.26994732],
       [-0.05604457,  0.28695515, -0.19851889,  0.10113028,  0.0793821 ,
        -0.21713632],
       [ 0.01786889,  0.25242308, -0.21081613,  0.15672696, -0.13975139,
        -0.23631006],
       [-0.05088962,  0.28781834, -0.23458499,  0.17041399, -0.05340153,
        -0.34514064],
       [ 0.02121272,  0.21222772, -0.11185258,  0.1389429 ,  0.05136088,
        -0.24044596],
       [-0.01351451,  0.22822095, -0.24202685,  0.16549884,  0.0247731 ,
        -0.26488677],
       [-0.02081881,  0.155086  , -0.20661262,  0.12366474, -0.10872845,
        -0.2846753 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/60.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[-0.16383018,  0.24376641,  0.08620669, -0.09131604,  0.00329054,
         0.16972245, -0.0329099 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[-0.16383018,  0.24376647,  0.08620673, -0.09131604,  0.00329053,
         0.16972244, -0.03290989]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/61.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 1), dtype=float32, numpy=
array([[0.3271754 ],
       [0.2584418 ],
       [0.28304264],
       [0.36332762],
       [0.16396606],
       [0.21517767],
       [0.26031017],
       [0.2898152 ],
       [0.38632247],
       [0.26911837],
       [0.41442406],
       [0.2228743 ],
       [0.3155263 ],
       [0.31149277],
       [0.32320115],
       [0.3570697 ],
       [0.25689137],
       [0.33127493],
       [0.30138937],
       [0.33681875],
       [0.29730386],
       [0.3953172 ],
       [0.42188138],
       [0.30771732],
       [0.3318171 ],
       [0.25974196],
       [0.2785812 ],
       [0.22770594],
       [0.35982883],
       [0.2567174 ],
       [0.30786967],
       [0.20560041]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 1), dtype=float32, numpy=
array([[0.32717535],
       [0.25844178],
       [0.28304264],
       [0.3633276 ],
       [0.16396601],
       [0.21517766],
       [0.2603101 ],
       [0.28981516],
       [0.38632244],
       [0.26911834],
       [0.41442397],
       [0.22287427],
       [0.31552625],
       [0.31149277],
       [0.32320118],
       [0.35706967],
       [0.2568914 ],
       [0.33127487],
       [0.30138937],
       [0.33681875],
       [0.29730386],
       [0.39531723],
       [0.42188135],
       [0.30771732],
       [0.33181712],
       [0.2597419 ],
       [0.27858114],
       [0.22770596],
       [0.3598288 ],
       [0.25671738],
       [0.30786967],
       [0.20560043]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/62.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.05865506, -0.03174648, -0.06511927,  0.09347346, -0.12444139,
         0.26323467,  0.1132224 , -0.11661031]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.05865508, -0.03174649, -0.06511928,  0.09347349, -0.12444141,
         0.26323465,  0.11322241, -0.11661033]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/63.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': [<tf.Tensor: shape=(3, 3), dtype=float32, numpy=
array([[-0.05964052, -0.1262148 , -0.0677112 ],
       [-0.11623292, -0.00538352, -0.02239309],
       [-0.05102381, -0.07642643, -0.11481649]], dtype=float32)>, <tf.Tensor: shape=(3, 3), dtype=float32, numpy=
array([[-0.05964052, -0.1262148 , -0.0677112 ],
       [-0.11623292, -0.00538352, -0.02239309],
       [-0.05102381, -0.07642643, -0.11481649]], dtype=float32)>, <tf.Tensor: shape=(3, 3), dtype=float32, numpy=
array([[-0.10393722, -0.3180095 , -0.10899862],
       [-0.21154355, -0.01176213, -0.03808273],
       [-0.08794691, -0.16664205, -0.20869753]], dtype=float32)>], 'res_gpu': [<tf.Tensor: shape=(3, 3), dtype=float32, numpy=
array([[-0.08079692, -0.13789809, -0.05337308],
       [-0.13596705,  0.01327914, -0.0157871 ],
       [-0.07217159, -0.08883985, -0.10856064]], dtype=float32)>, <tf.Tensor: shape=(3, 3), dtype=float32, numpy=
array([[-0.08079692, -0.13789809, -0.05337308],
       [-0.13596705,  0.01327914, -0.0157871 ],
       [-0.07217159, -0.08883985, -0.10856064]], dtype=float32)>, <tf.Tensor: shape=(3, 3), dtype=float32, numpy=
array([[-0.14266232, -0.34787375, -0.08556321],
       [-0.24879615,  0.02881132, -0.02672621],
       [-0.12593484, -0.19393927, -0.19672877]], dtype=float32)>]}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/64.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.24460089,  0.0323447 ,  0.10830656,  0.2722771 , -0.47680533,
        -0.3041502 ,  0.08936778, -0.21093602],
       [-0.12675104, -0.05762169,  0.03823502,  0.1851377 , -0.22947498,
        -0.22554526,  0.10235146, -0.14444779],
       [-0.27242947, -0.01954946, -0.11251156,  0.23012482, -0.27607438,
        -0.30663854,  0.29283482, -0.0949091 ],
       [-0.21340938, -0.11005937, -0.02729214,  0.23016302, -0.34350207,
        -0.40475082,  0.16628635, -0.20078962]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.24460094,  0.03234472,  0.10830657,  0.27227706, -0.47680533,
        -0.3041502 ,  0.08936777, -0.21093604],
       [-0.12675107, -0.05762168,  0.038235  ,  0.1851377 , -0.22947504,
        -0.22554527,  0.10235149, -0.14444779],
       [-0.2724295 , -0.01954947, -0.11251161,  0.23012479, -0.27607438,
        -0.3066386 ,  0.2928348 , -0.0949091 ],
       [-0.21340938, -0.11005935, -0.02729215,  0.230163  , -0.34350213,
        -0.4047508 ,  0.16628632, -0.20078968]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/65.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(3, 2), dtype=float32, numpy=
array([[ 0.04353648, -0.0183628 ],
       [ 0.09395296,  0.13210179],
       [ 0.10068756,  0.10024344]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(3, 2), dtype=float32, numpy=
array([[ 0.04812254, -0.02297579],
       [ 0.10067983,  0.1395028 ],
       [ 0.10755644,  0.10428852]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/67.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(2, 50, 2), dtype=float32, numpy=
array([[[5.08409627e-02, 1.33704215e-01],
        [7.57464990e-02, 1.92077965e-01],
        [7.03326017e-02, 1.95261106e-01],
        [1.35639504e-01, 1.21480517e-01],
        [1.29348263e-01, 7.81873614e-02],
        [9.15314555e-02, 2.12679520e-01],
        [6.02189712e-02, 2.65892982e-01],
        [9.96528640e-02, 2.59288907e-01],
        [8.87152776e-02, 3.00725698e-01],
        [7.93461055e-02, 2.60100871e-01],
        [1.18636645e-01, 3.50443453e-01],
        [6.95335194e-02, 2.67388612e-01],
        [6.45915270e-02, 3.54559392e-01],
        [6.22829199e-02, 1.98811963e-01],
        [8.17274004e-02, 2.69140720e-01],
        [7.92661011e-02, 3.84190321e-01],
        [4.03324068e-02, 3.95871729e-01],
        [2.98121050e-02, 4.65644240e-01],
        [1.11633375e-01, 1.89397469e-01],
        [1.20106786e-01, 1.18006587e-01],
        [3.84620875e-02, 1.60855353e-01],
        [5.13742827e-02, 2.72410303e-01],
        [9.05108526e-02, 1.04182757e-01],
        [6.76082522e-02, 3.21222395e-01],
        [8.54268968e-02, 1.73140615e-02],
        [2.56686937e-02, 1.38981432e-01],
        [1.45277828e-01, 1.66079655e-01],
        [1.53246019e-02, 1.49611726e-01],
        [1.33506700e-01, 1.97561570e-02],
        [4.95682918e-02, 1.42186180e-01],
        [9.25066546e-02, 1.49262831e-01],
        [1.18066989e-01, 1.23232655e-01],
        [1.12105407e-01, 2.49952465e-01],
        [4.52045053e-02, 1.96500093e-01],
        [9.93557870e-02, 2.34073535e-01],
        [8.48213285e-02, 1.55417845e-01],
        [5.03917560e-02, 3.04664612e-01],
        [6.18955828e-02, 2.20308036e-01],
        [1.33545622e-01, 1.67674780e-01],
        [1.75888181e-01, 2.39409029e-01],
        [4.07414399e-02, 2.71483421e-01],
        [3.50164026e-02, 3.08275670e-01],
        [1.23713873e-01, 3.00042659e-01],
        [5.75370789e-02, 2.40939379e-01],
        [7.95390010e-02, 1.67644083e-01],
        [1.15648605e-01, 2.59683728e-01],
        [1.05877250e-01, 3.23017746e-01],
        [8.68142769e-02, 2.41819888e-01],
        [3.72614339e-02, 2.85058886e-01],
        [1.25189619e-02, 3.79738033e-01]],

       [[6.24265261e-02, 1.47261143e-01],
        [1.10150307e-01, 2.69275099e-01],
        [3.94827724e-02, 2.58238345e-01],
        [5.76684363e-02, 2.89968431e-01],
        [1.14506595e-01, 2.75219738e-01],
        [5.50556369e-02, 7.66819566e-02],
        [5.36396019e-02, 1.60029069e-01],
        [5.84534146e-02, 2.87717730e-01],
        [3.58014293e-02, 3.82503837e-01],
        [8.03843513e-02, 2.41840482e-01],
        [5.53892627e-02, 1.83548778e-01],
        [6.91807270e-02, 2.49428704e-01],
        [8.52466673e-02, 2.98195839e-01],
        [7.07320496e-02, 1.84559241e-01],
        [8.09661224e-02, 3.57944608e-01],
        [8.38912427e-02, 3.37267727e-01],
        [1.39962852e-01, 2.48068914e-01],
        [2.70389896e-02, 2.73247451e-01],
        [1.00019455e-01, 7.95185864e-02],
        [5.10834418e-02, 2.11129174e-01],
        [4.54154797e-05, 2.00834110e-01],
        [1.06064133e-01, 2.03161329e-01],
        [5.63809127e-02, 2.93035239e-01],
        [9.31506753e-02, 2.81977713e-01],
        [1.08118005e-01, 3.08868676e-01],
        [7.14436844e-02, 2.11597607e-01],
        [7.24141374e-02, 1.49262995e-01],
        [8.87450054e-02, 2.23663017e-01],
        [8.60732719e-02, 3.25484484e-01],
        [1.41355291e-01, 1.96097359e-01],
        [5.74783012e-02, 2.06998050e-01],
        [5.00568822e-02, 3.50316316e-02],
        [1.21808559e-01, 1.08380288e-01],
        [1.17400952e-01, 7.32972622e-02],
        [1.10279232e-01, 1.72373638e-01],
        [8.86749253e-02, 2.00937942e-01],
        [1.02593035e-01, 1.98195189e-01],
        [1.14050418e-01, 1.78919047e-01],
        [4.71233390e-02, 1.81579977e-01],
        [7.67187998e-02, 1.77751899e-01],
        [3.96026783e-02, 1.78993180e-01],
        [7.13443160e-02, 1.87788919e-01],
        [7.35222846e-02, 2.64654756e-01],
        [1.36659682e-01, 1.61754578e-01],
        [8.95559862e-02, 2.55550474e-01],
        [1.25118151e-01, 1.85302019e-01],
        [4.12659831e-02, 3.95560205e-01],
        [5.89809716e-02, 1.18123554e-01],
        [1.40782729e-01, 2.00033933e-01],
        [5.55381924e-02, 1.24734476e-01]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(2, 50, 2), dtype=float32, numpy=
array([[[6.44618273e-02, 2.94005275e-01],
        [7.60943443e-02, 2.78529286e-01],
        [6.71752542e-02, 2.31369480e-01],
        [1.34769380e-01, 1.37451276e-01],
        [1.28602713e-01, 8.35678801e-02],
        [9.13645551e-02, 2.14386165e-01],
        [6.01726174e-02, 2.66403466e-01],
        [9.96280015e-02, 2.59577870e-01],
        [8.87144580e-02, 3.00906718e-01],
        [7.93436095e-02, 2.60154337e-01],
        [1.18635103e-01, 3.50478321e-01],
        [6.95331246e-02, 2.67406315e-01],
        [6.45911768e-02, 3.54567170e-01],
        [6.22827262e-02, 1.98816344e-01],
        [8.17273036e-02, 2.69143552e-01],
        [7.92661011e-02, 3.84191900e-01],
        [4.03323583e-02, 3.95872384e-01],
        [2.98121087e-02, 4.65644538e-01],
        [1.11633345e-01, 1.89397618e-01],
        [1.20106764e-01, 1.18006758e-01],
        [3.84621136e-02, 1.60855427e-01],
        [5.13743050e-02, 2.72410303e-01],
        [9.05108526e-02, 1.04182743e-01],
        [6.76082373e-02, 3.21222395e-01],
        [8.54268670e-02, 1.73140746e-02],
        [2.56687179e-02, 1.38981432e-01],
        [1.45277813e-01, 1.66079655e-01],
        [1.53245814e-02, 1.49611756e-01],
        [1.33506700e-01, 1.97560992e-02],
        [4.95682955e-02, 1.42186075e-01],
        [9.25066695e-02, 1.49262816e-01],
        [1.18066996e-01, 1.23232670e-01],
        [1.12105422e-01, 2.49952525e-01],
        [4.52045202e-02, 1.96499988e-01],
        [9.93557721e-02, 2.34073400e-01],
        [8.48213583e-02, 1.55417815e-01],
        [5.03917597e-02, 3.04664642e-01],
        [6.18955828e-02, 2.20307931e-01],
        [1.33545667e-01, 1.67674690e-01],
        [1.75888181e-01, 2.39408985e-01],
        [4.07414176e-02, 2.71483421e-01],
        [3.50163691e-02, 3.08275700e-01],
        [1.23713896e-01, 3.00042629e-01],
        [5.75370826e-02, 2.40939379e-01],
        [7.95390010e-02, 1.67644009e-01],
        [1.15648545e-01, 2.59683579e-01],
        [1.05877250e-01, 3.23017657e-01],
        [8.68143067e-02, 2.41819933e-01],
        [3.72614264e-02, 2.85058916e-01],
        [1.25189666e-02, 3.79738212e-01]],

       [[6.11962676e-02, 1.98714927e-01],
        [1.11649677e-01, 2.93353498e-01],
        [3.87521312e-02, 2.68274754e-01],
        [5.76528609e-02, 2.97496140e-01],
        [1.14280999e-01, 2.78419018e-01],
        [5.49873970e-02, 7.91701972e-02],
        [5.36378771e-02, 1.60920754e-01],
        [5.84464259e-02, 2.88115323e-01],
        [3.58326770e-02, 3.82808357e-01],
        [8.03740323e-02, 2.41942644e-01],
        [5.53886741e-02, 1.83607757e-01],
        [6.91791326e-02, 2.49449044e-01],
        [8.52462128e-02, 2.98207343e-01],
        [7.07316771e-02, 1.84565336e-01],
        [8.09660107e-02, 3.57948065e-01],
        [8.38911459e-02, 3.37269604e-01],
        [1.39962763e-01, 2.48070046e-01],
        [2.70389989e-02, 2.73248106e-01],
        [1.00019388e-01, 7.95191228e-02],
        [5.10834344e-02, 2.11129382e-01],
        [4.54208530e-05, 2.00834259e-01],
        [1.06064081e-01, 2.03161418e-01],
        [5.63808866e-02, 2.93035328e-01],
        [9.31506529e-02, 2.81977773e-01],
        [1.08118013e-01, 3.08868736e-01],
        [7.14436695e-02, 2.11597621e-01],
        [7.24141300e-02, 1.49263054e-01],
        [8.87449905e-02, 2.23663092e-01],
        [8.60733092e-02, 3.25484455e-01],
        [1.41355336e-01, 1.96097434e-01],
        [5.74783050e-02, 2.06998169e-01],
        [5.00568561e-02, 3.50316316e-02],
        [1.21808551e-01, 1.08380258e-01],
        [1.17400944e-01, 7.32970759e-02],
        [1.10279232e-01, 1.72373638e-01],
        [8.86749253e-02, 2.00937912e-01],
        [1.02593057e-01, 1.98195174e-01],
        [1.14050440e-01, 1.78918988e-01],
        [4.71233465e-02, 1.81579918e-01],
        [7.67188147e-02, 1.77751884e-01],
        [3.96026559e-02, 1.78993240e-01],
        [7.13442862e-02, 1.87788963e-01],
        [7.35223144e-02, 2.64654785e-01],
        [1.36659667e-01, 1.61754623e-01],
        [8.95560086e-02, 2.55550414e-01],
        [1.25118166e-01, 1.85302019e-01],
        [4.12659682e-02, 3.95560145e-01],
        [5.89809753e-02, 1.18123546e-01],
        [1.40782729e-01, 2.00033858e-01],
        [5.55381924e-02, 1.24734484e-01]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/68.py
WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(2, 32), dtype=float32, numpy=
array([[-0.07405528,  0.05168477,  0.09469346,  0.36340392, -0.2267035 ,
         0.11884952,  0.15138175, -0.00618632, -0.13912947, -0.21041489,
         0.29021478,  0.24475244, -0.11394154, -0.0282904 , -0.10081358,
        -0.09801586,  0.29120734,  0.09406058,  0.23391473, -0.11062989,
         0.01231506, -0.07220795,  0.05128162, -0.3683454 , -0.01847825,
         0.07864077,  0.13347284,  0.07612356, -0.19349742,  0.31988588,
        -0.12070785, -0.25687364],
       [-0.19435203,  0.02256632,  0.00731217,  0.25750205, -0.050907  ,
         0.21022028,  0.2664661 , -0.14155158,  0.00388911, -0.25760895,
         0.22876923,  0.15804045, -0.29780167, -0.08252558, -0.21584634,
        -0.12789313,  0.21842715,  0.17135257,  0.25278983, -0.13755769,
         0.00080497,  0.18047217,  0.04162243, -0.15890597, -0.0968593 ,
         0.05610527,  0.1194117 ,  0.10224778, -0.38263676,  0.09942549,
        -0.23077443, -0.19646798]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(2, 32), dtype=float32, numpy=
array([[-0.06897069,  0.05988689,  0.10880611,  0.38278425, -0.24579868,
         0.08072461,  0.17304681, -0.02518197, -0.15502897, -0.22391976,
         0.35912257,  0.24474621, -0.10980555, -0.02519968, -0.1116109 ,
        -0.11518957,  0.31056523,  0.09395453,  0.2992849 , -0.20031393,
         0.02591977, -0.06866493,  0.05164579, -0.4180238 , -0.04001353,
         0.13441534,  0.1309736 ,  0.08911256, -0.21210365,  0.382311  ,
        -0.14867198, -0.271604  ],
       [-0.19275174,  0.02689322,  0.00700666,  0.26656467, -0.06269068,
         0.18607026,  0.30177075, -0.15934174,  0.01315872, -0.27279517,
         0.27379164,  0.15848449, -0.32024944, -0.08088011, -0.22912125,
        -0.14054579,  0.2362718 ,  0.18669382,  0.319113  , -0.24822442,
         0.02031142,  0.17863555,  0.04124861, -0.19073525, -0.13870671,
         0.07220779,  0.11860941,  0.13892165, -0.42365912,  0.13840061,
        -0.29743445, -0.24318112]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/69.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[-0.21500215,  0.19148386, -0.0051261 ,  0.20806469, -0.18155776,
         0.1585622 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[-0.21500209,  0.19148381, -0.00512611,  0.20806476, -0.18155776,
         0.15856218]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/7.py
WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(2, 3, 32), dtype=float32, numpy=
array([[[-0.18461709,  0.04661493, -0.08688002,  0.09969327,
         -0.06692091,  0.05319209, -0.08144112,  0.20010291,
         -0.18091609,  0.09228141, -0.21357365, -0.02037943,
          0.24900769,  0.0431302 ,  0.04996127, -0.05944329,
         -0.17720962, -0.17360699,  0.2731257 , -0.1664483 ,
          0.05376032,  0.0858018 , -0.03770979,  0.20305279,
          0.05712344,  0.08327764,  0.0805179 , -0.2141124 ,
         -0.11461923, -0.09133929, -0.12654443, -0.06486277],
        [-0.21092154,  0.0308205 , -0.10743423,  0.1175403 ,
         -0.09096804, -0.0504937 , -0.06312534,  0.15246424,
         -0.20227271,  0.13897614, -0.18263249,  0.00108423,
          0.16999896,  0.10735928, -0.08679885, -0.15050353,
         -0.21024074, -0.35396478,  0.2797182 , -0.29703724,
         -0.04250065,  0.13971488, -0.0978313 ,  0.3147367 ,
          0.1012075 , -0.07409615,  0.14950559, -0.24383263,
         -0.30270576, -0.07791805, -0.21874228, -0.17482558],
        [-0.10907225,  0.08111006, -0.12742291,  0.22627036,
         -0.06002867, -0.03978436, -0.16123107,  0.1725539 ,
         -0.1352901 ,  0.15736496, -0.01129019,  0.0175    ,
          0.30045435,  0.07326724,  0.1199939 , -0.25588188,
         -0.16426556, -0.35103485,  0.322495  , -0.31780168,
          0.11837348,  0.01011617, -0.01672825,  0.32405066,
          0.17221881, -0.06881434,  0.12286536, -0.29106113,
         -0.2926458 , -0.06204928, -0.26769748,  0.0020517 ]],

       [[-0.03494409,  0.09605712, -0.17705189,  0.16422574,
         -0.06270906, -0.06811126, -0.05023516,  0.09057552,
         -0.13837759,  0.08870785, -0.08461732, -0.01278189,
         -0.08906844, -0.04129864,  0.12490499, -0.17392614,
         -0.1164497 , -0.24903753,  0.21053678, -0.16058837,
          0.03971089,  0.08894294, -0.017187  ,  0.25390217,
          0.1339461 ,  0.00869885,  0.08052401, -0.15957657,
         -0.17096937, -0.05076834, -0.1734059 ,  0.1017846 ],
        [ 0.04704477,  0.13203314, -0.1573128 ,  0.19803269,
         -0.09240203, -0.08562052, -0.07730197,  0.10889889,
         -0.20958571,  0.02322895, -0.15996373,  0.05314282,
          0.0039681 , -0.00322485,  0.07185817, -0.20114096,
         -0.20127648, -0.33112943,  0.2063527 , -0.27712822,
          0.06199458,  0.17222123, -0.01546112,  0.3120498 ,
          0.05042317,  0.00824653,  0.08082402, -0.29791123,
         -0.17074105, -0.06465735, -0.3112812 ,  0.11805918],
        [-0.15768154,  0.1233257 , -0.26678428,  0.19221784,
         -0.12975411, -0.10427235, -0.13227835,  0.09064694,
         -0.23351744,  0.21522492, -0.1552729 ,  0.0164239 ,
          0.15194725,  0.04871324,  0.09065579, -0.24031599,
         -0.24948284, -0.48064953,  0.33603352, -0.3411158 ,
          0.03475453,  0.16663831, -0.0032651 ,  0.3404484 ,
          0.11983919, -0.08533536,  0.06264649, -0.34003985,
         -0.2603176 , -0.05877868, -0.32147315,  0.21260023]]],
      dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(2, 3, 32), dtype=float32, numpy=
array([[[-2.16775686e-01,  5.20774722e-02, -1.41915858e-01,
          1.70415580e-01, -1.05548121e-01,  1.84892938e-02,
         -1.46345854e-01,  2.44727150e-01, -2.13947043e-01,
          1.68095171e-01, -1.88005134e-01, -1.76516734e-02,
          3.66263479e-01,  7.54176974e-02,  1.54588237e-01,
         -1.93758637e-01, -2.52255887e-01, -4.56070274e-01,
          4.33968961e-01, -3.12386900e-01,  1.76246211e-01,
          1.30034789e-01, -3.48609537e-02,  3.31517458e-01,
          1.27480894e-01,  6.55681547e-03,  1.52355999e-01,
         -3.73212427e-01, -3.44760090e-01, -1.05951935e-01,
         -2.70551622e-01, -5.91162927e-02],
        [-2.19144285e-01,  9.57380421e-03, -1.35563627e-01,
          1.31299958e-01, -1.20564759e-01, -7.71351978e-02,
         -9.74890590e-02,  1.60265148e-01, -2.06194162e-01,
          1.68602809e-01, -1.53852701e-01,  2.89364508e-03,
          2.62055159e-01,  1.19113557e-01,  1.45728351e-04,
         -1.96286827e-01, -2.47156441e-01, -4.99241024e-01,
          3.46621186e-01, -3.84926260e-01,  1.41560016e-02,
          1.80641323e-01, -7.91628510e-02,  3.60088110e-01,
          1.43013373e-01, -1.23429336e-01,  1.78386286e-01,
         -3.09801221e-01, -4.63031232e-01, -8.19950700e-02,
         -3.01192790e-01, -1.77671239e-01],
        [-1.09035760e-01,  4.98237573e-02, -1.42006427e-01,
          2.29626313e-01, -7.47983381e-02, -5.91469444e-02,
         -1.67696893e-01,  1.72144175e-01, -1.33892730e-01,
          1.74634278e-01,  1.96639984e-03,  1.89720038e-02,
          3.36518675e-01,  7.78188780e-02,  1.70089379e-01,
         -3.06128204e-01, -1.83955267e-01, -4.26707923e-01,
          3.60612422e-01, -3.56121212e-01,  1.70656055e-01,
          4.06170264e-02, -6.58800546e-03,  3.42743486e-01,
          2.00661212e-01, -1.09643348e-01,  1.28860354e-01,
         -3.44843656e-01, -3.75461549e-01, -6.53769076e-02,
         -3.31806928e-01, -4.54262039e-03]],

       [[-9.41840038e-02,  1.38159409e-01, -3.41056228e-01,
          2.25952014e-01, -1.36734769e-01, -1.74790725e-01,
         -1.22500695e-01,  8.25176537e-02, -2.15764031e-01,
          1.70791715e-01, -1.12334087e-01, -2.11819145e-03,
         -1.75460577e-02, -1.94898341e-02,  1.89958170e-01,
         -2.90753335e-01, -2.23634392e-01, -5.51693678e-01,
          3.62589628e-01, -3.16162616e-01,  8.67250562e-02,
          2.38506913e-01, -1.34204244e-02,  3.89409184e-01,
          1.89920053e-01, -1.04002662e-01,  1.07670046e-01,
         -3.27855319e-01, -3.65744591e-01, -5.03151380e-02,
         -3.48741204e-01,  1.85473174e-01],
        [ 2.30381619e-02,  1.35568157e-01, -2.22869441e-01,
          2.04210401e-01, -1.51920155e-01, -1.39715999e-01,
         -1.05571851e-01,  9.00806785e-02, -2.70127952e-01,
          6.04125895e-02, -1.58229202e-01,  6.46524206e-02,
          4.09501754e-02,  8.36622436e-03,  1.00013942e-01,
         -2.61722237e-01, -2.47069255e-01, -4.77951944e-01,
          2.45146900e-01, -3.55898589e-01,  1.00541331e-01,
          2.63220072e-01, -9.05462075e-03,  3.66977423e-01,
          7.77218416e-02, -9.89228114e-02,  8.49000961e-02,
         -4.03126746e-01, -3.45433146e-01, -5.24766706e-02,
         -4.10704076e-01,  1.46451712e-01],
        [-1.65775746e-01,  1.11362360e-01, -2.99178869e-01,
          1.97002381e-01, -1.63711905e-01, -1.28936499e-01,
         -1.35753676e-01,  7.13197589e-02, -2.52278417e-01,
          2.36695081e-01, -1.52051702e-01,  2.67651733e-02,
          1.75127417e-01,  5.45839481e-02,  1.06062964e-01,
         -2.80620277e-01, -2.72412419e-01, -5.67528903e-01,
          3.73143286e-01, -3.89364898e-01,  6.76269531e-02,
          2.05901250e-01,  6.29534619e-03,  3.60351533e-01,
          1.46382540e-01, -1.67137444e-01,  5.63560650e-02,
         -4.00713801e-01, -3.40128005e-01, -5.13299406e-02,
         -3.81252259e-01,  2.21748456e-01]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/70.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[ 0.08367035, -0.00440225,  0.0580322 , -0.03426298, -0.40498948,
        -0.3624056 ,  0.24142978,  0.44364092],
       [ 0.05469359, -0.05814473,  0.09152656,  0.00143126, -0.515528  ,
        -0.4705487 ,  0.17577441,  0.4591097 ],
       [ 0.07693064, -0.19408411,  0.08406305, -0.04441987, -0.49958926,
        -0.3672375 ,  0.13132626,  0.4951738 ],
       [ 0.07027637, -0.18337859, -0.06568092, -0.13281305, -0.45138454,
        -0.37800372,  0.2816819 ,  0.3876744 ],
       [ 0.10090716, -0.18753868,  0.01960625, -0.03516422, -0.48590034,
        -0.48963636,  0.30024812,  0.40964118],
       [ 0.04322791, -0.07619777,  0.05062979, -0.18269785, -0.46925598,
        -0.39360514,  0.13189946,  0.3641029 ],
       [ 0.0759213 ,  0.03131801,  0.14694211, -0.04665645, -0.5035104 ,
        -0.42022273,  0.19384107,  0.3870444 ],
       [ 0.09556158, -0.03887006, -0.04285269, -0.04936313, -0.439527  ,
        -0.48676875,  0.19594647,  0.47936282],
       [ 0.0237672 , -0.00722313,  0.11756079,  0.00419546, -0.4403485 ,
        -0.39036816,  0.32896304,  0.40318617],
       [ 0.08415119,  0.05240561, -0.02800181, -0.05188981, -0.4943402 ,
        -0.48376957,  0.29987392,  0.46871796],
       [ 0.05814112, -0.06562503, -0.03793247, -0.05292574, -0.5043393 ,
        -0.45817763,  0.24102059,  0.5165639 ],
       [ 0.02863898,  0.02720357,  0.11556145, -0.03339086, -0.3613252 ,
        -0.335817  ,  0.20092642,  0.3796568 ],
       [ 0.03679619, -0.13099742,  0.00667183, -0.08725958, -0.4672708 ,
        -0.5154255 ,  0.25430012,  0.48391107],
       [ 0.09422651,  0.08615461, -0.04681802, -0.11166015, -0.43985072,
        -0.38936123,  0.21424305,  0.42563164],
       [ 0.08130007, -0.11297981,  0.03871615, -0.10580514, -0.41559684,
        -0.48986706,  0.17340177,  0.47438535],
       [ 0.02810446, -0.1246953 ,  0.03361828, -0.08863664, -0.43844655,
        -0.38722843,  0.16434273,  0.39720514],
       [ 0.11945851, -0.18099466, -0.11838445, -0.19276527, -0.5186801 ,
        -0.3993778 ,  0.29355326,  0.39158446],
       [ 0.06714442, -0.03935109,  0.04382057, -0.04553073, -0.44587627,
        -0.49021024,  0.30846745,  0.47904757],
       [ 0.08584175, -0.14595316,  0.02538898, -0.08822177, -0.50981945,
        -0.41901726,  0.19984967,  0.40999144],
       [ 0.00979055, -0.03013545,  0.1644958 ,  0.04444743, -0.3490422 ,
        -0.43747836,  0.2733282 ,  0.47528335],
       [ 0.09735423,  0.06310724,  0.05580745, -0.00518122, -0.454348  ,
        -0.3942503 ,  0.21977763,  0.40982178],
       [ 0.03860269, -0.11499766,  0.00921755, -0.00895468, -0.42007396,
        -0.4598256 ,  0.21177232,  0.5207019 ],
       [ 0.10739905, -0.00471789,  0.00845996, -0.06861486, -0.30833057,
        -0.36719072,  0.19940811,  0.48460317],
       [ 0.04946445, -0.10433946,  0.08178542, -0.11193924, -0.46282914,
        -0.45621437,  0.10650467,  0.38518673],
       [ 0.05154827, -0.16337578,  0.07776657, -0.20766154, -0.43403664,
        -0.40523395,  0.14988369,  0.3445986 ],
       [ 0.07698765, -0.18722881,  0.04543208, -0.08147724, -0.47486475,
        -0.4640944 ,  0.23477636,  0.4063699 ],
       [ 0.08488327,  0.13352703,  0.05359088, -0.01209414, -0.36755008,
        -0.45641276,  0.24162549,  0.42258087],
       [ 0.04307207,  0.00194793,  0.1123359 , -0.07579161, -0.46641776,
        -0.31673485,  0.26974702,  0.43108866],
       [ 0.0883049 , -0.39676785,  0.02484209, -0.1468855 , -0.4419137 ,
        -0.4714706 ,  0.12850262,  0.4473754 ],
       [ 0.04088692, -0.06375497,  0.03257187, -0.17072202, -0.38012135,
        -0.44685182,  0.18489148,  0.39978352],
       [ 0.07390694, -0.18961138,  0.08142815, -0.0055608 , -0.34857696,
        -0.392855  ,  0.17439485,  0.38864473],
       [ 0.0963226 ,  0.01833583,  0.06134213, -0.07637611, -0.43551746,
        -0.3372096 ,  0.25440314,  0.36755392]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[ 0.08367035, -0.00440224,  0.05803222, -0.03426299, -0.40498948,
        -0.36240557,  0.24142973,  0.44364086],
       [ 0.05469359, -0.05814476,  0.09152659,  0.00143128, -0.515528  ,
        -0.4705487 ,  0.17577443,  0.4591097 ],
       [ 0.07693066, -0.19408414,  0.08406305, -0.04441989, -0.49958926,
        -0.3672375 ,  0.13132627,  0.4951738 ],
       [ 0.07027639, -0.18337856, -0.06568092, -0.13281304, -0.45138448,
        -0.3780037 ,  0.28168187,  0.38767442],
       [ 0.10090716, -0.18753868,  0.01960625, -0.03516424, -0.4859004 ,
        -0.48963633,  0.30024812,  0.40964112],
       [ 0.04322791, -0.07619777,  0.05062981, -0.18269782, -0.469256  ,
        -0.39360505,  0.13189946,  0.3641029 ],
       [ 0.07592129,  0.03131803,  0.14694215, -0.04665644, -0.5035104 ,
        -0.42022276,  0.19384104,  0.3870444 ],
       [ 0.09556159, -0.03887004, -0.0428527 , -0.04936315, -0.439527  ,
        -0.48676875,  0.19594647,  0.47936276],
       [ 0.0237672 , -0.00722316,  0.11756081,  0.00419546, -0.44034857,
        -0.39036813,  0.32896304,  0.40318614],
       [ 0.08415119,  0.05240563, -0.0280018 , -0.05188982, -0.49434018,
        -0.4837695 ,  0.29987395,  0.46871796],
       [ 0.05814112, -0.06562503, -0.03793248, -0.05292575, -0.5043393 ,
        -0.45817778,  0.24102062,  0.51656383],
       [ 0.02863899,  0.02720355,  0.11556146, -0.03339086, -0.36132523,
        -0.33581698,  0.20092644,  0.37965682],
       [ 0.03679619, -0.13099745,  0.00667184, -0.08725958, -0.46727076,
        -0.5154255 ,  0.25430015,  0.48391113],
       [ 0.09422652,  0.08615464, -0.04681802, -0.11166017, -0.43985072,
        -0.38936123,  0.21424305,  0.42563167],
       [ 0.08130007, -0.11297983,  0.03871617, -0.10580515, -0.41559684,
        -0.4898671 ,  0.17340179,  0.47438535],
       [ 0.02810446, -0.12469532,  0.03361828, -0.08863666, -0.43844652,
        -0.38722843,  0.16434275,  0.39720508],
       [ 0.1194585 , -0.18099473, -0.11838446, -0.1927653 , -0.5186801 ,
        -0.3993778 ,  0.29355323,  0.39158452],
       [ 0.06714443, -0.03935112,  0.04382059, -0.04553075, -0.4458762 ,
        -0.49021024,  0.30846742,  0.4790476 ],
       [ 0.08584178, -0.14595322,  0.02538898, -0.08822176, -0.5098193 ,
        -0.4190173 ,  0.19984965,  0.40999144],
       [ 0.00979055, -0.03013546,  0.16449578,  0.04444746, -0.34904227,
        -0.43747836,  0.27332819,  0.47528332],
       [ 0.09735426,  0.06310724,  0.0558075 , -0.00518122, -0.454348  ,
        -0.3942503 ,  0.21977764,  0.4098218 ],
       [ 0.0386027 , -0.11499768,  0.00921755, -0.00895468, -0.42007396,
        -0.45982563,  0.21177231,  0.5207018 ],
       [ 0.10739907, -0.00471789,  0.00845994, -0.06861486, -0.30833048,
        -0.36719063,  0.19940811,  0.4846031 ],
       [ 0.04946446, -0.10433947,  0.08178546, -0.11193927, -0.46282908,
        -0.45621434,  0.10650469,  0.38518673],
       [ 0.05154828, -0.16337581,  0.07776663, -0.20766154, -0.43403664,
        -0.40523398,  0.14988364,  0.34459856],
       [ 0.07698767, -0.18722881,  0.0454321 , -0.08147725, -0.47486472,
        -0.4640943 ,  0.23477642,  0.40636986],
       [ 0.08488327,  0.13352704,  0.05359087, -0.01209414, -0.3675501 ,
        -0.4564127 ,  0.24162549,  0.42258093],
       [ 0.04307207,  0.00194795,  0.11233592, -0.0757916 , -0.46641776,
        -0.31673488,  0.26974696,  0.43108866],
       [ 0.08830491, -0.39676797,  0.02484209, -0.14688554, -0.4419137 ,
        -0.4714706 ,  0.1285026 ,  0.44737536],
       [ 0.04088693, -0.06375497,  0.03257188, -0.17072202, -0.38012132,
        -0.44685182,  0.18489149,  0.39978355],
       [ 0.07390692, -0.18961132,  0.08142815, -0.00556079, -0.348577  ,
        -0.39285496,  0.17439488,  0.3886447 ],
       [ 0.09632263,  0.01833582,  0.06134215, -0.0763761 , -0.43551746,
        -0.33720964,  0.25440314,  0.36755395]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/71.py
2023-04-19 13:45:54.729068: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at cudnn_rnn_ops.cc:1553 : UNKNOWN: CUDNN_STATUS_BAD_PARAM
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): 'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)'
{'res_cpu': <tf.Tensor: shape=(1, 0), dtype=float32, numpy=array([], shape=(1, 0), dtype=float32)>, 'err_gpu': 'Error:Exception encountered when calling layer "lstm" (type LSTM).\n\nCUDNN_STATUS_BAD_PARAM\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): \'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)\' [Op:CudnnRNN]\n\nCall arguments received by layer "lstm" (type LSTM):\n  • inputs=tf.Tensor(shape=(1, 120, 7), dtype=float32)\n  • mask=None\n  • training=None\n  • initial_state=None'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/72.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.47144634,  0.24720748,  0.20614754,  0.06022359,  0.05362918,
        -0.07771481, -0.23375879, -0.08664659],
       [-0.39601433,  0.1199894 ,  0.16445342,  0.05167542,  0.1722498 ,
        -0.06071587, -0.35573867, -0.19239733],
       [-0.48064464,  0.17443627,  0.18813218,  0.0851904 ,  0.11422732,
        -0.08538862, -0.352289  , -0.06693867],
       [-0.4249059 ,  0.13919921,  0.16129895,  0.09843926,  0.14814629,
        -0.07069087, -0.393007  , -0.11086808]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.47144625,  0.24720746,  0.20614754,  0.06022361,  0.05362919,
        -0.07771485, -0.23375878, -0.08664664],
       [-0.39601424,  0.1199894 ,  0.16445342,  0.05167543,  0.17224982,
        -0.0607159 , -0.3557387 , -0.19239734],
       [-0.4806446 ,  0.1744363 ,  0.1881322 ,  0.08519042,  0.11422729,
        -0.08538864, -0.35228896, -0.06693868],
       [-0.4249059 ,  0.13919918,  0.16129893,  0.09843927,  0.1481463 ,
        -0.07069089, -0.39300704, -0.11086813]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/73.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 1, 128), dtype=float32, numpy=
array([[[-0.02126756,  0.02683852, -0.04038392, ..., -0.01128237,
          0.01028475, -0.00976989]],

       [[-0.01293043,  0.01645702, -0.0283677 , ..., -0.0067596 ,
          0.00689799, -0.00984089]],

       [[-0.01137171,  0.01241   , -0.03060035, ..., -0.00541425,
          0.0096532 , -0.01453507]],

       ...,

       [[-0.01540692,  0.01842172, -0.02932135, ..., -0.00997973,
          0.007873  , -0.00199767]],

       [[-0.01562436,  0.02112671, -0.0415711 , ..., -0.00170587,
          0.00632727,  0.01326999]],

       [[-0.01534953,  0.01829899, -0.03407375, ..., -0.01133013,
          0.02348448, -0.0319325 ]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 128), dtype=float32, numpy=
array([[[-0.04144512,  0.04494628, -0.07064618, ..., -0.01598345,
          0.01683649, -0.01055459]],

       [[-0.02551427,  0.02769385, -0.05053718, ..., -0.00942941,
          0.01065824, -0.01319563]],

       [[-0.02280829,  0.02105189, -0.05454202, ..., -0.00726661,
          0.01542216, -0.02299317]],

       ...,

       [[-0.02914458,  0.03120199, -0.05097524, ..., -0.01450096,
          0.01370418,  0.0015272 ]],

       [[-0.02970088,  0.03621048, -0.06920838, ..., -0.00106856,
          0.01280213,  0.02677607]],

       [[-0.02925919,  0.03192502, -0.06041603, ..., -0.01589409,
          0.04066499, -0.05380034]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/74.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[-0.07082466, -0.22873813]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[-0.07082466, -0.22873814]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/75.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[-0.24594608,  0.2590803 , -0.0034121 , -0.17911854, -0.16801305,
        -0.12785085, -0.19411275, -0.12467183, -0.14302072]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[-0.2459461 ,  0.25908035, -0.00341209, -0.1791185 , -0.16801307,
        -0.12785083, -0.19411273, -0.12467186, -0.14302075]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/76.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[-0.00588542, -0.13689753]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[-0.00588542, -0.13689756]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/77.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.2537783 ,  0.02676868, -0.13644975,  0.10671512,  0.08940203,
         0.07333649,  0.04304375,  0.05400828]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.25377837,  0.02676866, -0.13644975,  0.10671514,  0.08940205,
         0.07333649,  0.04304376,  0.05400829]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/78.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': [<tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[ 0.2771099 , -0.10586068,  0.20198807]], dtype=float32)>, <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[ 0.2771099 , -0.10586068,  0.20198807]], dtype=float32)>, <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[ 0.7170527 , -0.22340026,  0.3816885 ]], dtype=float32)>], 'res_gpu': [<tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[ 0.3388368 , -0.10628518,  0.27371645]], dtype=float32)>, <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[ 0.3388368 , -0.10628518,  0.27371645]], dtype=float32)>, <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[ 0.9778961 , -0.21839574,  0.55090785]], dtype=float32)>]}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/79.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 1, 128), dtype=float32, numpy=
array([[[ 0.01646023, -0.01993273, -0.01934157, ..., -0.00690095,
          0.00093037, -0.02773798]],

       [[-0.02958854, -0.02001983, -0.01377355, ..., -0.01841317,
         -0.00395706, -0.01907931]],

       [[-0.01404018, -0.01887718, -0.01589298, ..., -0.01165413,
          0.00273089, -0.02641086]],

       ...,

       [[-0.02246354, -0.02066747, -0.00302681, ..., -0.01860793,
          0.00312102, -0.02143579]],

       [[ 0.0135963 , -0.02730276, -0.02428857, ..., -0.01509619,
         -0.0027459 , -0.03837733]],

       [[-0.00367842, -0.01780268, -0.00477239, ..., -0.01178011,
          0.00489258, -0.021882  ]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 128), dtype=float32, numpy=
array([[[ 0.0332605 , -0.03592225, -0.03962976, ..., -0.0139878 ,
         -0.00024774, -0.0497901 ]],

       [[-0.04780857, -0.03762622, -0.02836521, ..., -0.03599887,
         -0.00705378, -0.03408458]],

       [[-0.02323648, -0.03410365, -0.02999408, ..., -0.02226374,
          0.00417964, -0.04804001]],

       ...,

       [[-0.03741225, -0.03883825, -0.00881639, ..., -0.03419585,
          0.00528522, -0.03811601]],

       [[ 0.02898387, -0.04932629, -0.05010905, ..., -0.02862802,
         -0.006801  , -0.06848932]],

       [[-0.00509686, -0.03279255, -0.01154036, ..., -0.02133655,
          0.0077748 , -0.03905244]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/8.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.01751689, -0.08927642, -0.01966494,  0.10172707,  0.08084023,
         0.3169278 , -0.19132735,  0.06290984],
       [-0.05030812, -0.01726037,  0.08734535,  0.04441062,  0.0790787 ,
         0.25632116, -0.17547296, -0.01911074],
       [ 0.02121414, -0.10233603, -0.05060577,  0.04332673,  0.14487852,
         0.3024709 , -0.137274  , -0.01143399]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.01751691, -0.08927643, -0.01966494,  0.10172708,  0.08084024,
         0.3169278 , -0.19132735,  0.06290986],
       [-0.05030814, -0.01726037,  0.08734535,  0.04441062,  0.07907871,
         0.2563212 , -0.17547299, -0.01911075],
       [ 0.02121415, -0.10233606, -0.05060579,  0.04332675,  0.14487855,
         0.3024709 , -0.13727401, -0.01143401]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/80.py
2023-04-19 13:46:25.232962: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at cudnn_rnn_ops.cc:1553 : UNKNOWN: CUDNN_STATUS_BAD_PARAM
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): 'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)'
{'res_cpu': (<tf.Tensor: shape=(3, 0), dtype=float32, numpy=array([], shape=(3, 0), dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'err_gpu': 'Error:Exception encountered when calling layer "lstm" (type LSTM).\n\nCUDNN_STATUS_BAD_PARAM\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): \'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)\' [Op:CudnnRNN]\n\nCall arguments received by layer "lstm" (type LSTM):\n  • inputs=tf.Tensor(shape=(3, 4, 10), dtype=float32)\n  • mask=None\n  • training=None\n  • initial_state=None'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/81.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 7), dtype=float32, numpy=
array([[ 0.11312041,  0.41515416, -0.04324772,  0.09180951, -0.16788904,
        -0.23803546,  0.12821323],
       [ 0.1254461 ,  0.41903153,  0.03261517,  0.1547117 , -0.21444091,
        -0.20189664,  0.21860263],
       [ 0.18884738,  0.443083  , -0.02468103,  0.1009447 , -0.19214454,
        -0.151851  ,  0.10255322],
       [-0.13027814,  0.4103915 , -0.01416213, -0.01626092, -0.26038805,
        -0.2418592 ,  0.07320307]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 7), dtype=float32, numpy=
array([[ 0.1131204 ,  0.41515416, -0.04324773,  0.09180951, -0.16788907,
        -0.23803543,  0.12821323],
       [ 0.12544611,  0.4190315 ,  0.03261517,  0.1547117 , -0.21444096,
        -0.20189664,  0.21860266],
       [ 0.18884735,  0.443083  , -0.02468103,  0.1009447 , -0.19214456,
        -0.151851  ,  0.1025532 ],
       [-0.13027814,  0.41039154, -0.01416213, -0.01626092, -0.2603881 ,
        -0.24185917,  0.07320306]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/82.py
WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': [<tf.Tensor: shape=(32, 32), dtype=float32, numpy=
array([[ 0.00977636, -0.14604577,  0.13801898, ..., -0.14650054,
         0.17246751, -0.03246989],
       [ 0.02788094, -0.21830004,  0.2446961 , ..., -0.11801881,
         0.05914788, -0.0987916 ],
       [ 0.05478621, -0.08450206,  0.3444794 , ..., -0.08911783,
         0.11717045, -0.11364086],
       ...,
       [ 0.12552498, -0.19825275,  0.25817645, ..., -0.15911464,
         0.0366246 ,  0.05790352],
       [-0.00940968, -0.13235854,  0.20680875, ..., -0.08438776,
         0.09049425, -0.04931372],
       [ 0.09331985, -0.198564  ,  0.2528259 , ..., -0.11794165,
         0.08497135, -0.12769027]], dtype=float32)>, <tf.Tensor: shape=(32, 32), dtype=float32, numpy=
array([[ 0.00977636, -0.14604577,  0.13801898, ..., -0.14650054,
         0.17246751, -0.03246989],
       [ 0.02788094, -0.21830004,  0.2446961 , ..., -0.11801881,
         0.05914788, -0.0987916 ],
       [ 0.05478621, -0.08450206,  0.3444794 , ..., -0.08911783,
         0.11717045, -0.11364086],
       ...,
       [ 0.12552498, -0.19825275,  0.25817645, ..., -0.15911464,
         0.0366246 ,  0.05790352],
       [-0.00940968, -0.13235854,  0.20680875, ..., -0.08438776,
         0.09049425, -0.04931372],
       [ 0.09331985, -0.198564  ,  0.2528259 , ..., -0.11794165,
         0.08497135, -0.12769027]], dtype=float32)>, <tf.Tensor: shape=(32, 32), dtype=float32, numpy=
array([[ 0.01948347, -0.8062966 ,  0.36251003, ..., -0.21684828,
         0.514691  , -0.07990474],
       [ 0.08406455, -0.9087576 ,  0.67772335, ..., -0.21216339,
         0.16985169, -0.20025976],
       [ 0.1707086 , -0.19509591,  0.59970987, ..., -0.1514911 ,
         0.42121625, -0.22986165],
       ...,
       [ 0.35448664, -0.84249306,  0.6269598 , ..., -0.28518605,
         0.11778219,  0.0859379 ],
       [-0.02176941, -0.6688034 ,  0.5935963 , ..., -0.13152477,
         0.4756349 , -0.06249254],
       [ 0.2828482 , -0.8879954 ,  0.53939545, ..., -0.20431171,
         0.34465653, -0.19805455]], dtype=float32)>], 'res_gpu': [<tf.Tensor: shape=(32, 32), dtype=float32, numpy=
array([[ 0.00973755, -0.14603837,  0.13801864, ..., -0.14650948,
         0.17243978, -0.03248473],
       [ 0.02790481, -0.21827428,  0.24467148, ..., -0.11808439,
         0.05913644, -0.09885184],
       [ 0.05470783, -0.08386039,  0.3444949 , ..., -0.08907019,
         0.11714824, -0.11360805],
       ...,
       [ 0.12551597, -0.19810101,  0.25813904, ..., -0.15916766,
         0.03661495,  0.05787168],
       [-0.00952011, -0.13226141,  0.20683314, ..., -0.08438209,
         0.09047361, -0.04932896],
       [ 0.09330258, -0.19855712,  0.25283098, ..., -0.11795209,
         0.08495989, -0.1277101 ]], dtype=float32)>, <tf.Tensor: shape=(32, 32), dtype=float32, numpy=
array([[ 0.00973755, -0.14603837,  0.13801864, ..., -0.14650948,
         0.17243978, -0.03248473],
       [ 0.02790481, -0.21827428,  0.24467148, ..., -0.11808439,
         0.05913644, -0.09885184],
       [ 0.05470783, -0.08386039,  0.3444949 , ..., -0.08907019,
         0.11714824, -0.11360805],
       ...,
       [ 0.12551597, -0.19810101,  0.25813904, ..., -0.15916766,
         0.03661495,  0.05787168],
       [-0.00952011, -0.13226141,  0.20683314, ..., -0.08438209,
         0.09047361, -0.04932896],
       [ 0.09330258, -0.19855712,  0.25283098, ..., -0.11795209,
         0.08495989, -0.1277101 ]], dtype=float32)>, <tf.Tensor: shape=(32, 32), dtype=float32, numpy=
array([[ 0.01940585, -0.8061228 ,  0.36245942, ..., -0.2168653 ,
         0.5147007 , -0.0799473 ],
       [ 0.0841461 , -0.90851736,  0.6776383 , ..., -0.21229947,
         0.16982539, -0.20038028],
       [ 0.1704615 , -0.19357543,  0.59967434, ..., -0.15141085,
         0.42116922, -0.2298094 ],
       ...,
       [ 0.3544724 , -0.84146094,  0.62682813, ..., -0.28529364,
         0.11775488,  0.08588792],
       [-0.02202551, -0.66809237,  0.59353924, ..., -0.13151637,
         0.47565305, -0.06251328],
       [ 0.2827972 , -0.8878486 ,  0.539371  , ..., -0.20433322,
         0.34465694, -0.19808929]], dtype=float32)>]}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/83.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.4435759 ,  0.05413879,  0.20777741,  0.15689377, -0.10194031,
        -0.02410805, -0.12140989, -0.19337271],
       [-0.3816669 ,  0.09070992,  0.39063287,  0.2130392 , -0.14261502,
        -0.13742144, -0.22889361, -0.2672977 ],
       [-0.5521922 ,  0.11601552,  0.4037456 ,  0.27653354, -0.12639514,
        -0.09748202, -0.18964836, -0.258818  ],
       [-0.3106583 ,  0.1461671 ,  0.25537035,  0.10838274, -0.10670019,
        -0.13446487, -0.17353931, -0.22583249],
       [-0.48759604,  0.12001318,  0.3189755 ,  0.03802182, -0.10715879,
        -0.06558343, -0.22562319, -0.21785104],
       [-0.34015512,  0.06072199,  0.3988628 ,  0.24108122, -0.18370628,
        -0.01949803, -0.35216674, -0.148496  ],
       [-0.37734994,  0.16426949,  0.29788816,  0.21589322, -0.1287349 ,
        -0.14773133, -0.18007106, -0.18449013],
       [-0.52297294,  0.09766813,  0.382119  ,  0.191513  , -0.09141397,
        -0.03827416, -0.25050268, -0.20794566],
       [-0.42373034,  0.10315285,  0.38669515,  0.20147672, -0.09727855,
        -0.11189722, -0.26184636, -0.21226662],
       [-0.4981728 ,  0.12131561,  0.39975923,  0.23951145, -0.07641979,
        -0.12723887, -0.18599977, -0.2933847 ],
       [-0.31336614,  0.12231173,  0.41239062,  0.21119235, -0.09129637,
        -0.04659   , -0.21527763, -0.2623068 ],
       [-0.43676993,  0.12196244,  0.23409258,  0.14529744, -0.0771952 ,
        -0.07912045, -0.16979255, -0.28755188],
       [-0.25605848,  0.20628843,  0.3400855 ,  0.21982852, -0.05707625,
        -0.16888693, -0.17466371, -0.28978923],
       [-0.50221336,  0.20847161,  0.43378222,  0.21868835, -0.09807701,
        -0.1141337 , -0.18100746, -0.16418028],
       [-0.32800573,  0.1762364 ,  0.40245426,  0.1424136 , -0.10882656,
        -0.1505394 , -0.24998263, -0.26247165],
       [-0.5606462 ,  0.11048621,  0.28733742,  0.10794048, -0.11797384,
        -0.07427207, -0.11246797, -0.25837803],
       [-0.41997492,  0.16414542,  0.2944079 ,  0.28587967, -0.04918997,
         0.00221612, -0.2130835 , -0.17661187],
       [-0.3573305 ,  0.18662179,  0.2967098 ,  0.19374108, -0.09591066,
        -0.03006881, -0.20174669, -0.10635116],
       [-0.46770227, -0.02623354,  0.3701132 ,  0.17446542, -0.1538331 ,
        -0.08599009, -0.24796602, -0.25690648],
       [-0.46827874,  0.16489953,  0.26132247,  0.07801353, -0.04102189,
        -0.06820802, -0.1947353 , -0.25117895],
       [-0.45763034,  0.20326677,  0.23049252,  0.19349882, -0.0565001 ,
         0.01064255, -0.16294049, -0.14456905],
       [-0.45851117,  0.13505164,  0.34959358,  0.19952852, -0.11199526,
        -0.09100481, -0.19047406, -0.22289938],
       [-0.5319051 ,  0.09123187,  0.4210345 ,  0.23392873, -0.10118103,
        -0.00697406, -0.24840586, -0.18275805],
       [-0.51022863,  0.316737  ,  0.27638507,  0.22683367, -0.04369185,
        -0.12231697, -0.13039517, -0.2408131 ],
       [-0.38931397,  0.0696975 ,  0.25917053,  0.22216062, -0.1243709 ,
        -0.08920551, -0.18737763, -0.2327913 ],
       [-0.44987386,  0.2398312 ,  0.39073688,  0.15876713, -0.13534236,
        -0.1725044 , -0.17370224, -0.28100446],
       [-0.40825224,  0.05940695,  0.33118132,  0.2731899 , -0.12234377,
        -0.05646142, -0.21336816, -0.21354732],
       [-0.45113567,  0.09926619,  0.31485114,  0.09362148, -0.1188521 ,
        -0.07177942, -0.20502585, -0.21930903],
       [-0.41933322,  0.27866954,  0.35466132,  0.21805532, -0.07663197,
        -0.10522902, -0.16858168, -0.13963479],
       [-0.3460224 ,  0.02989109,  0.22141571,  0.2416472 , -0.09592187,
        -0.07923275, -0.19247289, -0.23099814],
       [-0.22201867, -0.00123399,  0.21780254,  0.22788578, -0.13511994,
        -0.02923439, -0.1898745 , -0.15909186],
       [-0.3589211 ,  0.12978026,  0.34643456,  0.20756918, -0.15288869,
        -0.03885411, -0.24373524,  0.01609448]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.44357592,  0.0541388 ,  0.20777743,  0.15689382, -0.10194035,
        -0.02410804, -0.12140989, -0.19337271],
       [-0.38166696,  0.09070995,  0.39063287,  0.2130392 , -0.14261502,
        -0.13742144, -0.22889361, -0.26729771],
       [-0.5521922 ,  0.11601553,  0.4037457 ,  0.27653357, -0.12639514,
        -0.09748205, -0.18964837, -0.25881806],
       [-0.3106583 ,  0.14616716,  0.2553704 ,  0.10838275, -0.10670022,
        -0.13446489, -0.17353931, -0.22583248],
       [-0.487596  ,  0.12001319,  0.3189755 ,  0.03802183, -0.1071588 ,
        -0.06558346, -0.22562322, -0.2178511 ],
       [-0.34015515,  0.06072201,  0.39886284,  0.24108125, -0.18370627,
        -0.01949804, -0.35216677, -0.148496  ],
       [-0.37735003,  0.16426952,  0.29788816,  0.21589325, -0.12873493,
        -0.14773133, -0.18007107, -0.18449016],
       [-0.522973  ,  0.09766813,  0.38211903,  0.19151299, -0.09141399,
        -0.03827416, -0.25050268, -0.20794567],
       [-0.42373037,  0.10315284,  0.38669512,  0.20147672, -0.09727856,
        -0.11189722, -0.26184633, -0.21226662],
       [-0.49817276,  0.12131559,  0.39975926,  0.23951145, -0.07641979,
        -0.12723887, -0.18599977, -0.29338467],
       [-0.31336617,  0.12231173,  0.4123906 ,  0.21119232, -0.09129638,
        -0.04659002, -0.21527763, -0.26230687],
       [-0.43676996,  0.12196247,  0.23409255,  0.1452975 , -0.0771952 ,
        -0.07912046, -0.16979256, -0.28755182],
       [-0.25605848,  0.20628844,  0.34008548,  0.21982852, -0.05707627,
        -0.16888691, -0.17466374, -0.2897892 ],
       [-0.5022133 ,  0.20847163,  0.43378222,  0.21868832, -0.09807703,
        -0.11413374, -0.18100749, -0.16418026],
       [-0.3280058 ,  0.17623644,  0.4024542 ,  0.14241365, -0.10882659,
        -0.15053938, -0.2499826 , -0.2624716 ],
       [-0.56064624,  0.11048624,  0.28733745,  0.1079405 , -0.11797384,
        -0.07427206, -0.11246797, -0.25837803],
       [-0.41997498,  0.16414544,  0.2944079 ,  0.28587973, -0.04918997,
         0.00221611, -0.2130835 , -0.17661184],
       [-0.35733062,  0.18662183,  0.29670972,  0.19374108, -0.09591068,
        -0.03006883, -0.20174672, -0.10635119],
       [-0.46770236, -0.02623354,  0.37011322,  0.1744654 , -0.1538331 ,
        -0.08599011, -0.24796602, -0.25690648],
       [-0.4682787 ,  0.16489954,  0.26132247,  0.07801357, -0.04102189,
        -0.06820802, -0.19473533, -0.25117895],
       [-0.4576304 ,  0.20326677,  0.23049256,  0.1934988 , -0.05650012,
         0.01064256, -0.16294046, -0.14456905],
       [-0.45851117,  0.13505164,  0.34959358,  0.19952855, -0.11199526,
        -0.09100484, -0.19047406, -0.22289936],
       [-0.5319052 ,  0.09123187,  0.42103446,  0.23392875, -0.10118103,
        -0.00697407, -0.24840589, -0.18275808],
       [-0.5102287 ,  0.316737  ,  0.27638513,  0.22683366, -0.04369187,
        -0.12231701, -0.13039514, -0.24081312],
       [-0.38931403,  0.06969751,  0.25917053,  0.22216065, -0.12437095,
        -0.08920552, -0.18737765, -0.23279136],
       [-0.44987386,  0.23983122,  0.39073694,  0.15876718, -0.13534236,
        -0.1725044 , -0.17370225, -0.28100443],
       [-0.4082522 ,  0.05940696,  0.33118135,  0.27318993, -0.12234379,
        -0.05646143, -0.21336819, -0.2135473 ],
       [-0.45113558,  0.09926621,  0.3148511 ,  0.09362148, -0.11885209,
        -0.07177944, -0.20502582, -0.21930908],
       [-0.41933325,  0.27866954,  0.35466126,  0.21805534, -0.07663197,
        -0.10522903, -0.16858166, -0.13963479],
       [-0.3460224 ,  0.0298911 ,  0.22141571,  0.24164724, -0.09592187,
        -0.07923277, -0.19247286, -0.23099816],
       [-0.22201866, -0.00123399,  0.2178026 ,  0.22788581, -0.13511994,
        -0.0292344 , -0.18987451, -0.1590918 ],
       [-0.3589211 ,  0.12978026,  0.3464345 ,  0.20756924, -0.1528887 ,
        -0.03885412, -0.24373521,  0.01609449]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/84.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 1024), dtype=float32, numpy=
array([[-0.05130591,  0.01626785,  0.03602557, ...,  0.04208922,
        -0.00097538, -0.05787981],
       [-0.05483928,  0.01342872,  0.03161781, ...,  0.04457156,
         0.00527699, -0.05087813],
       [-0.05719874,  0.01427837,  0.03240627, ...,  0.05251779,
         0.00915264, -0.05464007]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 1024), dtype=float32, numpy=
array([[-0.05130592,  0.01626785,  0.03602557, ...,  0.04208924,
        -0.00097538, -0.05787984],
       [-0.0548393 ,  0.01342872,  0.03161781, ...,  0.04457157,
         0.00527699, -0.05087814],
       [-0.05719875,  0.01427837,  0.03240629, ...,  0.05251781,
         0.00915264, -0.05464008]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/85.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 4), dtype=float32, numpy=
array([[ 0.07070455,  0.06063782, -0.35490456, -0.12901413]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 4), dtype=float32, numpy=
array([[ 0.07070456,  0.06063784, -0.35490456, -0.12901413]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/86.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.06287438, 0.1470173 ]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.08612673, 0.16743806]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/87.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.13945536,  0.09971783, -0.17891215,  0.0958178 , -0.10424758,
         0.13593462,  0.16198888, -0.31294784],
       [ 0.07433137,  0.12744959, -0.13219804,  0.14194642, -0.01961793,
         0.1346706 ,  0.16555125, -0.2500938 ],
       [ 0.10975091,  0.11077292, -0.07709111,  0.17532064, -0.00174224,
         0.0818762 ,  0.21925509, -0.22387895]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.13945538,  0.09971782, -0.17891209,  0.0958178 , -0.10424761,
         0.13593459,  0.16198887, -0.31294787],
       [ 0.07433136,  0.12744959, -0.13219805,  0.1419464 , -0.01961795,
         0.13467063,  0.16555122, -0.25009373],
       [ 0.10975093,  0.11077292, -0.07709114,  0.17532063, -0.00174225,
         0.08187621,  0.2192551 , -0.223879  ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/88.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': <tf.Tensor: shape=(32, 1, 126), dtype=float32, numpy=
array([[[ 0.0255243 ,  0.00724455, -0.00839055, ...,  0.02098868,
          0.03060891,  0.01510949]],

       [[ 0.03063748,  0.01016602, -0.00740059, ...,  0.01210495,
          0.01899495,  0.00417253]],

       [[ 0.00133546, -0.0290112 , -0.03806703, ..., -0.02459224,
          0.04129682, -0.01456149]],

       ...,

       [[ 0.01151049, -0.0128511 , -0.02721998, ...,  0.00868264,
          0.04789521, -0.01186808]],

       [[ 0.03722318,  0.02077146,  0.00207622, ...,  0.01781559,
          0.00863544,  0.0160847 ]],

       [[ 0.01058744, -0.00767184, -0.02574055, ...,  0.01480732,
          0.04719142,  0.00275424]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 126), dtype=float32, numpy=
array([[[ 0.04511935,  0.01426544, -0.01460822, ...,  0.03806907,
          0.05412965,  0.03300795]],

       [[ 0.05466717,  0.01851788, -0.01251811, ...,  0.02131579,
          0.03410143,  0.0104044 ]],

       [[ 0.00509208, -0.04994025, -0.06817754, ..., -0.04358924,
          0.07323511, -0.02454221]],

       ...,

       [[ 0.02308475, -0.02061663, -0.049104  , ...,  0.01584116,
          0.08198897, -0.01609564]],

       [[ 0.06507117,  0.03648659,  0.00461421, ...,  0.0314419 ,
          0.01712819,  0.03143999]],

       [[ 0.0208042 , -0.01308083, -0.04578872, ...,  0.0265501 ,
          0.0820905 ,  0.01125439]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/89.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[ 0.05321103,  0.16763788, -0.04883757,  0.11293504,  0.07107557,
         0.13319086,  0.17043714]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[ 0.05321101,  0.16763787, -0.04883759,  0.11293509,  0.07107559,
         0.13319087,  0.17043711]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/9.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 130), dtype=float32, numpy=
array([[ 0.00692104,  0.02251725,  0.0025384 , ...,  0.01680708,
         0.01305096,  0.02216036],
       [ 0.01694899,  0.01873417, -0.00371923, ...,  0.00712827,
         0.02164993,  0.03506837],
       [ 0.00751279,  0.02571207,  0.008185  , ...,  0.0237784 ,
         0.01003602,  0.02600534],
       ...,
       [ 0.00536261,  0.0142403 ,  0.01016823, ...,  0.01333048,
         0.00048033,  0.01736967],
       [-0.00217884,  0.01841177,  0.00636903, ...,  0.01023762,
         0.0030448 ,  0.00968697],
       [ 0.00666987,  0.02150901, -0.00217157, ...,  0.00910498,
         0.01690068,  0.02160248]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 130), dtype=float32, numpy=
array([[ 0.01002159,  0.04087481,  0.00268163, ...,  0.0291917 ,
         0.02065881,  0.04190134],
       [ 0.02681035,  0.0323305 , -0.00974099, ...,  0.01334389,
         0.03481227,  0.06758139],
       [ 0.010989  ,  0.04710724,  0.0125244 , ...,  0.04125865,
         0.01548856,  0.04809553],
       ...,
       [ 0.00757115,  0.02593891,  0.0149899 , ...,  0.02335715,
         0.00032245,  0.03246615],
       [-0.00597871,  0.03379053,  0.0073391 , ...,  0.01779488,
         0.00413671,  0.01864967],
       [ 0.00894932,  0.03833227, -0.00704117, ...,  0.01619144,
         0.02690824,  0.04243407]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/90.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.01952209,  0.03946101,  0.23818736,  0.02157386,  0.29611722,
         0.10526511,  0.20692384,  0.1237641 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[-0.0195221 ,  0.03946102,  0.23818739,  0.02157385,  0.29611722,
         0.1052651 ,  0.20692389,  0.12376408]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/91.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 1, 127), dtype=float32, numpy=
array([[[-0.01121874, -0.00186491,  0.02782067, ..., -0.02964456,
          0.01062952, -0.01422578]],

       [[-0.02152452, -0.0083309 ,  0.01862179, ..., -0.02478766,
          0.00687798, -0.001347  ]],

       [[-0.02176848, -0.00287445,  0.00497977, ..., -0.01472485,
          0.00422199, -0.00751585]],

       ...,

       [[-0.03294102,  0.00869185, -0.00509214, ..., -0.0106602 ,
         -0.00597005, -0.00376093]],

       [[-0.01179026,  0.01397892,  0.00028358, ..., -0.00669609,
          0.00737721,  0.00053732]],

       [[-0.02766767,  0.00825761, -0.0183868 , ...,  0.00338646,
         -0.00529977,  0.00740977]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 127), dtype=float32, numpy=
array([[[-0.01998173, -0.00496541,  0.04856857, ..., -0.05064761,
          0.01937556, -0.02420225]],

       [[-0.03733209, -0.01537575,  0.03261675, ..., -0.04132916,
          0.0119492 , -0.00198312]],

       [[-0.03725567, -0.00615763,  0.00982135, ..., -0.02386642,
          0.00782184, -0.01332757]],

       ...,

       [[-0.05560278,  0.01556351, -0.00577675, ..., -0.01753843,
         -0.01129868, -0.00762978]],

       [[-0.02005473,  0.02384799,  0.00165447, ..., -0.01298535,
          0.01163641, -0.00018906]],

       [[-0.04674874,  0.01518911, -0.02907748, ...,  0.00612271,
         -0.01072519,  0.01104881]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/92.py
2023-04-19 13:47:05.419547: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at cudnn_rnn_ops.cc:1553 : UNKNOWN: CUDNN_STATUS_BAD_PARAM
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): 'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)'
{'res_cpu': <tf.Tensor: shape=(32, 0), dtype=float32, numpy=array([], shape=(32, 0), dtype=float32)>, 'err_gpu': 'Error:Exception encountered when calling layer "lstm" (type LSTM).\n\nCUDNN_STATUS_BAD_PARAM\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): \'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)\' [Op:CudnnRNN]\n\nCall arguments received by layer "lstm" (type LSTM):\n  • inputs=tf.Tensor(shape=(32, 10, 8), dtype=float32)\n  • mask=None\n  • training=None\n  • initial_state=None'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/93.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 768), dtype=float32, numpy=
array([[ 0.01741216, -0.02471349, -0.00400717, ..., -0.04120515,
         0.061375  , -0.03247464],
       [ 0.02194443, -0.03238733, -0.00245821, ..., -0.05474056,
         0.06775884, -0.02895427],
       [ 0.02915932, -0.02762268,  0.00450521, ..., -0.05307129,
         0.06359202, -0.04241768]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 768), dtype=float32, numpy=
array([[ 0.01741216, -0.0247135 , -0.00400718, ..., -0.04120516,
         0.061375  , -0.03247464],
       [ 0.02194444, -0.03238734, -0.00245821, ..., -0.05474058,
         0.06775885, -0.02895427],
       [ 0.02915933, -0.02762268,  0.00450521, ..., -0.0530713 ,
         0.06359203, -0.04241768]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/94.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(2, 50, 3), dtype=float32, numpy=
array([[[-7.03034773e-02, -3.97274345e-02,  2.47796521e-01],
        [-1.74427556e-03, -1.04677700e-01,  2.98624128e-01],
        [-1.04231134e-01, -7.44202361e-02,  4.36777562e-01],
        [-5.62523566e-02, -3.98447402e-02,  3.83968204e-01],
        [-3.98414917e-02, -1.07886732e-01,  3.91984671e-01],
        [ 4.85724583e-03, -7.81033039e-02,  4.42787886e-01],
        [-1.51324272e-01, -1.19088054e-01,  3.36771250e-01],
        [-7.17332074e-03, -1.10718459e-02,  2.90347844e-01],
        [-6.54267445e-02, -1.21492017e-02,  4.78492498e-01],
        [ 1.18644554e-02,  4.49774005e-02,  5.06820500e-01],
        [-4.02521193e-02, -2.38906723e-02,  2.86842346e-01],
        [-7.68425018e-02, -3.50071266e-02,  4.33652103e-01],
        [-1.50891468e-02, -1.32485375e-01,  3.51297677e-01],
        [-3.31497937e-02, -2.21507132e-01,  2.48186290e-01],
        [-5.35258204e-02, -2.33736396e-01,  2.72256464e-01],
        [-2.82463953e-02, -1.30413011e-01,  4.09549505e-01],
        [-1.67614780e-02, -9.28966105e-02,  4.41481054e-01],
        [ 7.96111599e-02, -5.37272245e-02,  4.12320793e-01],
        [ 1.76592055e-03, -4.31754068e-02,  3.06489795e-01],
        [-6.02901876e-02, -1.88942514e-02,  3.40669543e-01],
        [ 2.62579881e-02,  3.97777334e-02,  2.95291394e-01],
        [ 1.27611384e-01,  1.04205064e-01,  3.96136880e-01],
        [-3.12869027e-02,  3.92911918e-02,  4.21246469e-01],
        [-3.11445277e-02,  8.63010882e-06,  4.20747131e-01],
        [-3.34064104e-02, -6.92044292e-03,  3.30804825e-01],
        [-6.45566061e-02, -2.13820934e-02,  5.06662428e-01],
        [-9.04828757e-02, -7.76765868e-02,  3.40177774e-01],
        [-7.97465444e-03, -1.16658412e-01,  2.84897864e-01],
        [-1.55997928e-02, -2.39027012e-02,  3.69635582e-01],
        [-6.53800517e-02, -7.25442022e-02,  4.20763522e-01],
        [-3.36433537e-02, -9.23008174e-02,  3.44614089e-01],
        [-6.73260167e-02, -5.42558506e-02,  4.06838626e-01],
        [ 3.75824608e-03, -5.03839832e-03,  4.51626629e-01],
        [-7.61515349e-02, -3.36439274e-02,  3.74010324e-01],
        [-7.41911121e-03, -1.04876369e-01,  3.07163894e-01],
        [-1.21509274e-02, -1.21662572e-01,  2.53588259e-01],
        [-6.90957829e-02, -7.73027465e-02,  2.59407848e-01],
        [-1.39276814e-02, -1.31831206e-02,  3.94161403e-01],
        [-1.27711058e-01, -2.02889480e-02,  4.89446700e-01],
        [-5.59599884e-02,  1.09957661e-02,  3.35352391e-01],
        [ 5.38887903e-02, -5.26229218e-02,  1.98988661e-01],
        [ 7.10094124e-02, -1.01529829e-01,  2.64890522e-01],
        [ 9.25390646e-02, -9.64684784e-02,  3.74580353e-01],
        [ 4.82218117e-02, -1.97784349e-01,  2.86515743e-01],
        [-1.06246069e-01, -1.94417834e-02,  3.31117302e-01],
        [-1.25833288e-01, -7.69167691e-02,  4.64148790e-01],
        [-2.37132031e-02, -1.00669503e-01,  2.92517424e-01],
        [-9.50283855e-02, -1.43515676e-01,  3.31413001e-01],
        [-5.02169281e-02, -4.65732776e-02,  3.00988674e-01],
        [-9.16596949e-02,  3.39560187e-03,  3.43832433e-01]],

       [[-1.28849268e-01,  5.45552075e-02,  1.96989417e-01],
        [-5.37837148e-02,  1.14775009e-01,  4.08995032e-01],
        [-3.41481380e-02,  6.15142472e-02,  4.67640758e-01],
        [ 1.91599422e-03,  8.46286491e-02,  4.35760111e-01],
        [-2.24232133e-02, -8.08169041e-03,  2.71322131e-01],
        [-9.45756212e-03, -1.42631400e-02,  2.54671812e-01],
        [-8.12013820e-03, -4.71490808e-02,  3.23881209e-01],
        [-2.30943784e-02,  4.58138343e-03,  3.52248996e-01],
        [-4.93371040e-02,  4.60721217e-02,  4.67023075e-01],
        [ 1.46173006e-02, -7.01854452e-02,  3.19696724e-01],
        [ 2.39447784e-02, -8.79098475e-02,  4.95383501e-01],
        [-9.28801745e-02, -1.08745389e-01,  3.83986831e-01],
        [ 2.42358111e-02, -1.53899103e-01,  5.14916956e-01],
        [-6.57983124e-03, -1.11950532e-01,  6.41464949e-01],
        [-5.28535061e-02, -7.54650757e-02,  4.11671579e-01],
        [-7.20961764e-02, -9.98747498e-02,  5.07728040e-01],
        [-5.56378476e-02, -1.13008767e-01,  3.39854926e-01],
        [-8.52646679e-02, -1.86784551e-01,  2.91793585e-01],
        [-7.48236328e-02, -4.81733344e-02,  4.43836063e-01],
        [-6.37667477e-02, -1.00510933e-01,  2.90054053e-01],
        [-1.52632535e-01, -7.41769597e-02,  4.05248851e-01],
        [-6.12261295e-02, -8.57446715e-02,  3.72682214e-01],
        [-1.39462501e-01, -8.45932290e-02,  4.94694740e-01],
        [-1.26637176e-01, -1.06605381e-01,  2.95507938e-01],
        [-8.68524387e-02, -1.18320994e-01,  3.96391720e-01],
        [-2.13836785e-02, -1.20677888e-01,  3.95194411e-01],
        [-1.08122535e-01, -3.63691151e-02,  2.48051092e-01],
        [-1.13579609e-01, -6.58614710e-02,  3.29152346e-01],
        [-3.63742746e-02, -8.89871344e-02,  3.43366742e-01],
        [-4.63103801e-02, -8.65355134e-02,  3.35293680e-01],
        [-3.84111702e-02, -8.48061889e-02,  2.37794682e-01],
        [-4.42284085e-02, -6.13136590e-02,  3.25645775e-01],
        [ 3.78313065e-02,  1.34291686e-03,  2.79004574e-01],
        [-6.36899471e-03,  9.15621817e-02,  4.30308491e-01],
        [-7.23848790e-02, -1.58649590e-02,  3.82336974e-01],
        [-9.83809978e-02, -2.01168680e-03,  2.69505441e-01],
        [-4.56780270e-02,  3.37846274e-03,  3.13364655e-01],
        [-6.00674152e-02, -1.08862994e-02,  3.88539255e-01],
        [-7.35237598e-02,  8.93644169e-02,  4.47724491e-01],
        [-6.17191680e-02,  5.97690679e-02,  3.26104850e-01],
        [-1.07535638e-01,  1.64367706e-01,  2.64648944e-01],
        [-8.16233456e-02,  1.60096008e-02,  3.82489681e-01],
        [-5.00835925e-02,  8.78193751e-02,  3.84239942e-01],
        [ 8.06123167e-02,  1.41537458e-01,  3.25984180e-01],
        [ 5.78735396e-02,  1.37389436e-01,  3.91767681e-01],
        [-1.29611017e-02,  5.29680997e-02,  3.32502931e-01],
        [-1.42255016e-02,  2.80291494e-02,  4.40170795e-01],
        [-2.64226217e-02,  1.50954977e-01,  3.37013185e-01],
        [ 1.37646161e-02,  3.08441110e-02,  4.43782151e-01],
        [-3.63673605e-02,  1.21519625e-01,  3.33098471e-01]]],
      dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(2, 50, 3), dtype=float32, numpy=
array([[[-8.04045349e-02, -6.82598725e-02,  4.54224616e-01],
        [-7.09839212e-03, -1.40761539e-01,  4.56457883e-01],
        [-9.55501944e-02, -1.18583672e-01,  5.24993837e-01],
        [-5.26156276e-02, -7.49761984e-02,  4.21144694e-01],
        [-3.98784690e-02, -1.29940629e-01,  4.15850341e-01],
        [ 4.08277148e-03, -9.40868631e-02,  4.55664188e-01],
        [-1.52976841e-01, -1.31758913e-01,  3.44372272e-01],
        [-8.69216956e-03, -1.90845896e-02,  2.94869721e-01],
        [-6.62814751e-02, -1.93946268e-02,  4.83961493e-01],
        [ 1.10152652e-02,  3.43691260e-02,  5.10837972e-01],
        [-4.12459634e-02, -2.62556616e-02,  2.89605230e-01],
        [-7.74351582e-02, -3.90841067e-02,  4.35618728e-01],
        [-1.56048965e-02, -1.35547027e-01,  3.52797151e-01],
        [-3.34683321e-02, -2.23797500e-01,  2.49101222e-01],
        [-5.37422635e-02, -2.34762341e-01,  2.73020983e-01],
        [-2.84074116e-02, -1.30890399e-01,  4.09996033e-01],
        [-1.68987885e-02, -9.32942256e-02,  4.41812903e-01],
        [ 7.95091316e-02, -5.40271886e-02,  4.12484258e-01],
        [ 1.72647228e-03, -4.33078595e-02,  3.06575716e-01],
        [-6.03277683e-02, -1.90551728e-02,  3.40735376e-01],
        [ 2.62463149e-02,  3.97087522e-02,  2.95341611e-01],
        [ 1.27600983e-01,  1.04154788e-01,  3.96169513e-01],
        [-3.12962011e-02,  3.92309725e-02,  4.21264321e-01],
        [-3.11551057e-02, -1.00001316e-05,  4.20762390e-01],
        [-3.34094577e-02, -6.93495059e-03,  3.30811292e-01],
        [-6.45579621e-02, -2.13950723e-02,  5.06668150e-01],
        [-9.04843286e-02, -7.76910931e-02,  3.40181172e-01],
        [-7.97675177e-03, -1.16664939e-01,  2.84900784e-01],
        [-1.56005509e-02, -2.39073504e-02,  3.69637281e-01],
        [-6.53811321e-02, -7.25468099e-02,  4.20764863e-01],
        [-3.36437784e-02, -9.23020616e-02,  3.44614834e-01],
        [-6.73264116e-02, -5.42566106e-02,  4.06839103e-01],
        [ 3.75797669e-03, -5.03895665e-03,  4.51626986e-01],
        [-7.61516392e-02, -3.36443447e-02,  3.74010563e-01],
        [-7.41921132e-03, -1.04876690e-01,  3.07164043e-01],
        [-1.21510345e-02, -1.21662922e-01,  2.53588319e-01],
        [-6.90958574e-02, -7.73029104e-02,  2.59407908e-01],
        [-1.39277112e-02, -1.31831765e-02,  3.94161463e-01],
        [-1.27711132e-01, -2.02889945e-02,  4.89446670e-01],
        [-5.59600145e-02,  1.09957391e-02,  3.35352391e-01],
        [ 5.38887866e-02, -5.26229255e-02,  1.98988646e-01],
        [ 7.10093975e-02, -1.01529807e-01,  2.64890581e-01],
        [ 9.25390422e-02, -9.64684412e-02,  3.74580234e-01],
        [ 4.82217968e-02, -1.97784245e-01,  2.86515713e-01],
        [-1.06246069e-01, -1.94417462e-02,  3.31117243e-01],
        [-1.25833318e-01, -7.69167989e-02,  4.64148790e-01],
        [-2.37131938e-02, -1.00669496e-01,  2.92517334e-01],
        [-9.50283706e-02, -1.43515661e-01,  3.31412941e-01],
        [-5.02169095e-02, -4.65732329e-02,  3.00988585e-01],
        [-9.16596875e-02,  3.39571130e-03,  3.43832374e-01]],

       [[-9.39803049e-02,  8.74884427e-02,  4.25191671e-01],
        [-2.78233439e-02,  1.21909648e-01,  5.27926981e-01],
        [-1.62470341e-02,  5.49547859e-02,  5.20295501e-01],
        [ 1.09232636e-02,  7.54466876e-02,  4.64047402e-01],
        [-1.49435038e-02, -1.82440653e-02,  3.07910800e-01],
        [-5.38047217e-03, -2.01778393e-02,  2.69480437e-01],
        [-4.13983036e-03, -5.37409373e-02,  3.32787514e-01],
        [-2.19107103e-02, -1.23236130e-03,  3.57424974e-01],
        [-4.88454066e-02,  4.26816680e-02,  4.71383512e-01],
        [ 1.47257270e-02, -7.25239217e-02,  3.21416885e-01],
        [ 2.39001922e-02, -8.97472203e-02,  4.97343242e-01],
        [-9.28870440e-02, -1.09655254e-01,  3.85037780e-01],
        [ 2.41813455e-02, -1.55535132e-01,  5.15721083e-01],
        [-6.69577997e-03, -1.12782381e-01,  6.42453611e-01],
        [-5.29137962e-02, -7.58255422e-02,  4.12149787e-01],
        [-7.21565187e-02, -1.00167103e-01,  5.08052230e-01],
        [-5.56776486e-02, -1.13286726e-01,  3.40079278e-01],
        [-8.52919891e-02, -1.87058285e-01,  2.92167544e-01],
        [-7.48345479e-02, -4.83441576e-02,  4.44112808e-01],
        [-6.37702942e-02, -1.00634597e-01,  2.90194482e-01],
        [-1.52634889e-01, -7.42706358e-02,  4.05359656e-01],
        [-6.12333491e-02, -8.57836381e-02,  3.72735083e-01],
        [-1.39466241e-01, -8.46394598e-02,  4.94736284e-01],
        [-1.26639992e-01, -1.06627978e-01,  2.95530051e-01],
        [-8.68551731e-02, -1.18335627e-01,  3.96405041e-01],
        [-2.13845596e-02, -1.20688371e-01,  3.95204484e-01],
        [-1.08123250e-01, -3.63810100e-02,  2.48057291e-01],
        [-1.13581091e-01, -6.58719689e-02,  3.29157859e-01],
        [-3.63762863e-02, -8.89964774e-02,  3.43370825e-01],
        [-4.63117287e-02, -8.65436196e-02,  3.35297078e-01],
        [-3.84121649e-02, -8.48110244e-02,  2.37796336e-01],
        [-4.42290269e-02, -6.13179170e-02,  3.25646996e-01],
        [ 3.78305502e-02,  1.34147506e-03,  2.79005349e-01],
        [-6.36934768e-03,  9.15592313e-02,  4.30309087e-01],
        [-7.23852292e-02, -1.58673488e-02,  3.82337689e-01],
        [-9.83814225e-02, -2.01289798e-03,  2.69505858e-01],
        [-4.56781909e-02,  3.37762432e-03,  3.13364983e-01],
        [-6.00675866e-02, -1.08866720e-02,  3.88539463e-01],
        [-7.35238791e-02,  8.93638730e-02,  4.47724611e-01],
        [-6.17192499e-02,  5.97689711e-02,  3.26104939e-01],
        [-1.07535735e-01,  1.64367497e-01,  2.64648974e-01],
        [-8.16234052e-02,  1.60095356e-02,  3.82489741e-01],
        [-5.00836261e-02,  8.78193006e-02,  3.84240061e-01],
        [ 8.06122944e-02,  1.41537443e-01,  3.25984120e-01],
        [ 5.78735545e-02,  1.37389421e-01,  3.91767681e-01],
        [-1.29610989e-02,  5.29679991e-02,  3.32502872e-01],
        [-1.42255025e-02,  2.80290879e-02,  4.40170765e-01],
        [-2.64226273e-02,  1.50954932e-01,  3.37013155e-01],
        [ 1.37646226e-02,  3.08440793e-02,  4.43782240e-01],
        [-3.63673568e-02,  1.21519610e-01,  3.33098471e-01]]],
      dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/95.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.16303433, -0.27975696, -0.14226598,  0.14646287,  0.09047999,
         0.15438487,  0.1636157 ,  0.08564284],
       [-0.01500516, -0.23049578,  0.16097212,  0.09698222,  0.10200908,
         0.2928268 ,  0.20338276,  0.13067682],
       [-0.0739403 , -0.2428102 ,  0.16714165, -0.00474417,  0.07647159,
         0.20304134,  0.23330978,  0.17317542],
       [-0.05642638, -0.2372253 ,  0.04704068,  0.13640708,  0.10207582,
         0.24247597,  0.2393685 ,  0.07887474],
       [-0.19694526, -0.25569725,  0.05752206,  0.03138687,  0.0604496 ,
         0.1529754 ,  0.2856483 ,  0.14769381],
       [-0.21244182, -0.34424257, -0.07215034,  0.09569711,  0.05650157,
         0.12362033,  0.20997623,  0.14615057],
       [-0.08803897, -0.1617019 , -0.09504697,  0.00209199,  0.05364105,
         0.26272395,  0.31379986,  0.10620154],
       [-0.21746485, -0.26438782, -0.04967815,  0.0244679 ,  0.04088127,
         0.1542209 ,  0.21330386,  0.193582  ],
       [-0.07548282, -0.31405327,  0.10891549,  0.1173112 ,  0.11074377,
         0.28326803,  0.17721549,  0.1492266 ],
       [-0.10353433, -0.28261584,  0.01169499, -0.03263883,  0.08415364,
         0.24988934,  0.1971104 ,  0.19664814],
       [-0.08691993, -0.26596838,  0.09155909,  0.06483407,  0.07649038,
         0.25474712,  0.2683367 ,  0.13417785],
       [-0.12366198, -0.23683576,  0.04135114,  0.09320237,  0.11029505,
         0.21176387,  0.24968478,  0.14887689],
       [-0.12329657, -0.3336749 , -0.05009077, -0.05963163,  0.0048599 ,
         0.13299455,  0.2526948 ,  0.09974189],
       [-0.0269431 , -0.1459759 , -0.12432688, -0.10817912,  0.09474041,
         0.25015333,  0.31231418,  0.09936482],
       [-0.10036961, -0.21781723, -0.11718159, -0.03560342, -0.00385626,
         0.31257018,  0.31008026,  0.07768659],
       [-0.05181145, -0.19071276, -0.02443869,  0.00960749,  0.09895827,
         0.285785  ,  0.3054013 ,  0.0998631 ],
       [-0.00862665, -0.17242533,  0.04973489, -0.07188305,  0.0683016 ,
         0.24754202,  0.2993966 ,  0.09863026],
       [-0.17588307, -0.25808564, -0.00995246, -0.01371759,  0.06992626,
         0.02187975,  0.21434218,  0.14773375],
       [-0.12658112, -0.3070198 ,  0.07309213,  0.17306137,  0.05555042,
         0.22896655,  0.13371593,  0.09586997],
       [-0.15584806, -0.34338787, -0.0782989 , -0.02508634,  0.06117997,
         0.2658141 ,  0.28199247,  0.12793866],
       [-0.09962652, -0.26081103, -0.03811875,  0.06742147,  0.07842232,
         0.14150137,  0.21040139,  0.09789551],
       [-0.03318324, -0.23567906, -0.04273502, -0.02435223,  0.09133802,
         0.2212394 ,  0.31955752,  0.07106981],
       [-0.16936475, -0.13755433, -0.13624181, -0.01989754,  0.0703962 ,
         0.2612832 ,  0.36122662,  0.12615626],
       [-0.02850477, -0.30932358,  0.07592363,  0.01775038,  0.06237417,
         0.22051582,  0.15957695,  0.1351741 ],
       [-0.02412094, -0.30069885,  0.02263499, -0.113405  ,  0.03725646,
         0.12500024,  0.29787815,  0.07727274],
       [-0.11913508, -0.36847672,  0.06904048,  0.05055856,  0.04153569,
         0.2135324 ,  0.22209945,  0.10332464],
       [-0.20405942, -0.29214144, -0.05884663,  0.05801036,  0.05619558,
         0.16397391,  0.22570327,  0.12053788],
       [-0.05540344, -0.25430337,  0.15303808, -0.01052148,  0.10200562,
         0.1861032 ,  0.1157601 ,  0.21277523],
       [-0.1266984 , -0.23876584, -0.16565984, -0.02057192,  0.06629172,
         0.22362491,  0.2998748 ,  0.09138684],
       [-0.14458741, -0.28522247, -0.15900302,  0.04354725,  0.06220715,
         0.28051233,  0.21708654,  0.09988747],
       [-0.03098222, -0.15120849, -0.07222465, -0.07507575,  0.05571679,
         0.2281025 ,  0.31763396,  0.08587529],
       [-0.11820388, -0.34596524,  0.11666979,  0.12537706,  0.06058365,
         0.18709134,  0.12521175,  0.186288  ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.16303435, -0.27975693, -0.14226599,  0.14646286,  0.09048003,
         0.15438488,  0.1636157 ,  0.08564284],
       [-0.01500518, -0.2304958 ,  0.16097213,  0.09698222,  0.10200909,
         0.29282683,  0.20338279,  0.13067684],
       [-0.0739403 , -0.24281019,  0.16714165, -0.00474417,  0.0764716 ,
         0.20304137,  0.23330984,  0.17317541],
       [-0.05642641, -0.23722526,  0.04704069,  0.13640705,  0.10207582,
         0.24247594,  0.23936848,  0.07887474],
       [-0.19694528, -0.25569725,  0.05752207,  0.03138688,  0.0604496 ,
         0.15297543,  0.2856483 ,  0.14769384],
       [-0.2124418 , -0.34424254, -0.07215036,  0.09569712,  0.05650159,
         0.12362037,  0.20997621,  0.14615059],
       [-0.08803898, -0.16170187, -0.09504697,  0.00209198,  0.05364106,
         0.26272392,  0.3137999 ,  0.10620151],
       [-0.21746483, -0.2643878 , -0.04967814,  0.0244679 ,  0.04088128,
         0.1542209 ,  0.21330386,  0.193582  ],
       [-0.07548282, -0.31405333,  0.10891552,  0.11731123,  0.11074383,
         0.283268  ,  0.17721549,  0.14922662],
       [-0.10353436, -0.2826158 ,  0.01169497, -0.03263887,  0.08415363,
         0.24988939,  0.19711041,  0.19664821],
       [-0.08691994, -0.26596838,  0.09155912,  0.06483411,  0.07649039,
         0.25474712,  0.26833665,  0.13417788],
       [-0.123662  , -0.23683576,  0.04135116,  0.0932024 ,  0.11029506,
         0.21176393,  0.24968487,  0.14887692],
       [-0.1232966 , -0.33367485, -0.05009077, -0.05963165,  0.00485991,
         0.13299458,  0.25269476,  0.09974188],
       [-0.0269431 , -0.14597593, -0.12432691, -0.10817914,  0.09474043,
         0.25015333,  0.31231418,  0.09936482],
       [-0.10036962, -0.21781725, -0.11718161, -0.03560341, -0.00385626,
         0.31257015,  0.31008023,  0.07768658],
       [-0.05181143, -0.19071281, -0.02443869,  0.00960749,  0.09895829,
         0.28578496,  0.30540127,  0.0998631 ],
       [-0.00862665, -0.17242531,  0.04973491, -0.07188307,  0.06830161,
         0.24754202,  0.29939666,  0.09863026],
       [-0.17588311, -0.25808564, -0.00995247, -0.0137176 ,  0.06992629,
         0.02187975,  0.21434222,  0.14773375],
       [-0.12658112, -0.30701983,  0.07309215,  0.17306139,  0.05555042,
         0.22896655,  0.13371594,  0.09586996],
       [-0.15584806, -0.3433878 , -0.07829892, -0.02508632,  0.06117998,
         0.2658141 ,  0.28199244,  0.12793866],
       [-0.09962657, -0.26081106, -0.03811872,  0.06742148,  0.07842233,
         0.14150135,  0.21040137,  0.09789552],
       [-0.03318323, -0.23567905, -0.04273501, -0.02435222,  0.09133802,
         0.2212394 ,  0.3195575 ,  0.0710698 ],
       [-0.16936477, -0.13755433, -0.13624181, -0.01989755,  0.0703962 ,
         0.2612832 ,  0.3612266 ,  0.12615624],
       [-0.02850476, -0.30932355,  0.07592365,  0.01775039,  0.06237419,
         0.22051583,  0.15957698,  0.13517408],
       [-0.02412096, -0.30069882,  0.02263498, -0.11340502,  0.03725647,
         0.12500027,  0.29787815,  0.07727276],
       [-0.11913511, -0.3684768 ,  0.06904049,  0.05055857,  0.04153569,
         0.2135324 ,  0.22209947,  0.10332466],
       [-0.20405939, -0.29214144, -0.05884661,  0.05801037,  0.05619559,
         0.16397393,  0.22570331,  0.12053789],
       [-0.05540346, -0.2543033 ,  0.15303811, -0.01052148,  0.10200561,
         0.18610317,  0.11576008,  0.21277517],
       [-0.1266984 , -0.23876584, -0.16565984, -0.02057191,  0.06629175,
         0.22362494,  0.2998748 ,  0.09138686],
       [-0.1445874 , -0.2852225 , -0.15900303,  0.04354726,  0.06220715,
         0.28051236,  0.21708651,  0.09988746],
       [-0.0309822 , -0.15120852, -0.07222468, -0.07507578,  0.05571681,
         0.2281025 ,  0.3176339 ,  0.0858753 ],
       [-0.1182039 , -0.34596524,  0.11666979,  0.12537707,  0.06058368,
         0.18709132,  0.12521175,  0.18628803]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/96.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[ 0.10451814, -0.17708339,  0.15152673, -0.28742912, -0.21224312,
        -0.4086497 , -0.17758729, -0.19476399,  0.07059197]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[ 0.10451815, -0.1770834 ,  0.15152675, -0.28742912, -0.21224314,
        -0.4086496 , -0.17758729, -0.19476406,  0.07059198]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/97.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 6), dtype=float32, numpy=
array([[-0.23292752, -0.3053647 ,  0.17835146,  0.28909838,  0.13464157,
        -0.08755111],
       [-0.19459711, -0.26328516,  0.11843027,  0.24603751,  0.04893104,
        -0.00916446],
       [-0.12480856, -0.38539878,  0.24127264,  0.33506545,  0.00767402,
        -0.054145  ],
       [-0.24341908, -0.27049983,  0.12026297,  0.1692121 ,  0.08110661,
        -0.12754315]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 6), dtype=float32, numpy=
array([[-0.23292752, -0.30536467,  0.17835143,  0.28909826,  0.13464159,
        -0.08755113],
       [-0.19459708, -0.2632852 ,  0.11843028,  0.24603751,  0.04893104,
        -0.00916446],
       [-0.12480855, -0.38539875,  0.24127269,  0.33506548,  0.00767404,
        -0.05414503],
       [-0.24341904, -0.27049983,  0.12026297,  0.16921213,  0.08110661,
        -0.12754317]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/98.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.21577725,  0.00338199, -0.183811  , -0.19608523, -0.02514634,
         0.24910748, -0.01553935, -0.03740782],
       [-0.23012657, -0.05194803, -0.16454576, -0.2584769 ,  0.08885763,
         0.23758064,  0.0026338 , -0.04524858],
       [-0.3276066 ,  0.09778551, -0.20546713, -0.23530146, -0.07238293,
         0.25583494,  0.00426954, -0.03551341],
       [-0.2568553 , -0.10603032, -0.24313043, -0.2573294 , -0.00962534,
         0.37104726,  0.02487821, -0.04871459],
       [-0.11548316, -0.05898578, -0.3938925 , -0.23945265,  0.08107869,
         0.39767346,  0.12188578, -0.09353426],
       [-0.11797739, -0.06950405, -0.24780254, -0.18957429, -0.07511081,
         0.1777073 ,  0.02530891, -0.07411187],
       [-0.18943003,  0.08011945, -0.26625532, -0.21220891,  0.00796839,
         0.2834207 ,  0.03189007, -0.08206344],
       [-0.20219523, -0.05279577, -0.24435018, -0.29859743,  0.18800284,
         0.23944004,  0.01438907, -0.08822569],
       [-0.23597564,  0.12600103, -0.27201873, -0.17668115, -0.03287063,
         0.29739535,  0.05125041, -0.09658005],
       [-0.12546293, -0.13094398, -0.1728759 , -0.25748178,  0.08385099,
         0.2343604 ,  0.03412965, -0.06340107],
       [-0.19288053, -0.05035784, -0.25628808, -0.3091264 ,  0.11114971,
         0.31927466,  0.07217163, -0.03624035],
       [-0.16898824, -0.06446189, -0.29004773, -0.26872113,  0.06765995,
         0.29255694,  0.01539888, -0.10663058],
       [-0.14911352,  0.07302003, -0.3220878 , -0.17374511, -0.06777569,
         0.28899083,  0.12616387, -0.03738555],
       [-0.22965352,  0.10973423, -0.2811429 , -0.17741749,  0.0319875 ,
         0.24478343,  0.0530356 , -0.12059702],
       [-0.20066161,  0.08819427, -0.27944642, -0.16849932, -0.17227328,
         0.18292086,  0.11220808, -0.04408584],
       [-0.15450111, -0.03785486, -0.22882044, -0.20511992, -0.05584023,
         0.28308657,  0.06821395, -0.03491057],
       [-0.20999564,  0.12940611, -0.18934308, -0.21433969, -0.02694866,
         0.24410853,  0.0385061 , -0.06790093],
       [-0.1370381 , -0.06967091, -0.15229829, -0.23789218, -0.04606827,
         0.23692644,  0.08675139, -0.04887375],
       [-0.2300182 , -0.02394312, -0.27114674, -0.23952924, -0.10911963,
         0.16115014,  0.07119778, -0.02737709],
       [-0.13641067, -0.01951774, -0.22191717, -0.28974515, -0.01461057,
         0.19563922,  0.02163705, -0.04711079],
       [-0.18805416,  0.07409847, -0.15369321, -0.23257111,  0.02859762,
         0.32364315, -0.03827203, -0.11871809],
       [-0.24466841, -0.03399044, -0.2212798 , -0.28471747,  0.02161179,
         0.17660092,  0.04894912, -0.07032508],
       [-0.211466  , -0.00482733, -0.23746608, -0.15784109, -0.06788969,
         0.25470522,  0.00793794, -0.05748616],
       [-0.18154761, -0.00229864, -0.1575866 , -0.1783414 ,  0.01815591,
         0.31807762, -0.00918309, -0.09381859],
       [-0.21578872, -0.07791004, -0.16708317, -0.20221825,  0.09636881,
         0.40931907,  0.00252378, -0.08247101],
       [-0.17043039, -0.06651443, -0.2808345 , -0.22400388,  0.02745341,
         0.24497288,  0.01849699, -0.09139274],
       [-0.13777862, -0.14969455, -0.29093874, -0.22727577,  0.04746536,
         0.34534663,  0.05286155, -0.06982762],
       [-0.25305834, -0.12228148, -0.29174933, -0.23202732, -0.05679242,
         0.34734094,  0.1235022 , -0.05083877],
       [-0.21197197,  0.02099659, -0.24637482, -0.21175289, -0.06285395,
         0.20926645,  0.01942018, -0.03099547],
       [-0.1698545 , -0.09139664, -0.22446403, -0.2128634 , -0.02190077,
         0.31842622,  0.07057599, -0.10676969],
       [-0.16163059, -0.014627  , -0.155547  , -0.2782094 , -0.00751365,
         0.14861326, -0.05826995, -0.06842288],
       [-0.09252722,  0.10776503, -0.24869367, -0.23773892,  0.01938807,
         0.19973801,  0.07580168, -0.09745877]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.21577726,  0.00338197, -0.18381098, -0.19608524, -0.02514634,
         0.24910752, -0.01553935, -0.03740782],
       [-0.23012649, -0.05194805, -0.16454579, -0.25847688,  0.08885764,
         0.23758069,  0.0026338 , -0.04524858],
       [-0.32760653,  0.09778552, -0.20546713, -0.2353015 , -0.07238293,
         0.25583503,  0.00426953, -0.03551341],
       [-0.2568553 , -0.10603033, -0.24313049, -0.2573294 , -0.00962533,
         0.37104732,  0.02487821, -0.04871459],
       [-0.11548318, -0.05898578, -0.39389253, -0.23945265,  0.08107871,
         0.39767343,  0.1218858 , -0.09353426],
       [-0.11797739, -0.06950405, -0.24780262, -0.18957429, -0.07511083,
         0.17770733,  0.0253089 , -0.07411186],
       [-0.18943003,  0.08011945, -0.26625532, -0.2122089 ,  0.0079684 ,
         0.28342065,  0.03189009, -0.08206347],
       [-0.20219521, -0.0527958 , -0.24435021, -0.29859743,  0.18800285,
         0.23944002,  0.01438907, -0.08822569],
       [-0.23597567,  0.126001  , -0.27201873, -0.17668115, -0.03287065,
         0.29739538,  0.05125042, -0.09658007],
       [-0.12546289, -0.13094398, -0.17287593, -0.25748175,  0.083851  ,
         0.23436044,  0.03412965, -0.06340107],
       [-0.19288051, -0.05035787, -0.2562881 , -0.30912635,  0.11114972,
         0.31927463,  0.07217162, -0.03624037],
       [-0.16898829, -0.0644619 , -0.29004773, -0.2687211 ,  0.06765998,
         0.29255694,  0.01539889, -0.10663063],
       [-0.14911352,  0.07302004, -0.3220878 , -0.17374513, -0.0677757 ,
         0.28899089,  0.12616387, -0.03738556],
       [-0.22965354,  0.10973422, -0.28114292, -0.17741747,  0.0319875 ,
         0.24478343,  0.05303562, -0.12059701],
       [-0.20066158,  0.08819429, -0.27944642, -0.16849937, -0.1722732 ,
         0.18292087,  0.11220808, -0.04408585],
       [-0.15450111, -0.03785488, -0.22882046, -0.20511992, -0.05584022,
         0.28308657,  0.06821394, -0.03491058],
       [-0.20999569,  0.12940614, -0.18934305, -0.21433967, -0.02694865,
         0.24410851,  0.03850611, -0.06790093],
       [-0.13703811, -0.06967093, -0.15229823, -0.2378922 , -0.04606827,
         0.23692647,  0.08675141, -0.04887377],
       [-0.23001821, -0.02394313, -0.27114677, -0.23952924, -0.10911965,
         0.16115014,  0.07119779, -0.0273771 ],
       [-0.13641065, -0.01951773, -0.22191717, -0.28974515, -0.01461056,
         0.19563924,  0.02163705, -0.0471108 ],
       [-0.18805419,  0.07409848, -0.1536932 , -0.23257113,  0.02859762,
         0.32364306, -0.03827205, -0.11871808],
       [-0.24466847, -0.03399046, -0.22127979, -0.2847175 ,  0.02161179,
         0.17660093,  0.04894913, -0.0703251 ],
       [-0.21146601, -0.00482734, -0.2374661 , -0.15784115, -0.0678897 ,
         0.25470525,  0.00793794, -0.05748618],
       [-0.18154763, -0.00229863, -0.15758663, -0.1783414 ,  0.01815593,
         0.31807762, -0.00918311, -0.09381858],
       [-0.21578874, -0.07791005, -0.16708317, -0.20221823,  0.09636882,
         0.4093191 ,  0.00252377, -0.08247101],
       [-0.17043038, -0.06651445, -0.28083444, -0.22400388,  0.02745342,
         0.24497288,  0.01849699, -0.09139276],
       [-0.13777864, -0.14969455, -0.2909387 , -0.22727577,  0.04746537,
         0.34534663,  0.05286155, -0.06982765],
       [-0.25305837, -0.12228152, -0.29174933, -0.23202737, -0.05679242,
         0.34734088,  0.1235022 , -0.05083878],
       [-0.211972  ,  0.0209966 , -0.24637482, -0.2117529 , -0.06285397,
         0.20926647,  0.01942019, -0.03099547],
       [-0.1698545 , -0.09139663, -0.224464  , -0.21286337, -0.0219008 ,
         0.3184262 ,  0.07057601, -0.10676969],
       [-0.16163057, -0.01462699, -0.155547  , -0.27820945, -0.00751364,
         0.1486133 , -0.05826997, -0.06842292],
       [-0.09252722,  0.10776503, -0.24869365, -0.23773898,  0.01938806,
         0.19973801,  0.07580169, -0.09745876]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/99.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 2), dtype=float32, numpy=
array([[ 0.1228679 , -0.27388203],
       [ 0.21812783, -0.08569838],
       [ 0.26036784, -0.11046601]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 2), dtype=float32, numpy=
array([[ 0.12286789, -0.27388212],
       [ 0.21812776, -0.08569836],
       [ 0.26036784, -0.11046603]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/118.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.08958541, -0.16059719,  0.15362494, -0.02669225, -0.19063665,
         0.00675728,  0.14951116,  0.10228121]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.08958542, -0.16059719,  0.15362494, -0.02669227, -0.19063666,
         0.00675728,  0.14951117,  0.10228124]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/119.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.10747116,  0.15639102,  0.16907279,  0.41511703,  0.252662  ,
         0.5546622 ,  0.092063  , -0.08018965]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.10747115,  0.15639101,  0.16907276,  0.41511714,  0.25266206,
         0.55466217,  0.092063  , -0.08018965]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/12.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 1, 1024), dtype=float32, numpy=
array([[[ 0.01756579,  0.00659274,  0.00186985, ..., -0.01553868,
         -0.01059377, -0.00432516]],

       [[ 0.00466992,  0.00947519,  0.01061063, ..., -0.0036322 ,
         -0.01235093,  0.00171018]],

       [[ 0.00972751,  0.00573392, -0.00181822, ..., -0.00656462,
         -0.01348696,  0.00620336]],

       ...,

       [[ 0.00668052,  0.00125953,  0.00310027, ..., -0.00225356,
         -0.0100238 ,  0.00995772]],

       [[ 0.01101284,  0.01138404, -0.0007442 , ..., -0.00840973,
         -0.01972516,  0.00541596]],

       [[ 0.01178711,  0.00870792, -0.00048141, ..., -0.00950717,
         -0.01584747,  0.00207178]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 1, 1024), dtype=float32, numpy=
array([[[ 0.0315174 ,  0.01019823,  0.0035383 , ..., -0.02801969,
         -0.01786049, -0.00869976]],

       [[ 0.00846354,  0.01664056,  0.01934036, ..., -0.00714029,
         -0.02083642,  0.00324366]],

       [[ 0.01679407,  0.00920947, -0.00175786, ..., -0.0123261 ,
         -0.0225441 ,  0.01076275]],

       ...,

       [[ 0.01184449,  0.00213836,  0.00641524, ..., -0.00472939,
         -0.01645189,  0.01734945]],

       [[ 0.01868863,  0.01891465,  0.00073839, ..., -0.01575769,
         -0.03320691,  0.00970366]],

       [[ 0.02026989,  0.0144794 ,  0.00063481, ..., -0.01741282,
         -0.02681945,  0.00358252]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/120.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[ 0.13416739, -0.4769261 ,  0.02518708, -0.11316951, -0.2953167 ,
         0.20107752]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[ 0.13416739, -0.4769261 ,  0.02518704, -0.11316953, -0.29531673,
         0.2010775 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/121.py
2023-04-19 13:47:44.438380: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at cudnn_rnn_ops.cc:1553 : UNKNOWN: CUDNN_STATUS_BAD_PARAM
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): 'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)'
{'res_cpu': [<tf.Tensor: shape=(32, 10, 0), dtype=float32, numpy=array([], shape=(32, 10, 0), dtype=float32)>, <tf.Tensor: shape=(32, 0), dtype=float32, numpy=array([], shape=(32, 0), dtype=float32)>, <tf.Tensor: shape=(32, 0), dtype=float32, numpy=array([], shape=(32, 0), dtype=float32)>], 'err_gpu': 'Error:Exception encountered when calling layer "lstm" (type LSTM).\n\nCUDNN_STATUS_BAD_PARAM\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): \'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)\' [Op:CudnnRNN]\n\nCall arguments received by layer "lstm" (type LSTM):\n  • inputs=tf.Tensor(shape=(32, 10, 8), dtype=float32)\n  • mask=None\n  • training=None\n  • initial_state=None'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/122.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 7), dtype=float32, numpy=
array([[ 0.24678418, -0.19836727, -0.28720614, -0.33768877,  0.13326563,
         0.30982414,  0.0439427 ],
       [ 0.25315842, -0.24941966, -0.3049625 , -0.24926026,  0.11771722,
         0.25855264, -0.03907309],
       [ 0.259684  , -0.22245523, -0.39070272, -0.28959277,  0.20980115,
         0.31274825,  0.05542775]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 7), dtype=float32, numpy=
array([[ 0.24678423, -0.19836727, -0.28720608, -0.33768877,  0.1332656 ,
         0.30982414,  0.04394271],
       [ 0.25315848, -0.24941966, -0.30496252, -0.24926022,  0.1177172 ,
         0.25855258, -0.0390731 ],
       [ 0.25968403, -0.22245523, -0.39070272, -0.28959277,  0.2098012 ,
         0.31274825,  0.05542777]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/123.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 6), dtype=float32, numpy=
array([[-0.38272715,  0.15077375, -0.09884107, -0.05519637,  0.26761147,
         0.00142094],
       [-0.27196398,  0.12143794, -0.09768685, -0.01572689,  0.20871635,
         0.09407589],
       [-0.48493436,  0.0540146 , -0.05085722, -0.11220416,  0.30492124,
         0.09919929]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 6), dtype=float32, numpy=
array([[-0.38272727,  0.15077382, -0.09884109, -0.05519639,  0.26761144,
         0.00142095],
       [-0.27196398,  0.12143792, -0.09768683, -0.0157269 ,  0.20871638,
         0.09407593],
       [-0.48493427,  0.05401463, -0.05085723, -0.11220417,  0.30492118,
         0.09919932]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/124.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 5), dtype=float32, numpy=
array([[-0.11580138, -0.11230285, -0.02891814, -0.19989106, -0.2294592 ]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 5), dtype=float32, numpy=
array([[-0.1158014 , -0.11230284, -0.02891812, -0.19989106, -0.22945917]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/125.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.16407858, -0.0823007 , -0.12564619, -0.06701516,  0.07178688,
        -0.1983981 ,  0.07732301,  0.2277839 ],
       [ 0.24966839, -0.11226714, -0.09208754, -0.20460208, -0.21805565,
        -0.26506695, -0.03770458,  0.05587793],
       [ 0.19716637, -0.16833746, -0.08410922, -0.08776838, -0.10338926,
        -0.14225936, -0.10171136,  0.11314826]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.16407856, -0.08230073, -0.12564617, -0.06701516,  0.07178687,
        -0.19839819,  0.07732305,  0.2277839 ],
       [ 0.24966837, -0.11226718, -0.09208756, -0.20460212, -0.21805568,
        -0.26506698, -0.03770459,  0.05587794],
       [ 0.19716637, -0.16833748, -0.08410925, -0.0877684 , -0.10338929,
        -0.14225934, -0.10171138,  0.11314829]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/126.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.03465885, -0.11695834, -0.22414574, -0.34395453, -0.14879197,
         0.04430995, -0.00071002, -0.11740109],
       [-0.09886842, -0.19624148, -0.35458323, -0.294251  , -0.08861967,
         0.12533571,  0.19420062, -0.2958431 ],
       [-0.06400426, -0.22990836, -0.12448095, -0.2500937 , -0.06742223,
         0.12728333,  0.10100012, -0.17161852],
       [-0.10193635, -0.08510546, -0.28368515, -0.07884845, -0.02432149,
         0.1133019 ,  0.03647   , -0.3425207 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.03465885, -0.11695836, -0.22414576, -0.34395447, -0.14879197,
         0.04430995, -0.00071   , -0.11740111],
       [-0.09886847, -0.19624145, -0.3545832 , -0.294251  , -0.08861968,
         0.1253357 ,  0.19420058, -0.2958432 ],
       [-0.0640043 , -0.22990839, -0.12448096, -0.25009367, -0.06742224,
         0.12728338,  0.10100015, -0.17161849],
       [-0.10193635, -0.08510548, -0.2836851 , -0.07884852, -0.02432152,
         0.11330191,  0.03647001, -0.34252074]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/127.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 32), dtype=float32, numpy=
array([[-0.1394511 , -0.01492662, -0.05250081,  0.00201839,  0.02379207,
         0.14179698,  0.14429434,  0.01900492,  0.04254499,  0.12689821,
         0.07640094,  0.05683491,  0.08798122,  0.15733953, -0.0657315 ,
         0.04438416,  0.11337989, -0.21013518, -0.00440291,  0.03465191,
         0.05138462, -0.00919287, -0.08544011,  0.09741639,  0.05125849,
         0.06553264,  0.0734697 ,  0.01200356,  0.07399633,  0.01014255,
        -0.22740914,  0.06312606],
       [-0.21700443, -0.09008156, -0.06278519, -0.10415169,  0.03392098,
         0.23385945,  0.18895397,  0.03051222,  0.0031994 ,  0.13133489,
         0.08752473,  0.05710049,  0.08134584,  0.19333176, -0.16418159,
         0.00900592,  0.114278  , -0.22616887, -0.08210953, -0.03968415,
         0.07747164, -0.1249441 , -0.15299074,  0.19705792,  0.01246554,
         0.04408366,  0.02343759, -0.07948709,  0.10347009, -0.03125292,
        -0.22487913,  0.09704686],
       [-0.20096004, -0.10737529,  0.02236443, -0.08679986,  0.00422416,
         0.2683634 ,  0.15339258,  0.03800423,  0.04851985,  0.11322046,
         0.03120333,  0.1090048 ,  0.15473905,  0.13888079, -0.16436726,
        -0.00132079,  0.15185724, -0.18056239, -0.0872435 , -0.07663621,
         0.09504829, -0.09840062, -0.18723398,  0.18639345,  0.01980895,
         0.05819149,  0.03859007, -0.07510786,  0.17850251, -0.04393239,
        -0.24140896,  0.15159672],
       [-0.20754544, -0.08618739, -0.09123882, -0.06592952, -0.01813149,
         0.23788048,  0.05035997,  0.03609345,  0.01858124,  0.12791154,
         0.09845009,  0.02986215,  0.11542871,  0.20325321, -0.14461377,
         0.07446362,  0.16173097, -0.1841562 , -0.05550721, -0.02023546,
         0.11553375, -0.08543861, -0.17381026,  0.12436844, -0.01047298,
         0.12028779,  0.10107289, -0.06518407,  0.1399099 ,  0.01819085,
        -0.20630442,  0.08896693]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 32), dtype=float32, numpy=
array([[-0.13945113, -0.01492663, -0.05250081,  0.00201839,  0.02379208,
         0.14179698,  0.14429434,  0.01900493,  0.04254501,  0.1268982 ,
         0.07640097,  0.05683493,  0.08798126,  0.15733951, -0.06573152,
         0.04438417,  0.1133799 , -0.21013518, -0.00440291,  0.03465192,
         0.05138464, -0.00919287, -0.08544014,  0.09741641,  0.05125848,
         0.06553268,  0.07346972,  0.01200357,  0.07399635,  0.01014255,
        -0.22740912,  0.06312609],
       [-0.21700445, -0.09008158, -0.06278522, -0.10415173,  0.03392099,
         0.23385948,  0.18895397,  0.03051224,  0.0031994 ,  0.13133492,
         0.08752474,  0.05710049,  0.08134588,  0.19333176, -0.1641816 ,
         0.00900592,  0.11427802, -0.22616889, -0.08210954, -0.03968417,
         0.07747165, -0.12494412, -0.15299076,  0.19705795,  0.01246554,
         0.04408369,  0.02343761, -0.0794871 ,  0.10347011, -0.03125292,
        -0.22487919,  0.09704687],
       [-0.20096005, -0.1073753 ,  0.02236444, -0.08679987,  0.00422416,
         0.2683634 ,  0.15339261,  0.03800423,  0.04851986,  0.11322048,
         0.03120334,  0.10900483,  0.15473905,  0.13888079, -0.16436726,
        -0.00132079,  0.15185727, -0.18056238, -0.08724353, -0.07663623,
         0.09504831, -0.09840066, -0.18723397,  0.18639345,  0.01980896,
         0.05819151,  0.03859008, -0.07510788,  0.17850254, -0.04393238,
        -0.241409  ,  0.15159672],
       [-0.20754544, -0.0861874 , -0.09123884, -0.06592955, -0.01813149,
         0.23788048,  0.05035999,  0.03609347,  0.01858125,  0.12791154,
         0.09845012,  0.02986215,  0.11542874,  0.20325321, -0.1446138 ,
         0.07446364,  0.16173096, -0.1841562 , -0.05550723, -0.02023546,
         0.11553374, -0.08543863, -0.17381023,  0.12436846, -0.01047299,
         0.12028781,  0.10107295, -0.0651841 ,  0.13990991,  0.01819086,
        -0.20630443,  0.08896696]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/128.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 7), dtype=float32, numpy=
array([[ 0.17783885, -0.05306958,  0.12765321,  0.24837086,  0.09366003,
         0.1821939 , -0.03501993],
       [ 0.19888932, -0.04085848,  0.08318678,  0.2267709 , -0.00061819,
         0.28383997, -0.21250573],
       [ 0.19269606, -0.06687413,  0.07630787,  0.2254068 , -0.15974785,
         0.294774  , -0.05861251],
       [ 0.10153612, -0.05526461,  0.12021688,  0.23988886, -0.03514017,
         0.38600776, -0.24668248],
       [ 0.19593175, -0.09017102,  0.14295353,  0.20003165, -0.00358202,
         0.17241998, -0.13228539],
       [ 0.07521314, -0.02943575,  0.1046604 ,  0.28206733,  0.00746121,
         0.33946377, -0.02504439],
       [ 0.20389293, -0.06734124,  0.13511789,  0.23866658, -0.12469552,
         0.2688353 , -0.01256648],
       [ 0.24651009, -0.04734736,  0.09369478,  0.17349023, -0.16450311,
         0.24967028, -0.11387182],
       [ 0.20583162, -0.04126261,  0.1423706 ,  0.18354692, -0.05721171,
         0.29782715, -0.08690939],
       [ 0.15556097, -0.09003963,  0.09448031,  0.2979963 , -0.00655997,
         0.36365154, -0.28221536],
       [ 0.25502434, -0.07729853,  0.08459613,  0.25052372, -0.05604192,
         0.2814883 , -0.1878896 ],
       [ 0.19243602, -0.07446299,  0.05271779,  0.312668  , -0.11372838,
         0.3529763 , -0.13160743],
       [ 0.2329122 , -0.0422739 ,  0.10510428,  0.18550877,  0.01689541,
         0.31163782, -0.07350653],
       [ 0.15572773, -0.09192502,  0.13728972,  0.24872093, -0.07432508,
         0.29403785, -0.11407785],
       [ 0.18202093, -0.0707342 ,  0.12192433,  0.27089038, -0.02274643,
         0.30908313, -0.14194363],
       [ 0.23092219, -0.01676609,  0.13164178,  0.22765595,  0.12312138,
         0.3085847 , -0.18528159],
       [ 0.16446964, -0.02947406,  0.07461213,  0.29630548,  0.03382381,
         0.27060014, -0.07213163],
       [ 0.15442878, -0.07867035,  0.10289855,  0.20668957, -0.07838744,
         0.34148118, -0.16582562],
       [ 0.12360899, -0.03802099,  0.04049067,  0.25182635, -0.1083369 ,
         0.29122344, -0.09843396],
       [ 0.14373939,  0.03845491,  0.11767893,  0.1777922 , -0.00573773,
         0.21468659, -0.16555016],
       [ 0.17506784, -0.07700102,  0.19484493,  0.295109  ,  0.00335355,
         0.34191087, -0.10248542],
       [ 0.23650727, -0.08816702,  0.12332948,  0.28361645,  0.07586659,
         0.35367757, -0.15423258],
       [ 0.22357178, -0.04211143,  0.11966312,  0.13541327, -0.1495266 ,
         0.33767614, -0.18702745],
       [ 0.21970429, -0.03819074,  0.12060007,  0.20024088, -0.01593856,
         0.39718792, -0.14320187],
       [ 0.24031213, -0.07480907,  0.08353185,  0.19410099, -0.01870679,
         0.38688204, -0.12056202],
       [ 0.18148078, -0.09240786,  0.09688551,  0.34236935,  0.10643839,
         0.23278381, -0.04152247],
       [ 0.21119644, -0.10166211,  0.03971562,  0.25630128, -0.01937068,
         0.31207836, -0.11519361],
       [ 0.21408214, -0.06909731,  0.13308902,  0.20743887,  0.08169264,
         0.32978585, -0.20236921],
       [ 0.29451108, -0.04154846,  0.05892069,  0.22494651, -0.07860023,
         0.3638883 , -0.07799308],
       [ 0.25135487, -0.02496829,  0.00589628,  0.29034337,  0.03711564,
         0.31555712, -0.12634708],
       [ 0.07935894, -0.02542377,  0.15379937,  0.1988772 ,  0.04503972,
         0.34221298, -0.03507201],
       [ 0.18735714, -0.01547135,  0.0688621 ,  0.21018143, -0.1478757 ,
         0.2774843 , -0.2586883 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 7), dtype=float32, numpy=
array([[ 0.17783888, -0.0530696 ,  0.12765323,  0.24837086,  0.09366005,
         0.18219392, -0.03501994],
       [ 0.19888932, -0.04085846,  0.08318681,  0.22677088, -0.00061818,
         0.28383997, -0.21250579],
       [ 0.19269606, -0.06687417,  0.0763079 ,  0.22540675, -0.15974784,
         0.29477394, -0.05861251],
       [ 0.10153613, -0.05526463,  0.12021688,  0.23988889, -0.03514017,
         0.38600776, -0.24668254],
       [ 0.19593176, -0.09017104,  0.14295353,  0.20003167, -0.00358203,
         0.17241997, -0.13228539],
       [ 0.07521316, -0.02943575,  0.1046604 ,  0.28206736,  0.00746122,
         0.33946374, -0.02504439],
       [ 0.20389299, -0.06734125,  0.13511787,  0.23866661, -0.12469552,
         0.2688353 , -0.01256649],
       [ 0.24651012, -0.04734737,  0.0936948 ,  0.17349024, -0.1645031 ,
         0.24967025, -0.11387181],
       [ 0.20583165, -0.04126262,  0.14237061,  0.18354695, -0.05721172,
         0.29782704, -0.08690939],
       [ 0.15556094, -0.09003963,  0.09448033,  0.29799634, -0.00655998,
         0.36365154, -0.2822154 ],
       [ 0.2550244 , -0.07729855,  0.08459616,  0.25052366, -0.05604193,
         0.2814884 , -0.18788958],
       [ 0.19243598, -0.07446299,  0.05271782,  0.31266797, -0.11372838,
         0.3529763 , -0.13160746],
       [ 0.23291224, -0.04227392,  0.10510425,  0.1855088 ,  0.01689542,
         0.31163782, -0.07350656],
       [ 0.15572773, -0.09192503,  0.13728972,  0.24872088, -0.0743251 ,
         0.2940378 , -0.11407784],
       [ 0.18202095, -0.07073423,  0.12192434,  0.2708904 , -0.02274645,
         0.30908316, -0.14194365],
       [ 0.23092222, -0.0167661 ,  0.13164176,  0.22765599,  0.1231214 ,
         0.3085847 , -0.1852816 ],
       [ 0.16446964, -0.02947406,  0.07461215,  0.29630548,  0.03382381,
         0.27060014, -0.07213164],
       [ 0.15442877, -0.07867034,  0.10289858,  0.20668955, -0.07838745,
         0.34148124, -0.16582562],
       [ 0.12360901, -0.038021  ,  0.04049068,  0.25182635, -0.10833693,
         0.29122347, -0.09843399],
       [ 0.1437394 ,  0.03845492,  0.1176789 ,  0.17779219, -0.00573773,
         0.21468659, -0.16555013],
       [ 0.17506784, -0.07700101,  0.19484495,  0.295109  ,  0.00335354,
         0.3419109 , -0.10248545],
       [ 0.2365073 , -0.08816702,  0.12332949,  0.28361648,  0.07586661,
         0.3536775 , -0.15423258],
       [ 0.2235718 , -0.04211144,  0.11966312,  0.13541329, -0.14952661,
         0.33767614, -0.18702744],
       [ 0.21970429, -0.03819075,  0.12060006,  0.20024088, -0.01593855,
         0.3971879 , -0.14320186],
       [ 0.24031208, -0.07480904,  0.08353185,  0.19410099, -0.0187068 ,
         0.38688195, -0.12056202],
       [ 0.18148078, -0.09240786,  0.0968855 ,  0.34236935,  0.10643841,
         0.23278384, -0.04152247],
       [ 0.2111965 , -0.10166211,  0.03971562,  0.25630128, -0.01937069,
         0.31207836, -0.11519363],
       [ 0.21408218, -0.06909733,  0.133089  ,  0.20743893,  0.08169267,
         0.3297858 , -0.20236924],
       [ 0.2945111 , -0.04154848,  0.0589207 ,  0.22494651, -0.07860023,
         0.36388835, -0.07799309],
       [ 0.25135487, -0.02496829,  0.00589628,  0.29034337,  0.03711566,
         0.31555718, -0.12634708],
       [ 0.07935896, -0.02542378,  0.15379936,  0.19887719,  0.04503974,
         0.3422131 , -0.03507202],
       [ 0.18735714, -0.01547136,  0.0688621 ,  0.21018142, -0.1478757 ,
         0.27748433, -0.25868827]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/129.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.02363915, -0.05411644,  0.17966473, -0.17450419,  0.01212507,
        -0.15887311,  0.10116997,  0.15162443]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.02363913, -0.05411644,  0.17966475, -0.17450416,  0.01212507,
        -0.15887311,  0.10117   ,  0.1516244 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/13.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 4), dtype=float32, numpy=
array([[ 0.10120095, -0.3245838 ,  0.32269168,  0.22924484],
       [ 0.21009177, -0.18000044,  0.2416584 ,  0.18032636],
       [ 0.1797038 , -0.19535854,  0.26924995,  0.13357021],
       [ 0.12275134, -0.3843474 ,  0.3851649 ,  0.1257859 ],
       [ 0.22548398, -0.12517664,  0.35492066,  0.11923617],
       [ 0.23534597, -0.24359706,  0.25080407,  0.13394862],
       [ 0.26702222, -0.1667064 ,  0.32277972,  0.20060275],
       [ 0.13182323, -0.2938848 ,  0.22969991,  0.16967008],
       [ 0.18450367, -0.20831402,  0.28879517,  0.1592248 ],
       [ 0.3130336 , -0.19850352,  0.08942595,  0.24054532],
       [ 0.22362423, -0.19639032,  0.36703247,  0.1802596 ],
       [ 0.24379934, -0.19781023,  0.21892282,  0.16846643],
       [ 0.29219538, -0.199169  ,  0.18107812,  0.20302053],
       [ 0.2365642 , -0.09738982,  0.13168378,  0.21856081],
       [ 0.18219377, -0.24350786,  0.34864986,  0.09397548],
       [ 0.24103564, -0.16665156,  0.30979255,  0.11898911],
       [ 0.21268567, -0.24018876,  0.21994437,  0.07777028],
       [ 0.20620233, -0.14799352,  0.26701105,  0.21461602],
       [ 0.19873825, -0.18787406,  0.30975172,  0.2385064 ],
       [ 0.2533735 , -0.09451757,  0.28058356,  0.089963  ],
       [ 0.12292971, -0.26807442,  0.26737583,  0.11651918],
       [ 0.19965707, -0.04777874,  0.20272641,  0.19660106],
       [ 0.14983985, -0.1768596 ,  0.25529334,  0.17479992],
       [ 0.16807124, -0.09804316,  0.25751427,  0.07494566],
       [ 0.1657992 , -0.1969089 ,  0.24876828,  0.14174023],
       [ 0.17035778, -0.21554995,  0.33479622,  0.14416705],
       [ 0.20861313, -0.2479372 ,  0.2753399 ,  0.20139442],
       [ 0.27374795, -0.18171965,  0.3226091 ,  0.17813057],
       [ 0.24465066, -0.20159258,  0.2771789 ,  0.06561308],
       [ 0.21779957, -0.13655539,  0.32502994,  0.09666792],
       [ 0.12023551, -0.27225372,  0.2786882 ,  0.19422044],
       [ 0.2239457 , -0.2681551 ,  0.2801165 ,  0.14843033]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 4), dtype=float32, numpy=
array([[ 0.10120095, -0.3245838 ,  0.32269168,  0.22924481],
       [ 0.21009177, -0.1800005 ,  0.24165843,  0.18032636],
       [ 0.1797038 , -0.19535854,  0.26924992,  0.13357018],
       [ 0.12275137, -0.3843474 ,  0.38516483,  0.12578586],
       [ 0.22548395, -0.12517665,  0.35492066,  0.11923616],
       [ 0.23534599, -0.2435971 ,  0.25080404,  0.13394858],
       [ 0.26702225, -0.16670638,  0.32277972,  0.20060275],
       [ 0.13182321, -0.29388484,  0.2296999 ,  0.16967008],
       [ 0.1845037 , -0.20831408,  0.28879517,  0.15922482],
       [ 0.31303358, -0.19850357,  0.08942597,  0.24054527],
       [ 0.22362424, -0.19639033,  0.36703247,  0.18025957],
       [ 0.24379934, -0.19781026,  0.21892287,  0.1684664 ],
       [ 0.29219538, -0.199169  ,  0.18107808,  0.2030205 ],
       [ 0.2365642 , -0.09738984,  0.1316838 ,  0.21856083],
       [ 0.18219377, -0.24350788,  0.3486498 ,  0.09397548],
       [ 0.24103567, -0.16665159,  0.30979258,  0.11898911],
       [ 0.21268566, -0.24018876,  0.21994442,  0.07777029],
       [ 0.20620233, -0.14799352,  0.2670111 ,  0.214616  ],
       [ 0.19873826, -0.18787403,  0.3097517 ,  0.23850645],
       [ 0.2533735 , -0.09451757,  0.28058356,  0.089963  ],
       [ 0.1229297 , -0.26807448,  0.26737577,  0.11651918],
       [ 0.1996571 , -0.04777876,  0.2027264 ,  0.1966011 ],
       [ 0.14983986, -0.1768596 ,  0.25529334,  0.17479993],
       [ 0.16807127, -0.09804316,  0.25751427,  0.07494567],
       [ 0.16579922, -0.19690889,  0.24876828,  0.14174025],
       [ 0.17035778, -0.21554998,  0.33479622,  0.14416704],
       [ 0.20861317, -0.24793717,  0.2753399 ,  0.20139445],
       [ 0.2737479 , -0.18171966,  0.3226091 ,  0.17813057],
       [ 0.24465063, -0.20159258,  0.2771789 ,  0.0656131 ],
       [ 0.21779963, -0.1365554 ,  0.32502994,  0.09666789],
       [ 0.12023549, -0.27225363,  0.27868825,  0.19422044],
       [ 0.22394565, -0.26815507,  0.28011653,  0.14843027]],
      dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/130.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(32, 127), dtype=float32, numpy=
array([[-0.00751405, -0.06016007, -0.02720976, ..., -0.05766921,
        -0.04886669,  0.02700573],
       [-0.00592936, -0.05161563, -0.02870007, ..., -0.04280028,
        -0.04859529,  0.01891307],
       [ 0.00423686, -0.04427707, -0.01518746, ..., -0.02830365,
        -0.03511027,  0.01317879],
       ...,
       [-0.02457574, -0.04454734, -0.00626514, ..., -0.03347071,
        -0.0481866 ,  0.02157469],
       [ 0.01102837, -0.02011033, -0.02259164, ..., -0.02777112,
        -0.00404901,  0.00272632],
       [ 0.00586831, -0.02496609, -0.02150612, ..., -0.01427161,
        -0.02484869,  0.00067051]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(32, 127), dtype=float32, numpy=
array([[-0.01523146, -0.09867092, -0.05157095, ..., -0.09796277,
        -0.0842372 ,  0.04625519],
       [-0.01244321, -0.08514082, -0.0538722 , ..., -0.0722068 ,
        -0.08328669,  0.0321576 ],
       [ 0.00726357, -0.07260868, -0.02701296, ..., -0.04967844,
        -0.06099575,  0.02035696],
       ...,
       [-0.0456307 , -0.07401472, -0.01590324, ..., -0.05481753,
        -0.0816423 ,  0.03652117],
       [ 0.01911616, -0.03227884, -0.03950749, ..., -0.05028687,
        -0.00804067,  0.00606444],
       [ 0.00955873, -0.04137998, -0.03830749, ..., -0.02504121,
        -0.04256036,  0.00044735]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/14.py
WARNING:tensorflow:`implementation=0` has been deprecated, and now defaults to `implementation=1`.Please update your layer call.
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[ 0.09416001, -0.09964929]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[ 0.10127157, -0.1077057 ]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/15.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.3109137 , -0.00773122,  0.10451096, -0.08172495, -0.10389931,
         0.01366081, -0.2960278 , -0.24305703],
       [ 0.2804098 , -0.07075276,  0.02446897, -0.19232777, -0.20872949,
         0.17844476, -0.28426513, -0.25189573],
       [ 0.2045731 , -0.07956601,  0.09625161, -0.06669531, -0.12577446,
         0.03986926, -0.27562153, -0.10890054]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.3109137 , -0.0077312 ,  0.10451099, -0.08172495, -0.10389932,
         0.01366081, -0.2960278 , -0.24305704],
       [ 0.2804098 , -0.07075277,  0.02446899, -0.19232778, -0.20872949,
         0.17844474, -0.28426513, -0.25189573],
       [ 0.20457315, -0.07956599,  0.09625165, -0.06669532, -0.12577446,
         0.03986925, -0.27562156, -0.10890058]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/16.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.04546563, -0.04794401,  0.31442288, -0.38082233, -0.17366123,
        -0.31119463, -0.01055991,  0.25335667]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.04546566, -0.04794403,  0.31442285, -0.38082233, -0.17366125,
        -0.3111946 , -0.01055993,  0.2533567 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/17.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[ 0.3139459 ,  0.154779  ,  0.00280334,  0.38778389, -0.12901212,
        -0.26963815,  0.3306469 , -0.003434  ],
       [ 0.41021115,  0.18527332,  0.03659772,  0.40152705, -0.12224369,
        -0.3570043 ,  0.2557218 ,  0.07894189],
       [ 0.28396603,  0.1676828 ,  0.07513809,  0.38079533, -0.05869054,
        -0.14228716,  0.3163083 , -0.10734069],
       [ 0.31049576,  0.19986081, -0.00235281,  0.39609677, -0.08212167,
        -0.13152678,  0.30679083, -0.07685085]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[ 0.31394592,  0.15477899,  0.00280334,  0.38778377, -0.12901212,
        -0.26963815,  0.33064687, -0.003434  ],
       [ 0.41021115,  0.18527335,  0.03659772,  0.40152705, -0.12224368,
        -0.3570043 ,  0.25572178,  0.0789419 ],
       [ 0.28396603,  0.1676828 ,  0.07513811,  0.3807953 , -0.05869054,
        -0.14228718,  0.31630832, -0.10734072],
       [ 0.31049576,  0.19986083, -0.00235282,  0.39609677, -0.08212169,
        -0.13152675,  0.30679086, -0.07685087]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/18.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.17291895, -0.34150293, -0.17981082, -0.12947959,  0.22336635,
        -0.3817018 , -0.17073768,  0.22593457],
       [-0.26688018, -0.20794602, -0.18419589, -0.06666331,  0.27891216,
        -0.3709547 , -0.09137109,  0.09301798],
       [-0.2503836 , -0.16324486, -0.21880195, -0.05874405,  0.11481043,
        -0.43261626, -0.21316141,  0.00196936],
       [-0.25269035, -0.2613044 , -0.18661843, -0.1150316 ,  0.13223897,
        -0.3930104 ,  0.02468249,  0.13045639],
       [-0.16309583, -0.24375781, -0.12911917,  0.08728667,  0.0465785 ,
        -0.26855814, -0.04417486, -0.05045627],
       [-0.32720912, -0.09335351, -0.21272904, -0.01141928,  0.16211726,
        -0.35469636, -0.11456399, -0.03928122],
       [-0.23083015, -0.35492477, -0.16028078, -0.15143241,  0.16390586,
        -0.37725133, -0.11211895,  0.21795475],
       [-0.22668913, -0.23650941, -0.15391935, -0.13601744,  0.17282818,
        -0.38767773, -0.08152391,  0.14620028],
       [-0.21332592, -0.240105  , -0.12011363, -0.12166136,  0.07080034,
        -0.44901383, -0.01788618,  0.13825208],
       [-0.21979271, -0.22456785, -0.18905449, -0.10306539,  0.09681006,
        -0.3694566 ,  0.0394446 ,  0.1287247 ],
       [-0.26104125, -0.1764951 , -0.14023684, -0.03856505,  0.07241436,
        -0.3734308 , -0.20201358,  0.02254001],
       [-0.31011027, -0.1738077 , -0.14411579, -0.08484409,  0.157056  ,
        -0.36537144, -0.19508371,  0.0492975 ],
       [-0.2302577 , -0.25214863, -0.25029936, -0.18825191,  0.09453933,
        -0.391743  , -0.02787396,  0.23682675],
       [-0.2665184 , -0.24706376, -0.15208235, -0.07473149,  0.09617467,
        -0.42882952, -0.16367853,  0.07350463],
       [-0.35661018, -0.20771794, -0.17374302, -0.0023151 ,  0.22403193,
        -0.36185727, -0.23750854,  0.01175102],
       [-0.31177014, -0.19520414, -0.24022694, -0.0869111 ,  0.17881326,
        -0.34920123, -0.13064718,  0.10805072],
       [-0.17472224, -0.24996275, -0.15386327, -0.03707827,  0.0809608 ,
        -0.30774865,  0.02045564,  0.08766375],
       [-0.23254883, -0.27411082, -0.1877811 , -0.13522536,  0.10778094,
        -0.36946103, -0.11775047,  0.12632155],
       [-0.30985346, -0.21087936, -0.20800355, -0.1889861 ,  0.1920994 ,
        -0.44687566, -0.10518918,  0.12164263],
       [-0.2534239 , -0.22323865, -0.19575599, -0.0988066 ,  0.13026693,
        -0.43878874, -0.03061259,  0.14907111],
       [-0.2891519 , -0.1785077 , -0.23658618, -0.13010584,  0.11027157,
        -0.40249145, -0.14926636,  0.08194338],
       [-0.2562465 , -0.19510682, -0.15596889, -0.04853135,  0.11501711,
        -0.3767548 ,  0.02568747,  0.03671293],
       [-0.30855343, -0.19455022, -0.17914996, -0.02032979,  0.15619689,
        -0.38791373, -0.16366096, -0.00539694],
       [-0.25769424, -0.24659744, -0.19483028, -0.14050004,  0.2910032 ,
        -0.37656054, -0.06348156,  0.11700262],
       [-0.32550877, -0.19766575, -0.20581506, -0.08127028,  0.20207432,
        -0.45224947, -0.17850345,  0.08193106],
       [-0.12953995, -0.21669333, -0.12875442, -0.06554633,  0.07776326,
        -0.37945095, -0.10691063,  0.15298915],
       [-0.24167725, -0.3145081 , -0.19511168, -0.12656406,  0.12752844,
        -0.35727945, -0.04560601,  0.2014693 ],
       [-0.32107413, -0.17681295, -0.21101008, -0.01900176,  0.11361839,
        -0.36617494, -0.10959964,  0.03742097],
       [-0.18888183, -0.27297527, -0.1765278 , -0.13703227,  0.1452493 ,
        -0.4374591 , -0.1263157 ,  0.15973634],
       [-0.22031718, -0.30115503, -0.17063294, -0.08096131,  0.10440113,
        -0.37036908, -0.11702564,  0.15124977],
       [-0.19640395, -0.2542484 , -0.14861733, -0.09327614,  0.08767821,
        -0.366998  , -0.0061724 ,  0.14801063],
       [-0.20588675, -0.30108222, -0.21430574, -0.14370653,  0.16546047,
        -0.39989087,  0.08777562,  0.18219659]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(32, 8), dtype=float32, numpy=
array([[-0.17291896, -0.3415029 , -0.17981085, -0.1294796 ,  0.22336638,
        -0.38170177, -0.17073767,  0.22593455],
       [-0.2668801 , -0.20794603, -0.1841959 , -0.06666332,  0.27891213,
        -0.3709546 , -0.09137109,  0.09301801],
       [-0.25038353, -0.16324486, -0.21880198, -0.05874409,  0.11481044,
        -0.4326163 , -0.21316145,  0.00196938],
       [-0.25269037, -0.2613044 , -0.18661839, -0.1150316 ,  0.13223898,
        -0.39301038,  0.02468248,  0.1304564 ],
       [-0.16309586, -0.24375778, -0.12911917,  0.0872867 ,  0.04657852,
        -0.26855814, -0.04417486, -0.05045629],
       [-0.32720914, -0.0933535 , -0.21272902, -0.01141929,  0.16211727,
        -0.35469633, -0.114564  , -0.03928123],
       [-0.23083015, -0.35492486, -0.16028075, -0.15143241,  0.16390584,
        -0.37725136, -0.112119  ,  0.21795478],
       [-0.22668913, -0.2365094 , -0.15391935, -0.13601746,  0.17282817,
        -0.3876777 , -0.0815239 ,  0.1462003 ],
       [-0.21332592, -0.24010505, -0.12011363, -0.12166137,  0.07080038,
        -0.44901377, -0.01788618,  0.13825211],
       [-0.21979271, -0.22456786, -0.18905449, -0.10306541,  0.09681007,
        -0.36945656,  0.03944463,  0.12872466],
       [-0.26104125, -0.17649512, -0.14023682, -0.03856506,  0.07241438,
        -0.3734308 , -0.20201363,  0.02254001],
       [-0.3101102 , -0.17380774, -0.14411582, -0.0848441 ,  0.15705602,
        -0.36537138, -0.19508371,  0.0492975 ],
       [-0.2302577 , -0.25214863, -0.25029933, -0.1882519 ,  0.09453937,
        -0.39174297, -0.02787395,  0.23682675],
       [-0.26651847, -0.24706379, -0.15208237, -0.07473151,  0.09617469,
        -0.42882946, -0.16367856,  0.07350464],
       [-0.35661012, -0.20771797, -0.17374304, -0.00231511,  0.22403193,
        -0.36185727, -0.23750852,  0.01175102],
       [-0.31177014, -0.19520415, -0.24022703, -0.08691113,  0.17881323,
        -0.34920117, -0.13064715,  0.10805074],
       [-0.1747223 , -0.2499627 , -0.15386325, -0.03707827,  0.0809608 ,
        -0.30774862,  0.02045564,  0.08766377],
       [-0.23254883, -0.27411076, -0.18778114, -0.13522534,  0.10778096,
        -0.36946106, -0.11775045,  0.12632155],
       [-0.30985337, -0.21087937, -0.20800352, -0.18898606,  0.19209939,
        -0.44687566, -0.1051892 ,  0.12164262],
       [-0.25342384, -0.22323865, -0.19575599, -0.09880659,  0.13026695,
        -0.4387887 , -0.03061259,  0.1490711 ],
       [-0.28915182, -0.17850775, -0.23658615, -0.13010582,  0.11027157,
        -0.40249148, -0.14926638,  0.08194341],
       [-0.25624654, -0.19510686, -0.15596892, -0.04853135,  0.11501713,
        -0.3767548 ,  0.02568749,  0.03671293],
       [-0.30855346, -0.1945502 , -0.17914991, -0.02032978,  0.15619692,
        -0.3879137 , -0.163661  , -0.00539694],
       [-0.2576942 , -0.24659745, -0.19483031, -0.14050007,  0.29100323,
        -0.3765605 , -0.06348156,  0.11700261],
       [-0.32550877, -0.19766578, -0.20581503, -0.08127029,  0.20207432,
        -0.4522495 , -0.17850344,  0.08193106],
       [-0.12953995, -0.21669334, -0.12875439, -0.06554634,  0.07776328,
        -0.37945095, -0.10691065,  0.15298916],
       [-0.24167727, -0.3145081 , -0.19511163, -0.12656409,  0.12752846,
        -0.35727948, -0.04560602,  0.20146932],
       [-0.3210742 , -0.17681295, -0.21101008, -0.01900176,  0.1136184 ,
        -0.3661749 , -0.10959964,  0.037421  ],
       [-0.18888187, -0.2729752 , -0.1765278 , -0.13703227,  0.14524929,
        -0.43745908, -0.12631567,  0.15973632],
       [-0.22031724, -0.301155  , -0.17063293, -0.08096133,  0.10440116,
        -0.37036908, -0.11702568,  0.1512498 ],
       [-0.19640395, -0.2542484 , -0.14861733, -0.09327615,  0.08767822,
        -0.36699793, -0.00617239,  0.14801067],
       [-0.20588675, -0.30108225, -0.21430577, -0.14370653,  0.1654605 ,
        -0.39989084,  0.08777563,  0.18219659]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/19.py
WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(2, 3, 32), dtype=float32, numpy=
array([[[-7.73796737e-02, -7.67160803e-02,  6.92772791e-02,
         -5.76124080e-02,  3.44702750e-02, -1.31722599e-01,
          4.23965342e-02, -1.43870682e-01, -1.00198433e-01,
          7.05767572e-02,  1.53299287e-01, -1.25542030e-01,
          1.99611560e-01, -1.22212909e-01, -3.18667589e-04,
          5.61094396e-02, -9.67999548e-02, -2.01355144e-01,
         -2.47041229e-02, -1.80335995e-02,  7.03454018e-02,
         -9.14064571e-02, -1.74932703e-02, -2.75491066e-02,
         -8.37947056e-02,  2.07053088e-02,  5.35576418e-02,
         -7.93712437e-02,  1.89716443e-01, -7.99110606e-02,
          5.16196480e-03, -5.87131120e-02],
        [-7.21614957e-02, -1.39892131e-01,  1.19137719e-01,
         -2.18139421e-02,  6.07302338e-02, -1.40993223e-01,
          4.90718037e-02, -1.20047182e-01, -1.97475865e-01,
         -2.71235742e-02,  2.34004512e-01, -1.86148971e-01,
          2.31292099e-01, -1.19864590e-01, -5.61790578e-02,
          9.98286903e-02, -2.02584684e-01, -3.09084862e-01,
         -3.09949368e-02, -1.75832674e-01,  1.39152989e-01,
          9.40256100e-03, -4.55965512e-02, -6.13861904e-03,
         -3.59163620e-02, -1.41647667e-01, -2.81940438e-02,
         -1.42752841e-01,  1.94526568e-01, -2.33814910e-01,
         -3.54936644e-02, -1.06597826e-01],
        [-1.49464786e-01, -1.59531564e-01,  9.23016667e-02,
         -5.31540699e-02,  1.72096208e-01, -2.00547829e-01,
          6.10776618e-02, -1.28238887e-01, -1.69596821e-01,
         -5.01700453e-02,  2.46160910e-01, -1.86461419e-01,
          2.63049424e-01, -1.10514238e-01, -9.52650327e-03,
          1.14462323e-01, -2.92023331e-01, -2.89989322e-01,
          1.36864394e-01, -1.98744997e-01,  1.49244979e-01,
          7.65715688e-02, -7.62989968e-02,  3.55999321e-02,
         -6.59584403e-02, -5.57460962e-03, -2.79128421e-02,
         -3.32261622e-01,  2.26215765e-01, -3.46805125e-01,
          6.59312159e-02, -8.05992913e-03]],

       [[-1.11789815e-01, -8.77744406e-02,  7.66976476e-02,
         -7.12160543e-02,  1.04821548e-01, -9.25406720e-03,
          4.86473739e-02, -1.27977759e-01, -5.44202030e-02,
          8.59754086e-02,  1.00481190e-01, -1.26430482e-01,
          1.50691777e-01, -6.00097813e-02, -3.77353169e-02,
          4.81149480e-02, -1.04150109e-01, -2.01318577e-01,
          7.08890706e-02, -1.33188218e-01,  7.99627230e-02,
         -2.60643382e-02,  1.28666032e-02,  8.70435983e-02,
         -1.58937890e-02, -1.09017633e-01,  1.15611926e-01,
         -2.00422287e-01,  1.13823690e-01, -6.05000556e-02,
          6.89698905e-02, -7.74738118e-02],
        [-2.52079934e-01, -3.00178587e-01,  8.59076679e-02,
         -9.48749781e-02,  4.66985516e-02, -9.31277648e-02,
          1.58146948e-01, -1.10786848e-01, -1.47265092e-01,
          2.16137320e-01,  1.40744731e-01, -2.25346729e-01,
          1.88482717e-01, -2.02404678e-01, -4.13869740e-03,
          4.20043543e-02, -1.83340311e-01, -2.38719568e-01,
          1.99836895e-01, -1.63313180e-01,  1.34752050e-01,
         -1.04745336e-01, -6.97510988e-02,  8.63112509e-02,
         -2.23021209e-02, -1.76748484e-01,  1.48016393e-01,
         -4.07987267e-01,  3.27738047e-01, -2.25793228e-01,
          1.77198779e-02, -9.07086581e-02],
        [-2.17170328e-01, -2.37332135e-01,  1.59791812e-01,
         -8.59643146e-02,  5.81752416e-03, -8.65412429e-02,
          2.24220186e-01, -1.09898478e-01, -1.87269300e-01,
          1.24132745e-01,  2.05925003e-01, -2.50149935e-01,
          2.72317201e-01, -1.68139458e-01, -3.44989598e-02,
          6.19151853e-02, -2.66262680e-01, -2.55559444e-01,
          3.01109225e-01, -1.37095600e-01,  1.90235168e-01,
          2.85239462e-02, -4.16252986e-02,  5.00207469e-02,
         -5.34923226e-02, -1.96801379e-01,  2.07397327e-01,
         -4.49765354e-01,  4.02105093e-01, -1.76518679e-01,
          2.68899705e-02, -1.78392604e-02]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(2, 3, 32), dtype=float32, numpy=
array([[[-2.25680009e-01, -1.66987166e-01,  1.46527529e-01,
         -8.44003111e-02,  7.11473972e-02, -2.19151109e-01,
          7.12107122e-02, -2.27463290e-01, -2.19698042e-01,
          7.75498822e-02,  3.51452798e-01, -2.03932345e-01,
          3.09395075e-01, -1.73057020e-01,  5.16145350e-03,
          1.12336613e-01, -2.10153565e-01, -2.92354107e-01,
          5.47589473e-02, -1.61872298e-01,  1.89709306e-01,
          6.15167292e-03, -8.03152472e-02, -2.11345982e-02,
         -1.43847525e-01,  2.86747403e-02,  6.46178499e-02,
         -2.43307397e-01,  3.12055856e-01, -2.09218919e-01,
          3.73135507e-02, -8.30055326e-02],
        [-1.50601238e-01, -1.80975065e-01,  1.60082743e-01,
         -3.54365222e-02,  6.28015473e-02, -1.82619646e-01,
          6.82600886e-02, -1.57227322e-01, -2.73781925e-01,
         -1.50239198e-02,  3.23839098e-01, -2.39259973e-01,
          2.91964561e-01, -1.40491486e-01, -5.48415743e-02,
          1.39651909e-01, -3.05015981e-01, -3.42285514e-01,
          1.37712117e-02, -2.28277683e-01,  1.97451636e-01,
          7.67667145e-02, -9.94504690e-02, -1.07999817e-02,
         -4.94951718e-02, -1.38625905e-01, -7.25140842e-03,
         -2.14934990e-01,  2.47367635e-01, -3.14083159e-01,
         -1.39519302e-02, -1.20422386e-01],
        [-1.95802435e-01, -1.81311652e-01,  1.16379224e-01,
         -6.27257153e-02,  1.69476300e-01, -2.10224018e-01,
          6.96226060e-02, -1.45316571e-01, -1.95742324e-01,
         -4.15397398e-02,  3.04850399e-01, -2.13935867e-01,
          2.84209818e-01, -1.14659034e-01, -6.53732149e-03,
          1.36060685e-01, -3.53119552e-01, -3.01246047e-01,
          1.61055237e-01, -2.35722050e-01,  1.90977320e-01,
          1.11641660e-01, -1.08077168e-01,  2.93180998e-02,
         -7.46244267e-02, -4.76000411e-03, -8.26577656e-03,
         -3.58231664e-01,  2.40840778e-01, -3.87545794e-01,
          7.20399693e-02, -2.16965862e-02]],

       [[-2.31477916e-01, -1.56839460e-01,  1.86955586e-01,
         -1.20200157e-01,  1.12456582e-01, -2.47946531e-02,
          1.66435063e-01, -1.94649801e-01, -1.80775732e-01,
          1.16481617e-01,  2.20037118e-01, -2.40693942e-01,
          2.56029308e-01, -1.01689406e-01, -3.30621675e-02,
          1.20807573e-01, -2.59591013e-01, -3.22539389e-01,
          1.84205502e-01, -1.89597830e-01,  2.31825620e-01,
          3.02365720e-02, -3.68707664e-02,  8.41445401e-02,
         -3.75120901e-02, -2.31836766e-01,  2.08976626e-01,
         -4.10083979e-01,  2.87636608e-01, -1.34998262e-01,
          7.84983411e-02, -1.14016011e-01],
        [-3.14674705e-01, -3.75583887e-01,  1.29528970e-01,
         -1.23624228e-01,  4.16041501e-02, -8.88677612e-02,
          2.80601740e-01, -1.37005419e-01, -2.09424287e-01,
          2.30441943e-01,  2.31417611e-01, -2.91469544e-01,
          2.35015467e-01, -2.33423561e-01, -1.42042409e-04,
          6.13021255e-02, -2.53171444e-01, -2.88317144e-01,
          2.82116771e-01, -1.95909053e-01,  2.12525308e-01,
         -4.83360291e-02, -1.05299607e-01,  6.91717118e-02,
         -2.99354792e-02, -2.47595549e-01,  2.24440083e-01,
         -5.12600601e-01,  4.14090723e-01, -2.77401090e-01,
          2.76034642e-02, -1.12852931e-01],
        [-2.61823118e-01, -2.71160632e-01,  1.97073504e-01,
         -9.72358882e-02, -1.58139167e-03, -7.78712481e-02,
          2.81729043e-01, -1.27643704e-01, -2.24029481e-01,
          1.21052191e-01,  2.70698428e-01, -2.89346427e-01,
          2.97538549e-01, -1.83507636e-01, -3.19838114e-02,
          7.53376558e-02, -3.06314975e-01, -2.76743442e-01,
          3.77449691e-01, -1.48431033e-01,  2.37052560e-01,
          5.17769419e-02, -6.43515065e-02,  3.48515399e-02,
         -5.69593534e-02, -2.31475517e-01,  2.40070909e-01,
         -5.01241624e-01,  4.36306208e-01, -2.06123635e-01,
          3.41949388e-02, -4.88631018e-02]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/2.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 3), dtype=float32, numpy=
array([[0.20764227, 0.22614402, 0.10186402],
       [0.05754023, 0.12189128, 0.07502308],
       [0.11160012, 0.15947515, 0.10298098],
       [0.15033601, 0.09899815, 0.11614262]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 3), dtype=float32, numpy=
array([[0.20764223, 0.22614402, 0.10186402],
       [0.05754022, 0.12189126, 0.07502308],
       [0.11160014, 0.15947512, 0.10298096],
       [0.15033609, 0.09899816, 0.11614261]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/20.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[ 0.14952484, -0.38183007, -0.03284776,  0.10574782,  0.16869791,
        -0.22752233]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[ 0.14952482, -0.3818301 , -0.03284773,  0.10574784,  0.1686979 ,
        -0.22752234]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/21.py
2023-04-19 13:48:40.488046: W tensorflow/core/framework/op_kernel.cc:1745] OP_REQUIRES failed at cudnn_rnn_ops.cc:1553 : UNKNOWN: CUDNN_STATUS_BAD_PARAM
in tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): 'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)'
{'res_cpu': (<tf.Tensor: shape=(4, 0), dtype=float32, numpy=array([], shape=(4, 0), dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'err_gpu': 'Error:Exception encountered when calling layer "lstm" (type LSTM).\n\nCUDNN_STATUS_BAD_PARAM\nin tensorflow/stream_executor/cuda/cuda_dnn.cc(1242): \'cudnnSetRNNDescriptor_v8( rnn_desc.get(), rnn_algo, rnn_mode, bias_mode, direction_mode, input_mode, data_type, compute_type, math_type, input_size, hidden_size, proj_size, num_layers, dropout_desc.handle(), aux_flags)\' [Op:CudnnRNN]\n\nCall arguments received by layer "lstm" (type LSTM):\n  • inputs=tf.Tensor(shape=(4, 4, 10), dtype=float32)\n  • mask=None\n  • training=None\n  • initial_state=None'}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/22.py
WARNING:tensorflow:`implementation=0` has been deprecated, and now defaults to `implementation=1`.Please update your layer call.
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(2, 3, 3), dtype=float32, numpy=
array([[[ 0.00094227, -0.1183814 ,  0.03913055],
        [-0.02121957, -0.10508932, -0.03836463],
        [-0.07610641, -0.09893852,  0.00996403]],

       [[-0.10183463, -0.15146029,  0.11451636],
        [-0.06387747, -0.14754339,  0.06562802],
        [-0.01972391, -0.12090281, -0.02302182]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(2, 3, 3), dtype=float32, numpy=
array([[[-0.06757092, -0.17712864,  0.09809524],
        [-0.06513529, -0.16698201,  0.00260965],
        [-0.09931933, -0.14254072,  0.00892104]],

       [[-0.1469471 , -0.17398514,  0.14620611],
        [-0.09560327, -0.16699539,  0.08889598],
        [-0.03609602, -0.13889962, -0.02122938]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/23.py
WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.
{'res_cpu': <tf.Tensor: shape=(1, 50, 128), dtype=float32, numpy=
array([[[ 0.02720664,  0.00085108, -0.08505744, ...,  0.00280756,
         -0.02026137, -0.08068451],
        [ 0.03008514, -0.03250074, -0.09542238, ..., -0.04536496,
         -0.00643739, -0.10053731],
        [ 0.06488657, -0.02416604, -0.08934274, ..., -0.00988802,
         -0.00732212, -0.06998683],
        ...,
        [ 0.09146757, -0.00455779, -0.11002696, ..., -0.02143171,
         -0.05093636, -0.11070151],
        [ 0.11481483,  0.03492986, -0.13845232, ..., -0.00166105,
         -0.0669264 , -0.01420882],
        [ 0.10547096,  0.0306992 , -0.13415344, ..., -0.00858966,
         -0.06589027, -0.02204968]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(1, 50, 128), dtype=float32, numpy=
array([[[ 0.09494888,  0.01358887, -0.16079487, ...,  0.00316538,
         -0.08739027, -0.08412882],
        [ 0.08072327, -0.02538239, -0.1354567 , ..., -0.04048268,
         -0.04713327, -0.10014467],
        [ 0.09626434, -0.02253282, -0.11040563, ..., -0.00368425,
         -0.03626241, -0.06785278],
        ...,
        [ 0.09146757, -0.00455779, -0.11002698, ..., -0.02143169,
         -0.05093636, -0.11070154],
        [ 0.11481485,  0.03492986, -0.13845235, ..., -0.00166106,
         -0.06692643, -0.01420883],
        [ 0.10547099,  0.0306992 , -0.13415347, ..., -0.00858967,
         -0.06589026, -0.02204968]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/24.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.30739614, -0.13144809, -0.08727005, -0.42345828, -0.3811915 ,
         0.0856747 , -0.32902044, -0.33502647],
       [-0.15108828, -0.09556817, -0.02033727, -0.28639415, -0.3218425 ,
        -0.00910082, -0.24470837, -0.26548138],
       [-0.13767624, -0.04690092, -0.20414934, -0.3333809 , -0.2841911 ,
         0.19063555, -0.22808126, -0.2244105 ],
       [-0.13564011,  0.05578306, -0.24780186, -0.3326662 , -0.29514402,
         0.15539905, -0.17808026, -0.23697188]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.30739617, -0.13144808, -0.08727007, -0.42345828, -0.38119143,
         0.08567472, -0.32902044, -0.33502653],
       [-0.15108828, -0.09556817, -0.02033728, -0.28639418, -0.32184246,
        -0.00910081, -0.24470836, -0.26548138],
       [-0.13767622, -0.04690092, -0.20414938, -0.33338088, -0.28419104,
         0.19063558, -0.22808127, -0.22441052],
       [-0.13564013,  0.05578307, -0.24780183, -0.33266625, -0.295144  ,
         0.15539905, -0.17808032, -0.23697194]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/25.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.1043286 ,  0.2991094 ,  0.08279007,  0.13117358,  0.17630398,
         0.3034454 , -0.07202877,  0.01175874],
       [ 0.08212212,  0.28062394,  0.04540051,  0.14221312,  0.17763425,
         0.3177119 , -0.05833841,  0.0115432 ],
       [-0.0165143 ,  0.21264225,  0.06245695,  0.09237225,  0.14256074,
         0.36599034, -0.06485973,  0.03462278]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.10432862,  0.29910943,  0.08279011,  0.13117364,  0.17630401,
         0.30344537, -0.07202879,  0.01175874],
       [ 0.08212213,  0.28062397,  0.04540051,  0.14221314,  0.17763427,
         0.3177119 , -0.05833843,  0.0115432 ],
       [-0.01651432,  0.2126423 ,  0.06245697,  0.09237223,  0.14256074,
         0.36599034, -0.06485974,  0.03462277]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/26.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 16), dtype=float32, numpy=
array([[-0.14091611,  0.2517127 , -0.34968883, -0.05006928, -0.17631048,
         0.16655014,  0.04059874,  0.12228353,  0.15732642,  0.05266384,
         0.10055618,  0.0639461 , -0.00128449,  0.07699315,  0.12977561,
         0.16407207],
       [-0.1804485 ,  0.19543207, -0.2486341 , -0.06651808, -0.20391431,
         0.24764608, -0.02561821,  0.1731076 ,  0.16255519, -0.0209679 ,
         0.05172869,  0.13570163, -0.07043181,  0.13221566,  0.20024848,
         0.17145722],
       [-0.13956448,  0.35003006, -0.37969062, -0.18234527, -0.25343147,
         0.22302142,  0.15478018,  0.1567923 ,  0.04615971,  0.08251889,
         0.02777407,  0.06754711, -0.12607263,  0.06388023,  0.10370821,
         0.08011178]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 16), dtype=float32, numpy=
array([[-0.14091608,  0.2517127 , -0.34968883, -0.05006931, -0.17631043,
         0.16655016,  0.04059874,  0.12228352,  0.15732642,  0.05266384,
         0.10055617,  0.06394611, -0.00128449,  0.07699316,  0.12977563,
         0.16407207],
       [-0.1804485 ,  0.19543205, -0.2486341 , -0.0665181 , -0.20391431,
         0.24764608, -0.02561822,  0.17310761,  0.16255516, -0.0209679 ,
         0.0517287 ,  0.13570161, -0.07043181,  0.13221566,  0.20024848,
         0.17145722],
       [-0.13956451,  0.3500301 , -0.37969068, -0.18234526, -0.25343153,
         0.2230214 ,  0.15478013,  0.1567923 ,  0.04615974,  0.08251891,
         0.02777408,  0.06754713, -0.12607266,  0.06388027,  0.10370822,
         0.0801118 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/27.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.03627357,  0.07528867,  0.17154454, -0.34526038, -0.21564487,
         0.14639983,  0.00617046,  0.08371986],
       [ 0.04329394,  0.00640541,  0.14129956, -0.4456045 , -0.23653132,
         0.02070937,  0.04563962,  0.10770093],
       [ 0.00446628,  0.00413659,  0.14054203, -0.4331835 , -0.27039894,
         0.0131647 ,  0.06270695,  0.09282028],
       [ 0.02273936,  0.10070211,  0.02412346, -0.40849492, -0.20078318,
        -0.04421443, -0.01318232,  0.10261992]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(4, 8), dtype=float32, numpy=
array([[-0.03627357,  0.07528867,  0.17154452, -0.34526035, -0.21564487,
         0.1463998 ,  0.00617045,  0.08371986],
       [ 0.04329395,  0.00640542,  0.14129953, -0.4456046 , -0.23653132,
         0.0207094 ,  0.04563965,  0.10770094],
       [ 0.00446631,  0.00413657,  0.14054205, -0.43318346, -0.27039889,
         0.0131647 ,  0.06270698,  0.09282028],
       [ 0.02273937,  0.10070213,  0.02412344, -0.40849498, -0.20078316,
        -0.04421442, -0.01318232,  0.10261994]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/117.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 6), dtype=float32, numpy=
array([[ 0.30142182, -0.35347977,  0.21870229, -0.11676574,  0.33832896,
         0.19770433],
       [ 0.17493911, -0.2748673 ,  0.16552947, -0.00939899,  0.22936727,
         0.257485  ],
       [ 0.22656731, -0.19880286, -0.00704441, -0.12954126,  0.24750571,
         0.4956099 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 6), dtype=float32, numpy=
array([[ 0.30142185, -0.35347974,  0.21870229, -0.11676574,  0.33832896,
         0.19770429],
       [ 0.1749391 , -0.27486733,  0.16552949, -0.009399  ,  0.22936726,
         0.25748503],
       [ 0.22656731, -0.19880286, -0.00704437, -0.12954126,  0.24750574,
         0.4956099 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/28.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.13435036, -0.05220613,  0.31377468, -0.48347142, -0.19988583,
         0.24904826, -0.09582178, -0.11809305]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[ 0.13435039, -0.05220613,  0.31377465, -0.4834713 , -0.19988582,
         0.24904828, -0.09582179, -0.11809307]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/47.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 7), dtype=float32, numpy=
array([[-0.11043492, -0.47758076,  0.04068998, -0.17864777,  0.29684567,
        -0.05438109,  0.2184229 ],
       [-0.07722467, -0.2732773 ,  0.14058498, -0.16995536,  0.20232546,
         0.02656466,  0.2976799 ],
       [-0.18113713, -0.44720447,  0.19012818, -0.0977803 ,  0.29337364,
        -0.02996422,  0.16127609]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 7), dtype=float32, numpy=
array([[-0.11043491, -0.47758073,  0.04069   , -0.17864776,  0.29684564,
        -0.05438111,  0.2184229 ],
       [-0.07722468, -0.27327737,  0.14058498, -0.16995536,  0.20232545,
         0.02656465,  0.2976799 ],
       [-0.18113713, -0.44720435,  0.19012819, -0.09778035,  0.29337358,
        -0.02996422,  0.1612761 ]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.LSTM/66.py
Could not load symbol cublasGetSmCountTarget from libcublas.so.11. Error: /home/nimashiri/anaconda3/envs/fuzzer_tf_2.9.0/lib/libcublas.so.11: undefined symbol: cublasGetSmCountTarget
{'res_cpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.00148306, -0.22084533, -0.02896892, -0.23091006, -0.15279679,
        -0.06751851,  0.08535425, -0.01633221],
       [ 0.03541182, -0.30042595,  0.03408796, -0.2864557 , -0.1778283 ,
        -0.10805605,  0.1549908 , -0.02332805],
       [ 0.0236904 , -0.27975783, -0.07178435, -0.29188177, -0.2203434 ,
        -0.15918823,  0.12941945, -0.01744592]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=1.0>), 'res_gpu': (<tf.Tensor: shape=(3, 8), dtype=float32, numpy=
array([[ 0.00148306, -0.22084528, -0.02896893, -0.23091011, -0.15279682,
        -0.06751852,  0.08535425, -0.01633221],
       [ 0.03541181, -0.300426  ,  0.03408797, -0.2864557 , -0.17782827,
        -0.10805611,  0.15499085, -0.02332806],
       [ 0.0236904 , -0.2797578 , -0.07178437, -0.29188174, -0.2203434 ,
        -0.15918821,  0.12941946, -0.01744591]], dtype=float32)>, <tf.Tensor: shape=(), dtype=float32, numpy=2.0>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.MaxPooling3D/1.py
{'res_cpu': <tf.Tensor: shape=(3, 4, 4, 4, 4), dtype=float32, numpy=
array([[[[[0.6064236 , 0.7508279 , 0.55066776, 0.47390926],
          [0.08392727, 0.30747008, 0.99618053, 0.45175278],
          [0.07914853, 0.07660019, 0.45504487, 0.9130125 ],
          [0.6297598 , 0.5341579 , 0.8604189 , 0.14968026]],

         [[0.20849288, 0.6219851 , 0.41788495, 0.03499675],
          [0.7295064 , 0.9507961 , 0.6018995 , 0.7743927 ],
          [0.88440716, 0.86193585, 0.77014124, 0.3149624 ],
          [0.51187897, 0.05538321, 0.11918855, 0.53623235]],

         [[0.713156  , 0.43415928, 0.37607408, 0.7095126 ],
          [0.7822962 , 0.7462815 , 0.3406788 , 0.29488623],
          [0.09995389, 0.5457593 , 0.58229804, 0.14190757],
          [0.2665521 , 0.62903893, 0.18976581, 0.6154052 ]],

         [[0.65513086, 0.6627507 , 0.8997408 , 0.45397067],
          [0.14106655, 0.7233685 , 0.5816885 , 0.65011215],
          [0.7533946 , 0.8406776 , 0.520447  , 0.33671033],
          [0.19798958, 0.7204548 , 0.7652464 , 0.01944399]]],


        [[[0.388376  , 0.91755867, 0.9288287 , 0.6270199 ],
          [0.38716686, 0.37930214, 0.17488539, 0.5499499 ],
          [0.6747025 , 0.850111  , 0.2350297 , 0.04357946],
          [0.32497573, 0.09942675, 0.33276784, 0.7800721 ]],

         [[0.70689845, 0.1791048 , 0.13979316, 0.34669113],
          [0.19060946, 0.4954157 , 0.83562744, 0.4008057 ],
          [0.79509854, 0.769613  , 0.00155723, 0.7297723 ],
          [0.9191047 , 0.67270195, 0.347723  , 0.8335911 ]],

         [[0.00527227, 0.56019497, 0.00233352, 0.31254232],
          [0.2452395 , 0.5198287 , 0.12707257, 0.5635667 ],
          [0.57211196, 0.646109  , 0.5163083 , 0.8920169 ],
          [0.1926657 , 0.03943014, 0.46179092, 0.46530235]],

         [[0.99253774, 0.05318248, 0.65327156, 0.90067065],
          [0.67620385, 0.6840551 , 0.9671589 , 0.78604424],
          [0.7619035 , 0.96631336, 0.5336909 , 0.6095091 ],
          [0.13170588, 0.27554905, 0.47538412, 0.5067644 ]]],


        [[[0.32167697, 0.1519655 , 0.26324618, 0.91311383],
          [0.4782399 , 0.8321427 , 0.00629127, 0.88950324],
          [0.37878442, 0.63625765, 0.4983747 , 0.9208691 ],
          [0.8383038 , 0.01018548, 0.40234172, 0.20934224]],

         [[0.88000643, 0.31217253, 0.5609187 , 0.17258048],
          [0.26867282, 0.13998592, 0.006392  , 0.7437067 ],
          [0.44779682, 0.861573  , 0.68880594, 0.11955464],
          [0.31555974, 0.6834488 , 0.41182625, 0.919641  ]],

         [[0.41935492, 0.5928161 , 0.9756447 , 0.40978456],
          [0.22487783, 0.8752229 , 0.833941  , 0.459661  ],
          [0.04335785, 0.8339416 , 0.25455773, 0.75899494],
          [0.29979408, 0.42318177, 0.18668091, 0.2838664 ]],

         [[0.8576106 , 0.32639766, 0.9529098 , 0.30505633],
          [0.9699794 , 0.4391383 , 0.55773115, 0.91337156],
          [0.6473812 , 0.26271236, 0.39288378, 0.07643664],
          [0.28820086, 0.8029398 , 0.91117895, 0.5162741 ]]],


        [[[0.9367045 , 0.07118571, 0.17129195, 0.30335343],
          [0.7332791 , 0.8324573 , 0.79000735, 0.8142936 ],
          [0.9751462 , 0.4413818 , 0.6121073 , 0.5724318 ],
          [0.6893705 , 0.6794872 , 0.8735815 , 0.42533875]],

         [[0.14761937, 0.76700985, 0.29206204, 0.6006193 ],
          [0.8671266 , 0.03548527, 0.65767074, 0.13137364],
          [0.5136671 , 0.31017303, 0.16084456, 0.45439303],
          [0.76152027, 0.64511144, 0.8969735 , 0.42477894]],

         [[0.73828423, 0.12338948, 0.40065885, 0.8897517 ],
          [0.09029019, 0.87515604, 0.21497929, 0.41965878],
          [0.6184578 , 0.34723532, 0.8562919 , 0.80593216],
          [0.10151517, 0.14522028, 0.89145064, 0.7995992 ]],

         [[0.3734492 , 0.48802292, 0.61035013, 0.74886596],
          [0.92073226, 0.4412725 , 0.92296326, 0.69350326],
          [0.3883356 , 0.54347837, 0.6961    , 0.03364921],
          [0.91279125, 0.9757408 , 0.7610159 , 0.71729195]]]],



       [[[[0.01642108, 0.9712666 , 0.5960281 , 0.21843195],
          [0.05165946, 0.14184451, 0.94307625, 0.54731655],
          [0.6325216 , 0.31718588, 0.7019595 , 0.9718423 ],
          [0.82883954, 0.64369595, 0.936169  , 0.7512126 ]],

         [[0.01531696, 0.01299334, 0.746825  , 0.438668  ],
          [0.06401706, 0.3879844 , 0.27199268, 0.6737503 ],
          [0.17852104, 0.67469895, 0.84247994, 0.5035254 ],
          [0.5501497 , 0.68573296, 0.80580187, 0.49046302]],

         [[0.4447074 , 0.52693903, 0.16467619, 0.05298746],
          [0.04068089, 0.63663924, 0.32086647, 0.26926553],
          [0.71906066, 0.8143325 , 0.11831987, 0.38518095],
          [0.5458776 , 0.8538363 , 0.03674567, 0.7717837 ]],

         [[0.93820536, 0.33499742, 0.8719592 , 0.16531062],
          [0.30926895, 0.5083014 , 0.5675677 , 0.47786498],
          [0.56942606, 0.18488777, 0.9925877 , 0.07087207],
          [0.5467931 , 0.38614333, 0.97825503, 0.8529531 ]]],


        [[[0.8547163 , 0.764259  , 0.9312149 , 0.4450754 ],
          [0.145787  , 0.6487993 , 0.55268824, 0.27662146],
          [0.95756125, 0.94769573, 0.01385856, 0.51033425],
          [0.22523141, 0.93532526, 0.08825827, 0.9025804 ]],

         [[0.49361515, 0.5206138 , 0.6508298 , 0.7925769 ],
          [0.61359537, 0.00802267, 0.86977315, 0.20820773],
          [0.38820875, 0.63655615, 0.6001272 , 0.74532497],
          [0.38657808, 0.01713538, 0.24323833, 0.10443652]],

         [[0.64777184, 0.43782938, 0.18955612, 0.29698658],
          [0.3558985 , 0.66861653, 0.10402405, 0.5605906 ],
          [0.34880805, 0.00165045, 0.04128408, 0.781165  ],
          [0.82215977, 0.9563223 , 0.30154395, 0.8572719 ]],

         [[0.97771764, 0.5253099 , 0.75592875, 0.1140883 ],
          [0.45426333, 0.29821658, 0.47270632, 0.5033004 ],
          [0.29902017, 0.04533148, 0.2683375 , 0.5183786 ],
          [0.3026662 , 0.8788234 , 0.6896782 , 0.8001809 ]]],


        [[[0.38931334, 0.34645748, 0.49108195, 0.68072367],
          [0.33401954, 0.99633837, 0.31802535, 0.44005895],
          [0.89218354, 0.49688423, 0.6947322 , 0.8463378 ],
          [0.5453267 , 0.97986054, 0.15863585, 0.6392207 ]],

         [[0.9286703 , 0.27233338, 0.5262668 , 0.82280195],
          [0.3397895 , 0.24447954, 0.22572935, 0.9320576 ],
          [0.04172766, 0.2951225 , 0.4878844 , 0.9893657 ],
          [0.9656242 , 0.69374347, 0.42250264, 0.3800174 ]],

         [[0.44554996, 0.8353286 , 0.9941249 , 0.68947995],
          [0.81492496, 0.79823923, 0.9924232 , 0.96793854],
          [0.54562294, 0.25347555, 0.92673194, 0.7939099 ],
          [0.5262784 , 0.28297067, 0.17492533, 0.9131857 ]],

         [[0.25931633, 0.2299093 , 0.38990486, 0.9065777 ],
          [0.11969006, 0.8333796 , 0.6330911 , 0.444569  ],
          [0.8317095 , 0.33414483, 0.43318653, 0.08313847],
          [0.8696395 , 0.7085571 , 0.88283205, 0.56602955]]],


        [[[0.03255534, 0.00832033, 0.8811687 , 0.35923576],
          [0.2867787 , 0.44064355, 0.41948533, 0.8618517 ],
          [0.9171709 , 0.70880234, 0.749475  , 0.13679373],
          [0.24007213, 0.8501282 , 0.09112406, 0.4894606 ]],

         [[0.7336303 , 0.15315974, 0.25256515, 0.25075734],
          [0.14395285, 0.04964244, 0.08176923, 0.91980636],
          [0.62315035, 0.1988697 , 0.49153173, 0.42599738],
          [0.21484482, 0.73097944, 0.20933163, 0.56088865]],

         [[0.14395297, 0.48929155, 0.04768562, 0.9639405 ],
          [0.36579823, 0.65562534, 0.18981934, 0.1076684 ],
          [0.16271842, 0.02556741, 0.6698419 , 0.22298789],
          [0.78306603, 0.737895  , 0.4125421 , 0.2606038 ]],

         [[0.62264895, 0.524241  , 0.81435084, 0.09768784],
          [0.07766521, 0.1901977 , 0.9154599 , 0.36866784],
          [0.19617069, 0.61927974, 0.43303335, 0.6110003 ],
          [0.6149962 , 0.502898  , 0.9437113 , 0.12991714]]]],



       [[[[0.10530174, 0.16908109, 0.4256407 , 0.8234978 ],
          [0.32171035, 0.648561  , 0.69208694, 0.15863574],
          [0.8895768 , 0.30771756, 0.8521569 , 0.7862817 ],
          [0.10014212, 0.54407537, 0.7562728 , 0.1720742 ]],

         [[0.979234  , 0.6013111 , 0.01098263, 0.61174786],
          [0.49760985, 0.10712647, 0.72692025, 0.04689896],
          [0.7673042 , 0.89241076, 0.6880965 , 0.8231753 ],
          [0.8999691 , 0.22423792, 0.3549837 , 0.8500782 ]],

         [[0.8559611 , 0.7317407 , 0.77677155, 0.9799682 ],
          [0.07752991, 0.05925405, 0.5678476 , 0.17533755],
          [0.07411969, 0.20257723, 0.22549963, 0.27603626],
          [0.01061285, 0.07754266, 0.04839301, 0.35527956]],

         [[0.80592346, 0.9331455 , 0.26902127, 0.4603107 ],
          [0.02643538, 0.6046802 , 0.8503357 , 0.6525104 ],
          [0.6081455 , 0.3432393 , 0.9939517 , 0.36701047],
          [0.70780563, 0.38916385, 0.14241064, 0.8241894 ]]],


        [[[0.43484306, 0.7032478 , 0.9554248 , 0.3461579 ],
          [0.5056554 , 0.7081033 , 0.02740812, 0.74704134],
          [0.20115542, 0.8779088 , 0.928838  , 0.48487198],
          [0.6511928 , 0.2456224 , 0.3283645 , 0.8474622 ]],

         [[0.9807898 , 0.12222993, 0.52616763, 0.31205654],
          [0.6524004 , 0.42437458, 0.23555982, 0.05770981],
          [0.9488039 , 0.9571856 , 0.13894546, 0.5170418 ],
          [0.35970974, 0.00127161, 0.55031   , 0.25695336]],

         [[0.43924534, 0.34500492, 0.95243895, 0.78381836],
          [0.65725875, 0.00211215, 0.8033347 , 0.28749895],
          [0.79224896, 0.73689175, 0.893626  , 0.36289477],
          [0.8784051 , 0.57705045, 0.27322686, 0.10675538]],

         [[0.02850604, 0.8515333 , 0.76600873, 0.7539004 ],
          [0.2881019 , 0.32452095, 0.5047275 , 0.6738585 ],
          [0.02933741, 0.4465655 , 0.6835598 , 0.291193  ],
          [0.57415736, 0.65941095, 0.06987941, 0.70859444]]],


        [[[0.95996594, 0.8046305 , 0.06195998, 0.88185954],
          [0.24296892, 0.94956625, 0.34447622, 0.07929277],
          [0.53942466, 0.12877846, 0.1997472 , 0.6511755 ],
          [0.07269049, 0.57963645, 0.35711432, 0.1437738 ]],

         [[0.2874788 , 0.7646364 , 0.52283156, 0.24021709],
          [0.88173664, 0.10295546, 0.42618   , 0.23396182],
          [0.9720458 , 0.86951756, 0.2733661 , 0.62123084],
          [0.8741236 , 0.50899446, 0.75758505, 0.88576686]],

         [[0.4911306 , 0.9159024 , 0.8024379 , 0.02373433],
          [0.47344112, 0.45709383, 0.10261428, 0.40882385],
          [0.86790276, 0.9292253 , 0.6934024 , 0.6625471 ],
          [0.48453546, 0.70218015, 0.78610206, 0.7146331 ]],

         [[0.7389114 , 0.05269158, 0.13363504, 0.33089638],
          [0.1651876 , 0.30625355, 0.45143032, 0.37310135],
          [0.15260708, 0.317886  , 0.9899707 , 0.5408808 ],
          [0.83955204, 0.4452082 , 0.30243897, 0.57777286]]],


        [[[0.31472445, 0.45384312, 0.35409808, 0.9643818 ],
          [0.5983876 , 0.4335444 , 0.7332852 , 0.30170333],
          [0.39150238, 0.58416855, 0.5267792 , 0.7453145 ],
          [0.5124874 , 0.84209824, 0.84330964, 0.9424883 ]],

         [[0.61417484, 0.25966322, 0.8236048 , 0.6247885 ],
          [0.25197256, 0.8828763 , 0.54340816, 0.6192707 ],
          [0.15117419, 0.24064994, 0.6435603 , 0.5266237 ],
          [0.591051  , 0.36265206, 0.66809845, 0.466774  ]],

         [[0.7658211 , 0.35261476, 0.33069897, 0.34374607],
          [0.40577698, 0.11244202, 0.273669  , 0.5445757 ],
          [0.72724044, 0.7862084 , 0.18866658, 0.6150259 ],
          [0.10263777, 0.47017074, 0.87987876, 0.1030581 ]],

         [[0.8399559 , 0.57915735, 0.3217249 , 0.82481897],
          [0.81102633, 0.6720437 , 0.31264305, 0.15425146],
          [0.1330961 , 0.5205101 , 0.7685076 , 0.86816764],
          [0.03557527, 0.18384743, 0.4222616 , 0.6083193 ]]]]],
      dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(3, 4, 4, 4, 4), dtype=float32, numpy=
array([[[[[4.14222360e-01, 3.96676064e-02, 1.01177335e-01,
           5.02447963e-01],
          [7.53619790e-01, 9.90535378e-01, 7.69389272e-01,
           9.98613596e-01],
          [5.95552921e-01, 1.67367220e-01, 4.25477266e-01,
           1.53343081e-01],
          [3.43597770e-01, 8.52170348e-01, 8.09713721e-01,
           4.80176210e-01]],

         [[3.14664841e-02, 1.63085222e-01, 2.76130080e-01,
           1.58657908e-01],
          [7.54607797e-01, 9.83908772e-01, 8.38882804e-01,
           1.90464258e-01],
          [8.26700926e-01, 9.72759843e-01, 9.18440819e-02,
           5.22445321e-01],
          [3.35348845e-02, 5.00741243e-01, 3.98256779e-01,
           6.48381591e-01]],

         [[8.51859927e-01, 1.21275187e-01, 8.72925520e-01,
           4.25128937e-01],
          [3.19404721e-01, 6.37996078e-01, 7.36050725e-01,
           2.67839074e-01],
          [2.77422309e-01, 9.22722340e-01, 5.69713831e-01,
           4.28247571e-01],
          [2.94717550e-02, 9.15565491e-02, 2.24499822e-01,
           1.44179583e-01]],

         [[7.42747307e-01, 6.75075769e-01, 7.95443416e-01,
           6.29833698e-01],
          [3.79781604e-01, 1.18211508e-02, 5.14145017e-01,
           4.33829546e-01],
          [2.00756788e-02, 2.60827899e-01, 9.83724594e-01,
           5.41562557e-01],
          [4.74069715e-01, 4.63993192e-01, 9.82730031e-01,
           4.88122582e-01]]],


        [[[4.63441491e-01, 5.93455434e-01, 2.96406150e-01,
           5.91630459e-01],
          [6.35116100e-01, 2.47840166e-01, 5.91364264e-01,
           3.20922256e-01],
          [5.11797071e-01, 2.95191407e-01, 4.79620576e-01,
           3.73000622e-01],
          [5.85990310e-01, 5.78771710e-01, 5.92030287e-01,
           7.34847903e-01]],

         [[2.26400375e-01, 7.81998515e-01, 6.70835376e-01,
           6.30958200e-01],
          [1.75240755e-01, 3.04311156e-01, 4.23425436e-02,
           5.29581070e-01],
          [6.52649403e-02, 2.76900649e-01, 3.65244150e-02,
           3.79711390e-02],
          [4.53556061e-01, 8.92143130e-01, 5.69023609e-01,
           6.88898683e-01]],

         [[5.03749728e-01, 1.71980023e-01, 8.53321910e-01,
           3.59319568e-01],
          [4.19833779e-01, 3.18808317e-01, 3.77320409e-01,
           7.03692198e-01],
          [2.84185529e-01, 6.13197684e-01, 5.58211446e-01,
           8.86344552e-01],
          [6.84241056e-01, 7.47841358e-01, 9.96421218e-01,
           6.03128672e-02]],

         [[9.36498404e-01, 2.67166853e-01, 8.60439539e-01,
           4.31369781e-01],
          [7.54401207e-01, 7.46858120e-03, 1.15809321e-01,
           4.19624805e-01],
          [6.67484522e-01, 6.40422583e-01, 5.23205400e-01,
           6.75495982e-01],
          [3.78163576e-01, 6.23568296e-02, 7.06460714e-01,
           3.65486026e-01]]],


        [[[3.21621180e-01, 7.08410978e-01, 4.76914763e-01,
           8.81311536e-01],
          [3.26038003e-01, 9.20818567e-01, 5.04615664e-01,
           3.76084924e-01],
          [9.83139038e-01, 1.79569364e-01, 1.48433805e-01,
           1.72593594e-02],
          [7.65172958e-01, 6.24456167e-01, 4.29827094e-01,
           8.45604420e-01]],

         [[6.34075642e-01, 3.17340493e-01, 2.87216425e-01,
           1.60186172e-01],
          [9.15552974e-01, 7.27717996e-01, 2.57589579e-01,
           4.18009877e-01],
          [8.03126574e-01, 6.48012161e-02, 7.08928704e-01,
           4.99280334e-01],
          [5.03023386e-01, 1.12198591e-01, 9.54345584e-01,
           9.43217874e-01]],

         [[7.51445174e-01, 4.18807864e-01, 3.87109160e-01,
           3.70225072e-01],
          [6.97220564e-02, 7.23500729e-01, 6.82019353e-01,
           9.95292902e-01],
          [5.97202301e-01, 2.75959730e-01, 9.71532583e-01,
           1.78190351e-01],
          [9.61392522e-01, 9.21799779e-01, 6.18789196e-02,
           1.71005487e-01]],

         [[3.61995697e-02, 6.41349077e-01, 2.94415832e-01,
           3.06116581e-01],
          [7.28435278e-01, 7.10750103e-01, 5.84470749e-01,
           2.11797118e-01],
          [6.56850219e-01, 2.71528602e-01, 9.16999698e-01,
           6.05021715e-02],
          [1.55066609e-01, 9.62906718e-01, 4.26033378e-01,
           6.76660776e-01]]],


        [[[1.64341927e-02, 5.29714823e-01, 4.21914101e-01,
           4.75654244e-01],
          [5.25839925e-01, 9.31067824e-01, 6.01614952e-01,
           2.95316100e-01],
          [8.92612696e-01, 6.07560515e-01, 3.38337302e-01,
           1.43412232e-01],
          [6.45978689e-01, 8.95901561e-01, 8.93286467e-02,
           8.07618141e-01]],

         [[1.14516735e-01, 1.40589356e-01, 7.87219048e-01,
           2.41773129e-01],
          [9.33577061e-01, 3.89675975e-01, 3.71240616e-01,
           3.50777030e-01],
          [3.74301672e-01, 8.57734919e-01, 9.63434935e-01,
           2.62609601e-01],
          [4.37014103e-01, 6.65736437e-01, 4.79620576e-01,
           6.75904989e-01]],

         [[1.77919388e-01, 6.55872822e-01, 8.56215596e-01,
           5.42837143e-01],
          [1.53237224e-01, 8.29025984e-01, 9.40633774e-01,
           7.88583636e-01],
          [2.10040569e-01, 8.66907597e-01, 2.58893490e-01,
           2.64222026e-01],
          [7.49579430e-01, 8.10954571e-01, 1.53903723e-01,
           1.03821993e-01]],

         [[4.49760914e-01, 1.31530762e-01, 8.65123272e-02,
           6.54712915e-02],
          [8.91169906e-01, 1.79649949e-01, 1.43576622e-01,
           8.55331898e-01],
          [9.55375195e-01, 4.47657943e-01, 2.66459703e-01,
           9.97828841e-01],
          [4.76722002e-01, 5.17740369e-01, 9.95704770e-01,
           4.37412739e-01]]]],



       [[[[9.48095083e-01, 1.85171843e-01, 4.25307155e-01,
           3.69510889e-01],
          [2.85838485e-01, 5.99143386e-01, 5.99535108e-01,
           8.97951722e-01],
          [7.55457044e-01, 9.72039104e-01, 8.46954942e-01,
           8.50780725e-01],
          [5.12008429e-01, 1.15998149e-01, 1.65309548e-01,
           1.26506209e-01]],

         [[8.96243811e-01, 3.77549767e-01, 8.42532516e-01,
           2.62188077e-01],
          [4.93765950e-01, 3.53263736e-01, 8.70357752e-01,
           2.82308936e-01],
          [2.56124616e-01, 4.19520974e-01, 2.33737588e-01,
           7.48419285e-01],
          [1.76011324e-02, 4.25661206e-01, 2.16251135e-01,
           1.49965167e-01]],

         [[3.45582962e-01, 7.34516263e-01, 3.44892383e-01,
           9.48152304e-01],
          [4.93505239e-01, 7.03146935e-01, 3.73589993e-03,
           3.96284699e-01],
          [7.94172049e-01, 1.03603601e-01, 8.00026894e-01,
           1.14964247e-01],
          [2.06477761e-01, 3.98504734e-03, 5.95841289e-01,
           8.29981446e-01]],

         [[3.86219025e-02, 4.83135343e-01, 2.41974950e-01,
           5.51882744e-01],
          [1.90314651e-01, 9.27072883e-01, 2.27063417e-01,
           6.44510388e-01],
          [7.83578157e-02, 1.64427996e-01, 3.46984148e-01,
           3.45568419e-01],
          [5.96779585e-02, 9.74869013e-01, 5.60440421e-01,
           7.16387153e-01]]],


        [[[2.89238691e-01, 8.04340720e-01, 4.72140193e-01,
           2.70927906e-01],
          [6.94051504e-01, 2.15998888e-02, 9.13871646e-01,
           3.45153809e-01],
          [7.73421526e-01, 5.66133380e-01, 1.42792702e-01,
           9.94257092e-01],
          [3.38767529e-01, 9.39146876e-01, 9.21132565e-01,
           1.88617349e-01]],

         [[7.65336275e-01, 3.34414124e-01, 3.88182640e-01,
           4.25588131e-01],
          [2.64303088e-01, 9.34142232e-01, 6.86451554e-01,
           8.06318402e-01],
          [5.12101650e-01, 3.82484317e-01, 9.60191846e-01,
           3.67442131e-01],
          [8.46115232e-01, 5.47043204e-01, 6.11169100e-01,
           8.54449391e-01]],

         [[4.76731062e-02, 4.86037016e-01, 6.09280825e-01,
           9.38868999e-01],
          [4.20868039e-01, 4.45199847e-01, 2.34277964e-01,
           9.00032878e-01],
          [3.57091427e-03, 1.53744936e-01, 2.36759186e-01,
           2.37866402e-01],
          [9.14346576e-01, 3.02582622e-01, 5.56030512e-01,
           6.62133694e-01]],

         [[8.05677176e-02, 7.97080159e-01, 9.93198156e-01,
           9.75539804e-01],
          [8.98787618e-01, 3.10479999e-01, 1.10865355e-01,
           7.06328034e-01],
          [6.75714016e-01, 5.20026445e-01, 5.07652283e-01,
           1.88919306e-02],
          [5.99798203e-01, 4.48400259e-01, 1.73526168e-01,
           3.73486280e-01]]],


        [[[2.80486941e-01, 5.23216605e-01, 6.91765547e-01,
           4.12718415e-01],
          [3.51794720e-01, 7.64312506e-01, 8.62531900e-01,
           3.31906199e-01],
          [6.71450138e-01, 3.86162877e-01, 9.51287866e-01,
           3.18115830e-01],
          [1.78824663e-01, 9.94179249e-01, 1.68133616e-01,
           8.88881445e-01]],

         [[6.75551176e-01, 3.61692786e-01, 6.30648136e-01,
           2.64797091e-01],
          [5.69224477e-01, 5.59718609e-01, 7.05354214e-02,
           4.90743160e-01],
          [8.36113811e-01, 2.12975740e-02, 4.18366075e-01,
           8.72692466e-01],
          [3.06949496e-01, 2.97357678e-01, 1.81535602e-01,
           7.77399182e-01]],

         [[5.86618185e-02, 8.59863281e-01, 2.77273655e-01,
           5.62894344e-03],
          [3.19624424e-01, 3.20086122e-01, 8.75548482e-01,
           3.65747571e-01],
          [7.13944674e-01, 6.19215131e-01, 4.45688367e-01,
           5.67431331e-01],
          [9.25018072e-01, 8.32368970e-01, 3.97210479e-01,
           5.10877371e-02]],

         [[7.32543945e-01, 7.62148142e-01, 4.99371886e-01,
           3.99814606e-01],
          [6.39296055e-01, 6.57240987e-01, 8.07247996e-01,
           6.93487883e-01],
          [9.47011709e-02, 9.47892547e-01, 3.11185122e-02,
           8.61332655e-01],
          [9.85005975e-01, 5.55606604e-01, 9.61510301e-01,
           1.61013365e-01]]],


        [[[7.02201366e-01, 1.11891985e-01, 1.75420046e-01,
           2.56332278e-01],
          [8.91698003e-01, 9.86777663e-01, 8.45602989e-01,
           2.09374905e-01],
          [2.70073056e-01, 1.21544361e-01, 3.09808016e-01,
           8.27077270e-01],
          [2.80431032e-01, 7.59934545e-01, 7.47271299e-01,
           1.18521214e-01]],

         [[1.51160598e-01, 3.48433614e-01, 9.37314510e-01,
           6.55954003e-01],
          [2.18168855e-01, 8.98533344e-01, 6.70559525e-01,
           7.74517775e-01],
          [8.18480968e-01, 1.94118738e-01, 5.12637258e-01,
           3.28284502e-02],
          [2.30822444e-01, 7.67715931e-01, 1.57668471e-01,
           2.08363175e-01]],

         [[9.53379989e-01, 5.22979975e-01, 4.06337976e-01,
           7.92535186e-01],
          [3.51113081e-02, 8.16695333e-01, 5.02600193e-01,
           2.94386506e-01],
          [4.64017630e-01, 3.76548767e-01, 9.09537792e-01,
           1.92752004e-01],
          [3.99029016e-01, 2.80844212e-01, 8.81123304e-01,
           3.09949279e-01]],

         [[4.89169478e-01, 9.17207956e-01, 8.54203105e-01,
           6.87923908e-01],
          [7.30209112e-01, 6.93186283e-01, 7.95641184e-01,
           3.13193798e-01],
          [5.22461653e-01, 8.96594286e-01, 7.76939631e-01,
           2.20212340e-01],
          [2.66501904e-01, 1.83712840e-01, 9.96749282e-01,
           1.71229243e-01]]]],



       [[[[8.59836578e-01, 9.02402997e-01, 4.09483910e-02,
           3.39985609e-01],
          [3.89763474e-01, 4.87052560e-01, 9.36540484e-01,
           7.46693373e-01],
          [5.04991889e-01, 2.35498190e-01, 2.30018616e-01,
           3.40685725e-01],
          [8.19560289e-02, 3.91105056e-01, 9.77362990e-01,
           5.10668039e-01]],

         [[8.06974888e-01, 7.15674996e-01, 6.76332235e-01,
           4.80283618e-01],
          [7.59617567e-01, 5.42789698e-02, 9.10476089e-01,
           4.27775383e-01],
          [6.00812078e-01, 7.16142297e-01, 9.57369089e-01,
           8.70322585e-01],
          [6.89357758e-01, 5.89531183e-01, 3.52799892e-02,
           2.66943336e-01]],

         [[6.11757040e-02, 2.98406959e-01, 5.89847565e-01,
           4.29469585e-01],
          [5.57930827e-01, 2.23738313e-01, 2.58766770e-01,
           4.10786629e-01],
          [3.34781885e-01, 4.19162154e-01, 1.95764661e-01,
           6.74750447e-01],
          [1.29636288e-01, 9.02539492e-02, 2.79553056e-01,
           7.28956461e-02]],

         [[1.99325442e-01, 9.97629762e-01, 5.31951904e-01,
           4.35792804e-01],
          [5.97077131e-01, 7.78928638e-01, 3.41008067e-01,
           7.66390920e-01],
          [6.10275865e-01, 7.43575335e-01, 3.88151407e-01,
           8.37333202e-01],
          [2.89316177e-02, 9.52892780e-01, 4.51552868e-02,
           7.80125618e-01]]],


        [[[7.90872097e-01, 6.86484098e-01, 9.24388170e-01,
           6.95260048e-01],
          [1.62696600e-01, 7.90987730e-01, 9.14151073e-01,
           8.43091130e-01],
          [9.04699683e-01, 8.49740028e-01, 5.87946296e-01,
           6.02278948e-01],
          [8.79537702e-01, 9.83046889e-01, 8.22782278e-01,
           2.77388096e-02]],

         [[3.88358831e-02, 3.93763661e-01, 7.61522055e-02,
           5.10010242e-01],
          [4.73075271e-01, 4.35947537e-01, 8.25867414e-01,
           9.23287511e-01],
          [9.77415204e-01, 1.15651131e-01, 1.00064993e-01,
           8.35452199e-01],
          [3.77895594e-01, 6.96828365e-01, 5.54825902e-01,
           5.09946227e-01]],

         [[5.76324701e-01, 3.74244571e-01, 2.45061040e-01,
           1.47929192e-02],
          [6.12097979e-01, 9.83002186e-01, 1.81111693e-01,
           2.40847111e-01],
          [9.10363317e-01, 6.26524925e-01, 8.37341905e-01,
           6.04969382e-01],
          [1.29789710e-01, 4.93970513e-01, 6.75288439e-02,
           9.75964308e-01]],

         [[7.08218336e-01, 7.78364062e-01, 3.92261982e-01,
           1.62613511e-01],
          [1.53773427e-01, 9.66676593e-01, 3.19731832e-01,
           2.14137435e-01],
          [3.20345759e-01, 6.74869180e-01, 1.66201115e-01,
           4.07827854e-01],
          [5.44743419e-01, 3.79994392e-01, 8.32818151e-01,
           4.53069210e-02]]],


        [[[7.62828350e-01, 4.59221125e-01, 6.84199452e-01,
           2.69180298e-01],
          [3.44545126e-01, 6.64446354e-01, 1.28352046e-01,
           7.88969755e-01],
          [9.75609064e-01, 8.63478184e-01, 8.20069671e-01,
           8.27500463e-01],
          [5.03727555e-01, 3.64410162e-01, 1.63984895e-01,
           7.88999319e-01]],

         [[1.18765712e-01, 9.60409045e-01, 2.85976171e-01,
           1.91003561e-01],
          [8.04942608e-01, 1.33405924e-01, 2.89951801e-01,
           2.86244869e-01],
          [8.59375834e-01, 7.32766986e-01, 7.27032423e-01,
           2.51207352e-02],
          [2.13851929e-02, 5.81981063e-01, 5.74171543e-03,
           3.56255651e-01]],

         [[3.07241201e-01, 3.60438824e-02, 7.43255734e-01,
           5.85660815e-01],
          [8.67965937e-01, 6.52431846e-01, 9.47905421e-01,
           3.18324208e-01],
          [9.24677610e-01, 9.54980850e-02, 5.69353223e-01,
           1.47045016e-01],
          [7.03680158e-01, 1.52406573e-01, 4.38526034e-01,
           7.36875534e-02]],

         [[4.67300534e-01, 2.82709718e-01, 6.39599800e-01,
           9.63170528e-01],
          [4.17863131e-01, 1.27657056e-01, 8.38579178e-01,
           6.09098673e-02],
          [3.12449336e-01, 8.28693271e-01, 3.30522656e-01,
           7.28997231e-01],
          [5.75857043e-01, 4.16086435e-01, 7.97819734e-01,
           8.83896232e-01]]],


        [[[6.18798018e-01, 5.00723124e-02, 4.08730388e-01,
           2.72008896e-01],
          [7.15198636e-01, 1.27720952e-01, 1.63592339e-01,
           9.76672530e-01],
          [5.03659248e-02, 2.04087257e-01, 6.49101257e-01,
           4.78969336e-01],
          [8.68745208e-01, 4.43864584e-01, 7.06367373e-01,
           5.58175921e-01]],

         [[9.71457005e-01, 8.00978184e-01, 6.91716433e-01,
           6.18675828e-01],
          [6.52480841e-01, 3.58050466e-01, 9.16481853e-01,
           6.66594267e-01],
          [5.17225981e-01, 1.87042475e-01, 8.96916628e-01,
           9.20270681e-01],
          [9.21029210e-01, 9.11479950e-01, 7.52995133e-01,
           6.74039364e-01]],

         [[9.18648362e-01, 9.00218606e-01, 2.45991826e-01,
           5.68550467e-01],
          [7.79405832e-01, 7.71816969e-01, 7.87894964e-01,
           1.40565276e-01],
          [9.52656507e-01, 9.37166691e-01, 3.86128664e-01,
           9.35486794e-01],
          [3.28944921e-02, 5.45846224e-02, 8.77647877e-01,
           7.56126404e-01]],

         [[3.94207239e-01, 7.86471248e-01, 7.87656307e-02,
           8.84672880e-01],
          [5.14956236e-01, 5.12716174e-01, 3.81828666e-01,
           9.98511314e-02],
          [1.78124309e-01, 6.18219376e-04, 4.27429080e-01,
           2.48259306e-02],
          [2.62814999e-01, 9.14674044e-01, 1.32258534e-01,
           6.15730047e-01]]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.keras.layers.MaxPooling3D/2.py
{'res_cpu': <tf.Tensor: shape=(3, 4, 6, 6, 1), dtype=float32, numpy=
array([[[[[0.8101467 ],
          [0.74407685],
          [0.709684  ],
          [0.67821443],
          [0.82016027],
          [0.813246  ]],

         [[0.8101467 ],
          [0.8976548 ],
          [0.709684  ],
          [0.67821443],
          [0.82016027],
          [0.90705085]],

         [[0.88729763],
          [0.8976548 ],
          [0.65670514],
          [0.4934399 ],
          [0.7103075 ],
          [0.96918   ]],

         [[0.88729763],
          [0.7147372 ],
          [0.9456173 ],
          [0.53391016],
          [0.7103075 ],
          [0.96918   ]],

         [[0.7420994 ],
          [0.64147973],
          [0.9456173 ],
          [0.7984296 ],
          [0.52706826],
          [0.58174384]],

         [[0.12727523],
          [0.64147973],
          [0.85005975],
          [0.7984296 ],
          [0.16723955],
          [0.3466916 ]]],


        [[[0.9894619 ],
          [0.68196726],
          [0.6697364 ],
          [0.574231  ],
          [0.74522305],
          [0.9916614 ]],

         [[0.9894619 ],
          [0.68196726],
          [0.6697364 ],
          [0.574231  ],
          [0.6356139 ],
          [0.9916614 ]],

         [[0.6141999 ],
          [0.8980987 ],
          [0.6162541 ],
          [0.82278657],
          [0.76179016],
          [0.7963741 ]],

         [[0.95032585],
          [0.8980987 ],
          [0.965101  ],
          [0.8572593 ],
          [0.9540421 ],
          [0.86085355]],

         [[0.95032585],
          [0.94330704],
          [0.965101  ],
          [0.969929  ],
          [0.9540421 ],
          [0.90415394]],

         [[0.6376965 ],
          [0.94330704],
          [0.8398088 ],
          [0.969929  ],
          [0.8103272 ],
          [0.90415394]]],


        [[[0.73662794],
          [0.9587883 ],
          [0.7362367 ],
          [0.72742987],
          [0.9756522 ],
          [0.9820179 ]],

         [[0.7062254 ],
          [0.9142585 ],
          [0.90904546],
          [0.6103368 ],
          [0.9756522 ],
          [0.7229551 ]],

         [[0.6769639 ],
          [0.9437046 ],
          [0.92205906],
          [0.6103368 ],
          [0.9216902 ],
          [0.83450425]],

         [[0.65790343],
          [0.9437046 ],
          [0.92205906],
          [0.6899265 ],
          [0.9628891 ],
          [0.96999454]],

         [[0.95049715],
          [0.8467046 ],
          [0.52383447],
          [0.6899265 ],
          [0.98344886],
          [0.96999454]],

         [[0.95049715],
          [0.5384717 ],
          [0.39258742],
          [0.2735138 ],
          [0.98344886],
          [0.8833027 ]]],


        [[[0.8130144 ],
          [0.70845735],
          [0.9146714 ],
          [0.8597014 ],
          [0.8034004 ],
          [0.94977605]],

         [[0.98878694],
          [0.70845735],
          [0.9146714 ],
          [0.9420763 ],
          [0.88403857],
          [0.94977605]],

         [[0.98878694],
          [0.9873843 ],
          [0.8951663 ],
          [0.9420763 ],
          [0.88403857],
          [0.93417776]],

         [[0.98742855],
          [0.9873843 ],
          [0.92738736],
          [0.9108473 ],
          [0.71437037],
          [0.93417776]],

         [[0.89373493],
          [0.8899169 ],
          [0.92738736],
          [0.98231053],
          [0.5916846 ],
          [0.98664117]],

         [[0.89373493],
          [0.67891586],
          [0.27000427],
          [0.98231053],
          [0.5097976 ],
          [0.98664117]]]],



       [[[[0.9947728 ],
          [0.7931968 ],
          [0.97615325],
          [0.61601615],
          [0.9040189 ],
          [0.87498796]],

         [[0.9947728 ],
          [0.7931968 ],
          [0.97615325],
          [0.74093926],
          [0.9040189 ],
          [0.46138012]],

         [[0.91489995],
          [0.6027528 ],
          [0.8121971 ],
          [0.7762848 ],
          [0.8475237 ],
          [0.93484735]],

         [[0.91489995],
          [0.6027528 ],
          [0.8121971 ],
          [0.79878306],
          [0.76614535],
          [0.93484735]],

         [[0.6958946 ],
          [0.57530177],
          [0.9159267 ],
          [0.79878306],
          [0.76614535],
          [0.9242542 ]],

         [[0.6958946 ],
          [0.55129445],
          [0.9159267 ],
          [0.50322413],
          [0.44925952],
          [0.9242542 ]]],


        [[[0.67895544],
          [0.76196504],
          [0.7626523 ],
          [0.4006467 ],
          [0.7866273 ],
          [0.9121046 ]],

         [[0.73507655],
          [0.91747034],
          [0.55835974],
          [0.8585428 ],
          [0.7976395 ],
          [0.9121046 ]],

         [[0.94650924],
          [0.91747034],
          [0.48376763],
          [0.8585428 ],
          [0.8443123 ],
          [0.8114623 ]],

         [[0.94650924],
          [0.7857436 ],
          [0.8848729 ],
          [0.84123874],
          [0.8443123 ],
          [0.8228185 ]],

         [[0.9219196 ],
          [0.7857436 ],
          [0.8848729 ],
          [0.9646888 ],
          [0.47549772],
          [0.8228185 ]],

         [[0.8483038 ],
          [0.28996444],
          [0.8787999 ],
          [0.9646888 ],
          [0.47549772],
          [0.5278336 ]]],


        [[[0.4675933 ],
          [0.74442685],
          [0.8925375 ],
          [0.8356037 ],
          [0.5029098 ],
          [0.78715634]],

         [[0.8795893 ],
          [0.74442685],
          [0.61667883],
          [0.74855494],
          [0.8125911 ],
          [0.78715634]],

         [[0.9790461 ],
          [0.5543928 ],
          [0.91441584],
          [0.96408856],
          [0.8125911 ],
          [0.42711246]],

         [[0.9790461 ],
          [0.99719274],
          [0.91441584],
          [0.96408856],
          [0.9748367 ],
          [0.74177945]],

         [[0.57676613],
          [0.99719274],
          [0.6775496 ],
          [0.9166819 ],
          [0.9748367 ],
          [0.74177945]],

         [[0.49489665],
          [0.9670341 ],
          [0.6543045 ],
          [0.9166819 ],
          [0.26836586],
          [0.44017196]]],


        [[[0.14203727],
          [0.56497896],
          [0.9472382 ],
          [0.9052057 ],
          [0.48782766],
          [0.75561655]],

         [[0.90457416],
          [0.56497896],
          [0.5335735 ],
          [0.8599775 ],
          [0.6067631 ],
          [0.5665183 ]],

         [[0.99381065],
          [0.54113436],
          [0.37957633],
          [0.8599775 ],
          [0.8196615 ],
          [0.38979936]],

         [[0.99381065],
          [0.9057591 ],
          [0.8271409 ],
          [0.4979074 ],
          [0.8196615 ],
          [0.8465421 ]],

         [[0.930887  ],
          [0.9057591 ],
          [0.8271409 ],
          [0.4979074 ],
          [0.48601198],
          [0.8465421 ]],

         [[0.2640574 ],
          [0.6517755 ],
          [0.41197157],
          [0.32387578],
          [0.48601198],
          [0.41596413]]]],



       [[[[0.93766737],
          [0.6557833 ],
          [0.96163106],
          [0.58000803],
          [0.8052908 ],
          [0.97817945]],

         [[0.9271357 ],
          [0.6557833 ],
          [0.5721345 ],
          [0.9830557 ],
          [0.8052908 ],
          [0.91268003]],

         [[0.6309725 ],
          [0.5045259 ],
          [0.7845669 ],
          [0.9830557 ],
          [0.65807533],
          [0.91268003]],

         [[0.9617889 ],
          [0.96766806],
          [0.84392107],
          [0.9663595 ],
          [0.45306182],
          [0.6950886 ]],

         [[0.9617889 ],
          [0.96766806],
          [0.84392107],
          [0.6982744 ],
          [0.8777267 ],
          [0.6364641 ]],

         [[0.6665058 ],
          [0.6370592 ],
          [0.1566062 ],
          [0.5812464 ],
          [0.8777267 ],
          [0.45183027]]],


        [[[0.7988063 ],
          [0.53146446],
          [0.5702176 ],
          [0.9113904 ],
          [0.9375781 ],
          [0.826493  ]],

         [[0.7988063 ],
          [0.66016793],
          [0.5702176 ],
          [0.9113904 ],
          [0.9375781 ],
          [0.826493  ]],

         [[0.5044464 ],
          [0.66016793],
          [0.5242305 ],
          [0.8525171 ],
          [0.92188144],
          [0.90826774]],

         [[0.78013325],
          [0.65433896],
          [0.9426724 ],
          [0.842507  ],
          [0.92188144],
          [0.90826774]],

         [[0.9402406 ],
          [0.81811535],
          [0.9426724 ],
          [0.842507  ],
          [0.98072433],
          [0.48535776]],

         [[0.9402406 ],
          [0.81811535],
          [0.7643391 ],
          [0.66112924],
          [0.98072433],
          [0.48535776]]],


        [[[0.3684399 ],
          [0.8817321 ],
          [0.47725356],
          [0.47414458],
          [0.08643973],
          [0.7195823 ]],

         [[0.4035113 ],
          [0.8817321 ],
          [0.8639959 ],
          [0.41451335],
          [0.9645126 ],
          [0.99040055]],

         [[0.8493241 ],
          [0.8069451 ],
          [0.8639959 ],
          [0.41451335],
          [0.9645126 ],
          [0.99040055]],

         [[0.99916136],
          [0.8069451 ],
          [0.5965681 ],
          [0.48725343],
          [0.3998226 ],
          [0.8205066 ]],

         [[0.99916136],
          [0.627064  ],
          [0.60903716],
          [0.69017375],
          [0.24085116],
          [0.7780416 ]],

         [[0.8950143 ],
          [0.627064  ],
          [0.60903716],
          [0.69017375],
          [0.24085116],
          [0.37741518]]],


        [[[0.6532494 ],
          [0.84893167],
          [0.70469654],
          [0.9600433 ],
          [0.7199305 ],
          [0.62217784]],

         [[0.6532494 ],
          [0.71330404],
          [0.71076214],
          [0.9600433 ],
          [0.7762388 ],
          [0.4192499 ]],

         [[0.60069156],
          [0.41627502],
          [0.71076214],
          [0.8230089 ],
          [0.88625896],
          [0.4455737 ]],

         [[0.8487176 ],
          [0.64925563],
          [0.78964436],
          [0.73605096],
          [0.88625896],
          [0.55574083]],

         [[0.848788  ],
          [0.64925563],
          [0.78964436],
          [0.8497884 ],
          [0.97611344],
          [0.7876059 ]],

         [[0.848788  ],
          [0.26771557],
          [0.6760553 ],
          [0.8497884 ],
          [0.97611344],
          [0.7876059 ]]]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(3, 4, 6, 6, 1), dtype=float32, numpy=
array([[[[[0.9160998 ],
          [0.8758626 ],
          [0.8761374 ],
          [0.54561234],
          [0.75842535],
          [0.77709615]],

         [[0.9160998 ],
          [0.64694476],
          [0.8761374 ],
          [0.5827403 ],
          [0.92647123],
          [0.82939816]],

         [[0.88798106],
          [0.8076565 ],
          [0.84777486],
          [0.98196995],
          [0.92647123],
          [0.82939816]],

         [[0.76099443],
          [0.9537276 ],
          [0.8738774 ],
          [0.98196995],
          [0.69500744],
          [0.90702724]],

         [[0.76099443],
          [0.9537276 ],
          [0.8738774 ],
          [0.53658247],
          [0.7769618 ],
          [0.90702724]],

         [[0.68834186],
          [0.7859926 ],
          [0.36197078],
          [0.53658247],
          [0.7769618 ],
          [0.8246683 ]]],


        [[[0.77386713],
          [0.8165382 ],
          [0.6700059 ],
          [0.9953697 ],
          [0.5056853 ],
          [0.6337099 ]],

         [[0.77386713],
          [0.8165382 ],
          [0.6700059 ],
          [0.9083543 ],
          [0.95032275],
          [0.5871029 ]],

         [[0.4592322 ],
          [0.99169326],
          [0.8796836 ],
          [0.8062264 ],
          [0.95361626],
          [0.8133658 ]],

         [[0.963182  ],
          [0.99169326],
          [0.8796836 ],
          [0.9210217 ],
          [0.95361626],
          [0.96157396]],

         [[0.963182  ],
          [0.84984064],
          [0.91621494],
          [0.9210217 ],
          [0.9080354 ],
          [0.96157396]],

         [[0.8864231 ],
          [0.84984064],
          [0.91621494],
          [0.17385077],
          [0.45369375],
          [0.69348073]]],


        [[[0.73447514],
          [0.8161092 ],
          [0.5796298 ],
          [0.63510287],
          [0.91703475],
          [0.53186643]],

         [[0.73447514],
          [0.8161092 ],
          [0.5815035 ],
          [0.6474558 ],
          [0.9961864 ],
          [0.64757466]],

         [[0.58368003],
          [0.7803172 ],
          [0.7597774 ],
          [0.96069574],
          [0.9961864 ],
          [0.7927575 ]],

         [[0.38863397],
          [0.7652415 ],
          [0.7597774 ],
          [0.96069574],
          [0.91976035],
          [0.9516274 ]],

         [[0.71562576],
          [0.87140775],
          [0.84680927],
          [0.9893408 ],
          [0.8316499 ],
          [0.9516274 ]],

         [[0.71562576],
          [0.87140775],
          [0.84680927],
          [0.9893408 ],
          [0.8316499 ],
          [0.7199515 ]]],


        [[[0.66554403],
          [0.95536923],
          [0.8709153 ],
          [0.9062362 ],
          [0.90577793],
          [0.7631763 ]],

         [[0.66554403],
          [0.95536923],
          [0.8709153 ],
          [0.839072  ],
          [0.90577793],
          [0.7631763 ]],

         [[0.29594874],
          [0.94862366],
          [0.3506328 ],
          [0.94950056],
          [0.45290816],
          [0.8619237 ]],

         [[0.9889562 ],
          [0.94862366],
          [0.9686154 ],
          [0.94950056],
          [0.6267971 ],
          [0.96493924]],

         [[0.9889562 ],
          [0.52862406],
          [0.9686154 ],
          [0.8335947 ],
          [0.6819705 ],
          [0.96493924]],

         [[0.42449307],
          [0.52862406],
          [0.426803  ],
          [0.74127805],
          [0.6819705 ],
          [0.791662  ]]]],



       [[[[0.32535613],
          [0.7519318 ],
          [0.4027233 ],
          [0.75015056],
          [0.86074483],
          [0.9196845 ]],

         [[0.8489593 ],
          [0.98023975],
          [0.95020974],
          [0.75015056],
          [0.6594244 ],
          [0.9196845 ]],

         [[0.8489593 ],
          [0.98023975],
          [0.95020974],
          [0.54405785],
          [0.6978586 ],
          [0.41192138]],

         [[0.9078777 ],
          [0.9544748 ],
          [0.92449486],
          [0.47450817],
          [0.86106324],
          [0.8415606 ]],

         [[0.9078777 ],
          [0.9544748 ],
          [0.7726966 ],
          [0.8039179 ],
          [0.86106324],
          [0.8415606 ]],

         [[0.18543684],
          [0.81098294],
          [0.5520437 ],
          [0.8039179 ],
          [0.69371855],
          [0.63403845]]],


        [[[0.99571824],
          [0.17711842],
          [0.93742466],
          [0.3441069 ],
          [0.7201024 ],
          [0.79761636]],

         [[0.99571824],
          [0.74015224],
          [0.8853079 ],
          [0.59314656],
          [0.7201024 ],
          [0.95434475]],

         [[0.92697525],
          [0.74015224],
          [0.89673865],
          [0.7070861 ],
          [0.47519004],
          [0.95434475]],

         [[0.92697525],
          [0.6901834 ],
          [0.89673865],
          [0.7070861 ],
          [0.738462  ],
          [0.9973031 ]],

         [[0.7134197 ],
          [0.96336365],
          [0.5935761 ],
          [0.57365644],
          [0.8795706 ],
          [0.9973031 ]],

         [[0.7134197 ],
          [0.96336365],
          [0.5935761 ],
          [0.18554747],
          [0.8795706 ],
          [0.5912299 ]]],


        [[[0.36561966],
          [0.91056645],
          [0.57492244],
          [0.99474573],
          [0.90796506],
          [0.9872005 ]],

         [[0.32636178],
          [0.9226222 ],
          [0.6816491 ],
          [0.99474573],
          [0.90796506],
          [0.9327196 ]],

         [[0.6823157 ],
          [0.9226222 ],
          [0.89962983],
          [0.891994  ],
          [0.81742156],
          [0.9327196 ]],

         [[0.6967485 ],
          [0.6344173 ],
          [0.89962983],
          [0.81485856],
          [0.841961  ],
          [0.34482896]],

         [[0.6967485 ],
          [0.49892533],
          [0.7121229 ],
          [0.806106  ],
          [0.8479519 ],
          [0.8902228 ]],

         [[0.5396795 ],
          [0.13207531],
          [0.7121229 ],
          [0.806106  ],
          [0.8479519 ],
          [0.8902228 ]]],


        [[[0.5616666 ],
          [0.5589117 ],
          [0.9656664 ],
          [0.5169314 ],
          [0.82113504],
          [0.84442437]],

         [[0.99594533],
          [0.5589117 ],
          [0.9656664 ],
          [0.5169314 ],
          [0.82113504],
          [0.84442437]],

         [[0.99594533],
          [0.8226665 ],
          [0.87283564],
          [0.8543956 ],
          [0.8437885 ],
          [0.7649063 ]],

         [[0.64527845],
          [0.98810196],
          [0.9150816 ],
          [0.8543956 ],
          [0.8437885 ],
          [0.7199687 ]],

         [[0.64527845],
          [0.98810196],
          [0.9150816 ],
          [0.87424314],
          [0.5724349 ],
          [0.759272  ]],

         [[0.4204216 ],
          [0.82784545],
          [0.2544707 ],
          [0.87424314],
          [0.5724349 ],
          [0.759272  ]]]],



       [[[[0.55570066],
          [0.99490774],
          [0.9999999 ],
          [0.9676316 ],
          [0.9642067 ],
          [0.832428  ]],

         [[0.50938344],
          [0.99490774],
          [0.9999999 ],
          [0.9676316 ],
          [0.9404161 ],
          [0.832428  ]],

         [[0.49875855],
          [0.5166    ],
          [0.5861083 ],
          [0.99971795],
          [0.9404161 ],
          [0.54920554]],

         [[0.7930728 ],
          [0.7751188 ],
          [0.62192583],
          [0.99971795],
          [0.52156734],
          [0.66240394]],

         [[0.8319206 ],
          [0.7751188 ],
          [0.7005311 ],
          [0.8004844 ],
          [0.5459844 ],
          [0.9506606 ]],

         [[0.8319206 ],
          [0.13395524],
          [0.7005311 ],
          [0.8004844 ],
          [0.5459844 ],
          [0.9506606 ]]],


        [[[0.9501368 ],
          [0.6401367 ],
          [0.78668654],
          [0.65004253],
          [0.85436165],
          [0.874591  ]],

         [[0.9501368 ],
          [0.7009201 ],
          [0.52635956],
          [0.7161969 ],
          [0.85436165],
          [0.874591  ]],

         [[0.8160422 ],
          [0.7479774 ],
          [0.52635956],
          [0.7161969 ],
          [0.624773  ],
          [0.63718224]],

         [[0.76826096],
          [0.94525206],
          [0.69792604],
          [0.9155266 ],
          [0.624773  ],
          [0.48223746]],

         [[0.73393714],
          [0.94525206],
          [0.7030908 ],
          [0.9155266 ],
          [0.906011  ],
          [0.64657366]],

         [[0.73393714],
          [0.74193776],
          [0.7030908 ],
          [0.69255745],
          [0.906011  ],
          [0.64657366]]],


        [[[0.9089091 ],
          [0.7790085 ],
          [0.663903  ],
          [0.9679712 ],
          [0.76211965],
          [0.8513582 ]],

         [[0.98876035],
          [0.7790085 ],
          [0.7869332 ],
          [0.9679712 ],
          [0.9301896 ],
          [0.8513582 ]],

         [[0.98876035],
          [0.54569983],
          [0.9347427 ],
          [0.5062449 ],
          [0.9301896 ],
          [0.72677743]],

         [[0.81718683],
          [0.75327957],
          [0.9347427 ],
          [0.5136727 ],
          [0.92130077],
          [0.9733213 ]],

         [[0.9361156 ],
          [0.96473134],
          [0.81634223],
          [0.53266764],
          [0.94379675],
          [0.9733213 ]],

         [[0.9361156 ],
          [0.96473134],
          [0.21606791],
          [0.53266764],
          [0.94379675],
          [0.8149885 ]]],


        [[[0.7772882 ],
          [0.5102196 ],
          [0.63029873],
          [0.6442418 ],
          [0.8333578 ],
          [0.7298511 ]],

         [[0.7772882 ],
          [0.54132354],
          [0.63029873],
          [0.90775824],
          [0.92073464],
          [0.8063041 ]],

         [[0.847752  ],
          [0.54132354],
          [0.7421149 ],
          [0.9631933 ],
          [0.92073464],
          [0.8063041 ]],

         [[0.847752  ],
          [0.6128551 ],
          [0.7421149 ],
          [0.9631933 ],
          [0.68096197],
          [0.783371  ]],

         [[0.65375996],
          [0.8588513 ],
          [0.68674564],
          [0.71026313],
          [0.68096197],
          [0.81766486]],

         [[0.65375996],
          [0.8588513 ],
          [0.49557805],
          [0.6206976 ],
          [0.4250213 ],
          [0.81766486]]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.reduce_variance/1.py
{'res_cpu': <tf.Tensor: shape=(), dtype=float32, numpy=nan>, 'res_gpu': <tf.Tensor: shape=(), dtype=float32, numpy=nan>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.reduce_variance/2.py
{'res_cpu': <tf.Tensor: shape=(), dtype=float64, numpy=nan>, 'res_gpu': <tf.Tensor: shape=(), dtype=float64, numpy=nan>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_max/1.py
{'err_cpu': "Error:Segment id -1 out of range [0, 3), possibly because 'segment_ids' input is not sorted. [Op:SegmentMax]", 'res_gpu': <tf.Tensor: shape=(3, 1, 2, 3), dtype=float32, numpy=
array([[[[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38]]],


       [[[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38]]],


       [[[ 9.6068799e-01,  8.3267617e-01,  6.6459608e-01],
         [ 5.9439683e-01,  1.8705928e-01,  6.4049816e-01]]]],
      dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_max/2.py
{'res_cpu': <tf.Tensor: shape=(4, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.50958097, 0.2928716 , 0.05743611],
         [0.8082926 , 0.8019862 , 0.7585685 ]]],


       [[[0.16829228, 0.96350694, 0.6919303 ],
         [0.81783986, 0.9522543 , 0.33697248]]],


       [[[0.66747344, 0.64004135, 0.46036327],
         [0.21537387, 0.6093402 , 0.3009498 ]]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(4, 1, 2, 3), dtype=float32, numpy=
array([[[[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38]]],


       [[[ 5.0958097e-01,  2.9287159e-01,  5.7436109e-02],
         [ 8.0829263e-01,  8.0198622e-01,  7.5856853e-01]]],


       [[[ 1.6829228e-01,  9.6350694e-01,  6.9193029e-01],
         [ 8.1783986e-01,  9.5225430e-01,  3.3697248e-01]]],


       [[[ 6.6747344e-01,  6.4004135e-01,  4.6036327e-01],
         [ 2.1537387e-01,  6.0934019e-01,  3.0094981e-01]]]],
      dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_max/3.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentMax]', 'res_gpu': <tf.Tensor: shape=(3, 1, 2, 3), dtype=float32, numpy=
array([[[[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38]]],


       [[[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38]]],


       [[[ 6.4761841e-01,  2.8634202e-01,  8.9968693e-01],
         [ 7.5550878e-01,  6.3973844e-01,  2.6620877e-01]]]],
      dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_max/4.py
{'res_cpu': <tf.Tensor: shape=(4, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.3904214 , 0.36767554, 0.55690694],
         [0.65470386, 0.11845827, 0.6823151 ]]],


       [[[0.7263484 , 0.38661647, 0.38628888],
         [0.39859855, 0.3882457 , 0.7736139 ]]],


       [[[0.7465508 , 0.8063929 , 0.96757483],
         [0.66448224, 0.472502  , 0.0408529 ]]]], dtype=float32)>, 'res_gpu': <tf.Tensor: shape=(4, 1, 2, 3), dtype=float32, numpy=
array([[[[-3.4028235e+38, -3.4028235e+38, -3.4028235e+38],
         [-3.4028235e+38, -3.4028235e+38, -3.4028235e+38]]],


       [[[ 3.9042139e-01,  3.6767554e-01,  5.5690694e-01],
         [ 6.5470386e-01,  1.1845827e-01,  6.8231511e-01]]],


       [[[ 7.2634840e-01,  3.8661647e-01,  3.8628888e-01],
         [ 3.9859855e-01,  3.8824570e-01,  7.7361393e-01]]],


       [[[ 7.4655080e-01,  8.0639291e-01,  9.6757483e-01],
         [ 6.6448224e-01,  4.7250199e-01,  4.0852904e-02]]]],
      dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/1.py
{'err_cpu': "Error:Segment id -1 out of range [0, 3), possibly because 'segment_ids' input is not sorted. [Op:SegmentMean]", 'res_gpu': <tf.Tensor: shape=(3, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.15908039, 0.81318843, 0.26816714],
         [0.98871934, 0.9888966 , 0.01031816]]],


       [[[0.4739989 , 0.7025423 , 0.46601868],
         [0.19016266, 0.72930026, 0.3308921 ]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/10.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentMean]', 'res_gpu': <tf.Tensor: shape=(2, 1, 2, 3), dtype=float32, numpy=
array([[[[0.7879803 , 0.6642672 , 0.8248029 ],
         [0.944958  , 0.6120628 , 0.56285465]]],


       [[[1.2025051 , 1.4104749 , 0.19015205],
         [1.1638067 , 0.38879812, 0.50936913]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/11.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentMean]', 'res_gpu': <tf.Tensor: shape=(4, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.28953528, 0.6464199 , 0.82131517],
         [0.7411498 , 0.29879558, 0.33409035]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/12.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentMean]', 'res_gpu': <tf.Tensor: shape=(3, 1, 2, 3), dtype=float32, numpy=
array([[[[0.       , 0.       , 0.       ],
         [0.       , 0.       , 0.       ]]],


       [[[0.       , 0.       , 0.       ],
         [0.       , 0.       , 0.       ]]],


       [[[1.4912977, 1.3233019, 2.172201 ],
         [0.7074714, 1.2277675, 1.9023105]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/13.py
{'err_cpu': "Error:Segment id -1 out of range [0, 5), possibly because 'segment_ids' input is not sorted. [Op:SegmentMean]", 'res_gpu': <tf.Tensor: shape=(5, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.71114314, 0.9885458 , 0.33213675],
         [0.3215903 , 0.3102721 , 0.08520591]]],


       [[[0.3907405 , 0.20001161, 0.5672748 ],
         [0.9211124 , 0.5850003 , 0.10451031]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/2.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentMean]', 'res_gpu': <tf.Tensor: shape=(1025, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       ...,


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.35084856, 0.94992435, 0.01462734],
         [0.23159301, 0.9375516 , 0.43525326]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/3.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentMean]', 'res_gpu': <tf.Tensor: shape=(2, 1, 2, 3), dtype=float32, numpy=
array([[[[0.8657576 , 0.6566111 , 0.71238375],
         [0.46961987, 0.61668646, 1.1623561 ]]],


       [[[0.21101904, 0.17365699, 0.09919536],
         [0.09350483, 0.015716  , 0.07687657]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/4.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentMean]', 'res_gpu': <tf.Tensor: shape=(3, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.820274  , 0.5670321 , 0.31006074],
         [0.6115531 , 0.85991335, 0.5396229 ]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/5.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentMean]', 'res_gpu': <tf.Tensor: shape=(3, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.06371224, 0.54463434, 0.9420885 ],
         [0.00803041, 0.9718236 , 0.07589269]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/6.py
{'err_cpu': "Error:Segment id -15 out of range [0, 3), possibly because 'segment_ids' input is not sorted. [Op:SegmentMean]", 'res_gpu': <tf.Tensor: shape=(3, 1, 2, 3), dtype=float32, numpy=
array([[[[0.13010204, 0.04549789, 0.682992  ],
         [0.6823207 , 0.31949973, 0.05316973]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.8817754 , 0.74500287, 0.6219317 ],
         [0.02121723, 0.30159223, 0.6608232 ]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/7.py
{'err_cpu': "Error:Segment id -1 out of range [0, 5), possibly because 'segment_ids' input is not sorted. [Op:SegmentMean]", 'res_gpu': <tf.Tensor: shape=(5, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[1.1622527 , 0.13458645, 1.0238538 ],
         [0.7961607 , 1.304885  , 1.4982712 ]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/8.py
{'err_cpu': "Error:Segment id -16 out of range [0, 3), possibly because 'segment_ids' input is not sorted. [Op:SegmentMean]", 'res_gpu': <tf.Tensor: shape=(3, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[0.64962363, 0.56934464, 0.9953791 ],
         [0.3229196 , 0.3796177 , 0.9073522 ]]],


       [[[0.34995627, 0.7209978 , 0.4325583 ],
         [0.32463443, 0.40306818, 0.9417888 ]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_mean/9.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentMean]', 'res_gpu': <tf.Tensor: shape=(2, 1, 2, 3), dtype=float32, numpy=
array([[[[0.        , 0.        , 0.        ],
         [0.        , 0.        , 0.        ]]],


       [[[1.3061007 , 1.0042918 , 2.1687422 ],
         [2.015054  , 1.2084216 , 0.89461744]]]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_prod/1.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentProd]', 'res_gpu': <tf.Tensor: shape=(3, 3), dtype=float32, numpy=
array([[1.        , 1.        , 1.        ],
       [1.        , 1.        , 1.        ],
       [0.5989991 , 0.11196658, 0.02996912]], dtype=float32)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_prod/2.py
{'err_cpu': "Error:Segment id -2 out of range [0, 2), possibly because 'segment_ids' input is not sorted. [Op:SegmentProd]", 'res_gpu': <tf.Tensor: shape=(2, 3), dtype=float64, numpy=
array([[1.        , 1.        , 1.        ],
       [0.81856844, 0.90690215, 0.41943477]])>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_prod/3.py
{'err_cpu': "Error:Segment id -1 out of range [0, 3), possibly because 'segment_ids' input is not sorted. [Op:SegmentProd]", 'res_gpu': <tf.Tensor: shape=(3, 3), dtype=float64, numpy=
array([[1.        , 1.        , 1.        ],
       [1.        , 1.        , 1.        ],
       [0.91499209, 0.61316259, 0.63314517]])>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_prod/4.py
{'err_cpu': "Error:Segment id -1 out of range [0, 3), possibly because 'segment_ids' input is not sorted. [Op:SegmentProd]", 'res_gpu': <tf.Tensor: shape=(3, 3), dtype=float64, numpy=
array([[1.        , 1.        , 1.        ],
       [1.        , 1.        , 1.        ],
       [0.09657739, 0.27184407, 0.52359932]])>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_prod/5.py
{'err_cpu': "Error:Segment id -2 out of range [0, 2), possibly because 'segment_ids' input is not sorted. [Op:SegmentProd]", 'res_gpu': <tf.Tensor: shape=(2, 3), dtype=float16, numpy=
array([[1.    , 1.    , 1.    ],
       [0.3086, 0.3252, 0.994 ]], dtype=float16)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_prod/6.py
{'err_cpu': 'Error:segment ids are not increasing [Op:SegmentProd]', 'res_gpu': <tf.Tensor: shape=(1, 3), dtype=float16, numpy=array([[0.636  , 0.09686, 0.6533 ]], dtype=float16)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_prod/7.py
{'err_cpu': "Error:Segment id -2 out of range [0, 1), possibly because 'segment_ids' input is not sorted. [Op:SegmentProd]", 'res_gpu': <tf.Tensor: shape=(1, 3), dtype=float64, numpy=array([[0.43838555, 0.51685593, 0.54389271]])>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.segment_prod/8.py
{'err_cpu': "Error:Segment id -1 out of range [0, 2), possibly because 'segment_ids' input is not sorted. [Op:SegmentProd]", 'res_gpu': <tf.Tensor: shape=(2, 3), dtype=float16, numpy=
array([[1.    , 1.    , 1.    ],
       [0.6895, 0.287 , 0.338 ]], dtype=float16)>}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/28.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999608 , 0.99996364, 0.99998164, 0.9999707 , 0.99999   ,
        0.9999881 , 0.9999999 , 0.9999888 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[216050, 211869,  58410, 207830,  90850,  24046,  88680, 225813]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999999 , 0.99999   , 0.9999888 , 0.9999881 , 0.99998164,
        0.9999707 , 0.99996364, 0.9999608 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 88680,  90850, 225813,  24046,  58410, 207830, 211869, 216050]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/1.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999702 , 0.9999777 , 0.9999752 , 0.9999858 , 0.9999931 ,
        0.99999595, 0.9999801 , 0.9999938 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 22344,  78321,   5600, 221445,  74891,  74903,  78927, 107946]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999595, 0.9999938 , 0.9999931 , 0.9999858 , 0.9999801 ,
        0.9999777 , 0.9999752 , 0.9999702 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 74903, 107946,  74891, 221445,  78927,  78321,   5600,  22344]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/10.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=uint32, numpy=array([[256, 256, 256, 256, 256, 256, 256, 256]], dtype=uint32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=array([[2675, 2220, 1590, 2149, 1373, 1519,  282, 2063]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=uint32, numpy=array([[256, 256, 256, 256, 256, 256, 256, 256]], dtype=uint32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=array([[ 282, 1373, 1519, 1590, 2063, 2149, 2220, 2675]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/11.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.999987  , 0.99999297]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 2), dtype=int32, numpy=array([[141534,  37068]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.99999297, 0.999987  ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 2), dtype=int32, numpy=array([[ 37068, 141534]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/12.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[0.99998665, 0.9999925 , 0.999992  , 0.99999404, 0.99999976,
        0.9999938 , 0.99999595]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 7), dtype=int32, numpy=
array([[ 55845,  89864,  10679,  12022,  22946, 114795, 135794]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[0.99999976, 0.99999595, 0.99999404, 0.9999938 , 0.9999925 ,
        0.999992  , 0.99998665]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 7), dtype=int32, numpy=
array([[ 22946, 135794,  12022, 114795,  89864,  10679,  55845]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/13.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999645 , 0.999977  , 0.99997294, 0.99997747, 0.99998593,
        0.99999857, 0.99998903, 0.99998033]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 69444, 182754,  44458, 175495, 158340,  50150,  46731, 214340]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999857, 0.99998903, 0.99998593, 0.99998033, 0.99997747,
        0.999977  , 0.99997294, 0.9999645 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 50150,  46731, 158340, 214340, 175495, 182754,  44458,  69444]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/14.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[0.99996376, 0.99996865, 0.99996483, 0.99997616, 0.999977  ,
        0.9999759 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 6), dtype=int32, numpy=array([[ 83754,  36986, 127873,  21272,   2090, 101909]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[0.999977  , 0.99997616, 0.9999759 , 0.99996865, 0.99996483,
        0.99996376]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 6), dtype=int32, numpy=array([[  2090,  21272, 101909,  36986, 127873,  83754]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/15.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999484, 0.9999634, 0.9999497, 0.9999652, 0.9999912, 0.9999697,
        0.9999893, 0.9999838]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 73682, 122432,  35965,  44684,  63089,  28040,     35,  71043]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999912, 0.9999893, 0.9999838, 0.9999697, 0.9999652, 0.9999634,
        0.9999497, 0.9999484]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 63089,     35,  71043,  28040,  44684, 122432,  35965,  73682]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/16.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99995744, 0.9999591 , 0.99996555, 0.9999665 , 0.99998593,
        0.9999876 , 0.99999356, 0.99997544]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 87823,  52566,  25419,  64269, 118249,  17842, 112192, 118665]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999356, 0.9999876 , 0.99998593, 0.99997544, 0.9999665 ,
        0.99996555, 0.9999591 , 0.99995744]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[112192,  17842, 118249, 118665,  64269,  25419,  52566,  87823]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/17.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=int16, numpy=array([[256, 256, 256, 256, 256, 256, 256, 256]], dtype=int16)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=array([[4966, 4688, 3047, 4532, 1112,  145, 1849, 3825]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=int16, numpy=array([[256, 256, 256, 256, 256, 256, 256, 256]], dtype=int16)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=array([[ 145, 1112, 1849, 3047, 3825, 4532, 4688, 4966]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/18.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999708 , 0.9999802 , 0.99998116, 0.9999857 , 0.99998844,
        0.9999902 , 0.99999714, 0.9999869 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 94830, 228539,    459, 243464,   1828, 164155, 187231, 164494]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999714, 0.9999902 , 0.99998844, 0.9999869 , 0.9999857 ,
        0.99998116, 0.9999802 , 0.9999708 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[187231, 164155,   1828, 164494, 243464,    459, 228539,  94830]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/19.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[0.99997807, 0.9999883 , 0.9999857 , 0.9999982 , 0.99998975,
        0.99999475]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 6), dtype=int32, numpy=array([[ 37746,  64865, 183409, 111503,   2186, 184381]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[0.9999982 , 0.99999475, 0.99998975, 0.9999883 , 0.9999857 ,
        0.99997807]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 6), dtype=int32, numpy=array([[111503, 184381,   2186,  64865, 183409,  37746]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/2.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[0.9999753, 0.9999821, 0.9999801, 0.9999924, 0.999998 , 0.9999964,
        0.9999857]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 7), dtype=int32, numpy=
array([[235292, 120808, 194462,  34753,  98921, 216890,  69701]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[0.999998 , 0.9999964, 0.9999924, 0.9999857, 0.9999821, 0.9999801,
        0.9999753]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 7), dtype=int32, numpy=
array([[ 98921, 216890,  34753,  69701, 120808, 194462, 235292]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/20.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999616 , 0.9999664 , 0.99996424, 0.9999702 , 0.9999888 ,
        0.9999721 , 0.99999833, 0.999974  ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[128550,  28471,  32883, 203543, 183490,  54126, 179398, 136740]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999833, 0.9999888 , 0.999974  , 0.9999721 , 0.9999702 ,
        0.9999664 , 0.99996424, 0.9999616 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[179398, 183490, 136740,  54126, 203543,  28471,  32883, 128550]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/21.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[0.99995136, 0.9999536 , 0.9999517 , 0.9999863 , 0.9999651 ,
        0.9999877 , 0.9999697 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 7), dtype=int32, numpy=
array([[105690,  89556, 112298,  62403,  36542, 106928, 127601]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 7), dtype=float32, numpy=
array([[0.9999877 , 0.9999863 , 0.9999697 , 0.9999651 , 0.9999536 ,
        0.9999517 , 0.99995136]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 7), dtype=int32, numpy=
array([[106928,  62403, 127601,  36542,  89556, 112298, 105690]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/22.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999783, 0.9999808, 0.9999801, 0.9999819, 0.9999999, 0.9999962,
        0.9999937, 0.999984 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[179533, 147143,  11621, 158765, 147237, 151446, 157092, 216358]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999999, 0.9999962, 0.9999937, 0.999984 , 0.9999819, 0.9999808,
        0.9999801, 0.9999783]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[147237, 151446, 157092, 216358, 158765, 147143,  11621, 179533]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/23.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99990845, 0.99991274, 0.99996626, 0.999943  , 0.99998844,
        0.9999685 , 0.99996877, 0.9999596 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 62492,  83568,  77057,  95449,  44452,   6788, 104930, 116528]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99998844, 0.99996877, 0.9999685 , 0.99996626, 0.9999596 ,
        0.999943  , 0.99991274, 0.99990845]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 44452, 104930,   6788,  77057, 116528,  95449,  83568,  62492]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/24.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 12, 181, 8), dtype=float32, numpy=
array([[[[0.86057067, 0.86833   , 0.92845297, ..., 0.9845787 ,
          0.9569719 , 0.9786445 ],
         [0.9219959 , 0.9323069 , 0.933298  , ..., 0.991184  ,
          0.9840356 , 0.9835373 ],
         [0.88223505, 0.92422557, 0.89916694, ..., 0.92668486,
          0.9519111 , 0.987386  ],
         ...,
         [0.92140186, 0.93292403, 0.96099067, ..., 0.9732202 ,
          0.99577165, 0.9970385 ],
         [0.8606012 , 0.9017657 , 0.930022  , ..., 0.95102394,
          0.99585176, 0.9494283 ],
         [0.9245758 , 0.92574084, 0.9549613 , ..., 0.981532  ,
          0.96739185, 0.9850298 ]],

        [[0.9182663 , 0.9220853 , 0.9384705 , ..., 0.98031914,
          0.9860827 , 0.94317436],
         [0.8873272 , 0.88950324, 0.89350367, ..., 0.9146161 ,
          0.97344565, 0.9961076 ],
         [0.8620446 , 0.8628411 , 0.9071559 , ..., 0.995468  ,
          0.9421371 , 0.99556375],
         ...,
         [0.8527446 , 0.8888587 , 0.8921099 , ..., 0.97844374,
          0.943154  , 0.93027425],
         [0.92191756, 0.9383484 , 0.9223449 , ..., 0.9432126 ,
          0.931468  , 0.9784068 ],
         [0.89941096, 0.9263201 , 0.91262925, ..., 0.95393634,
          0.9509767 , 0.94099915]],

        [[0.76700795, 0.90571356, 0.8049921 , ..., 0.84744513,
          0.99967027, 0.9195765 ],
         [0.8701594 , 0.9039898 , 0.8744621 , ..., 0.9845567 ,
          0.98139143, 0.98790276],
         [0.90779245, 0.9090717 , 0.94106185, ..., 0.9837005 ,
          0.9442086 , 0.99692285],
         ...,
         [0.92696834, 0.93880594, 0.9606279 , ..., 0.9693185 ,
          0.97790337, 0.99643946],
         [0.87535286, 0.8768158 , 0.9181504 , ..., 0.9316186 ,
          0.94888437, 0.91115177],
         [0.8685385 , 0.89145625, 0.94857836, ..., 0.9833664 ,
          0.9576231 , 0.9974575 ]],

        ...,

        [[0.88627815, 0.89018226, 0.9115008 , ..., 0.9145422 ,
          0.96406066, 0.95001435],
         [0.86832297, 0.87911034, 0.89552915, ..., 0.8970269 ,
          0.95906043, 0.9579278 ],
         [0.9082221 , 0.95819616, 0.9262291 , ..., 0.93103445,
          0.9579363 , 0.97923756],
         ...,
         [0.860435  , 0.8695929 , 0.94020414, ..., 0.97219586,
          0.99427533, 0.9161627 ],
         [0.8863648 , 0.9103799 , 0.88872695, ..., 0.9966961 ,
          0.91759145, 0.9313277 ],
         [0.93571234, 0.9453192 , 0.9505724 , ..., 0.97563934,
          0.9768195 , 0.9712559 ]],

        [[0.9104912 , 0.94994485, 0.92495775, ..., 0.9643934 ,
          0.993086  , 0.98153746],
         [0.92784846, 0.9305141 , 0.951867  , ..., 0.9625244 ,
          0.99030244, 0.9791378 ],
         [0.86059725, 0.8880007 , 0.96327615, ..., 0.97832954,
          0.99948263, 0.9502355 ],
         ...,
         [0.8332716 , 0.85008395, 0.8842213 , ..., 0.9925283 ,
          0.88473713, 0.8961017 ],
         [0.8679271 , 0.8884704 , 0.87160707, ..., 0.9050343 ,
          0.94602346, 0.9205816 ],
         [0.93201435, 0.9378096 , 0.9503635 , ..., 0.9823669 ,
          0.9657403 , 0.97165287]],

        [[0.93118167, 0.93414366, 0.9537772 , ..., 0.9605683 ,
          0.98286855, 0.9851767 ],
         [0.77991056, 0.83235943, 0.8137189 , ..., 0.92811596,
          0.93678355, 0.91053975],
         [0.8614167 , 0.8683878 , 0.9285214 , ..., 0.955714  ,
          0.93997586, 0.9815271 ],
         ...,
         [0.8567414 , 0.88807094, 0.8777164 , ..., 0.8997134 ,
          0.9813473 , 0.9940597 ],
         [0.8318293 , 0.83263755, 0.8798858 , ..., 0.956079  ,
          0.91638803, 0.9419782 ],
         [0.81839275, 0.87431526, 0.8717879 , ..., 0.8765851 ,
          0.98420024, 0.9287497 ]]]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 12, 181, 8), dtype=int32, numpy=
array([[[[ 2, 53, 39, ..., 19, 20, 56],
         [ 6,  1,  3, ..., 44, 10, 51],
         [28, 46,  8, ...,  7,  6, 32],
         ...,
         [63, 47, 35, ..., 22, 30, 50],
         [16, 57,  9, ...,  0,  3, 54],
         [27, 55, 56, ..., 42, 51, 63]],

        [[40, 38, 31, ..., 26,  0, 57],
         [32, 23, 19, ..., 27, 20, 41],
         [54, 35, 36, ..., 24,  7, 44],
         ...,
         [24, 40,  2, ..., 34, 13, 49],
         [54, 37, 30, ..., 19, 26, 62],
         [37, 14,  0, ..., 16, 11, 43]],

        [[33, 21, 15, ...,  2, 13, 59],
         [31, 60,  1, ..., 42, 30, 58],
         [56, 41, 30, ...,  3, 24, 45],
         ...,
         [46, 43, 19, ...,  9, 22, 55],
         [ 3, 53,  2, ..., 49, 36, 38],
         [34, 28, 15, ..., 23,  7, 61]],

        ...,

        [[60,  1,  6, ...,  2,  7, 21],
         [47, 31, 19, ..., 22, 53, 60],
         [43, 55,  2, ...,  5,  9, 61],
         ...,
         [14, 50,  0, ..., 32, 43, 54],
         [54, 37, 15, ...,  9, 26, 53],
         [35, 13, 29, ..., 14, 19, 48]],

        [[53,  7, 18, ..., 45, 36, 63],
         [34, 57,  2, ...,  8, 25, 60],
         [25, 44, 28, ..., 19, 22, 36],
         ...,
         [36, 20,  5, ..., 34, 29, 50],
         [45, 62, 30, ..., 18, 24, 40],
         [23, 40,  8, ..., 13, 28, 41]],

        [[51, 27, 22, ..., 28, 32, 49],
         [35, 62,  0, ..., 39,  8, 59],
         [57, 17, 23, ...,  0,  6, 53],
         ...,
         [30, 60, 11, ...,  3,  6, 58],
         [24, 25, 32, ..., 36, 17, 38],
         [ 9, 14, 15, ..., 31, 36, 49]]]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 12, 181, 8), dtype=float32, numpy=
array([[[[0.9913424 , 0.9845787 , 0.9786445 , ..., 0.9009862 ,
          0.86833   , 0.86057067],
         [0.991184  , 0.9840356 , 0.9835373 , ..., 0.933298  ,
          0.9323069 , 0.9219959 ],
         [0.987386  , 0.98345613, 0.9519111 , ..., 0.92422557,
          0.89916694, 0.88223505],
         ...,
         [0.9970385 , 0.99577165, 0.9907701 , ..., 0.95731413,
          0.93292403, 0.92140186],
         [0.99585176, 0.9934329 , 0.95102394, ..., 0.930022  ,
          0.9017657 , 0.8606012 ],
         [0.9850298 , 0.981532  , 0.9705863 , ..., 0.9541805 ,
          0.92574084, 0.9245758 ]],

        [[0.9860827 , 0.98031914, 0.94317436, ..., 0.9254205 ,
          0.9220853 , 0.9182663 ],
         [0.9961076 , 0.97344565, 0.9146161 , ..., 0.88994277,
          0.88950324, 0.8873272 ],
         [0.99556375, 0.995468  , 0.98292565, ..., 0.9071559 ,
          0.8628411 , 0.8620446 ],
         ...,
         [0.97844374, 0.943154  , 0.93027425, ..., 0.8921099 ,
          0.8888587 , 0.8527446 ],
         [0.9784068 , 0.9432126 , 0.94040096, ..., 0.931468  ,
          0.9223449 , 0.92191756],
         [0.9934486 , 0.95393634, 0.9509767 , ..., 0.9263201 ,
          0.91262925, 0.89941096]],

        [[0.99967027, 0.9964949 , 0.9195765 , ..., 0.84744513,
          0.8049921 , 0.76700795],
         [0.98790276, 0.9845567 , 0.98139143, ..., 0.9039898 ,
          0.8744621 , 0.8701594 ],
         [0.99692285, 0.9837005 , 0.9442086 , ..., 0.9124211 ,
          0.9090717 , 0.90779245],
         ...,
         [0.99643946, 0.97790337, 0.9748012 , ..., 0.9606279 ,
          0.93880594, 0.92696834],
         [0.94888437, 0.9316186 , 0.9181504 , ..., 0.8991115 ,
          0.8768158 , 0.87535286],
         [0.9974575 , 0.9833664 , 0.9576231 , ..., 0.9350462 ,
          0.89145625, 0.8685385 ]],

        ...,

        [[0.9815223 , 0.96406066, 0.95001435, ..., 0.9115008 ,
          0.89018226, 0.88627815],
         [0.9754015 , 0.95906043, 0.9579278 , ..., 0.8864498 ,
          0.87911034, 0.86832297],
         [0.97923756, 0.9733521 , 0.96560276, ..., 0.93103445,
          0.9262291 , 0.9082221 ],
         ...,
         [0.99427533, 0.97219586, 0.9440321 , ..., 0.9045832 ,
          0.8695929 , 0.860435  ],
         [0.9966961 , 0.9313277 , 0.9230944 , ..., 0.9103799 ,
          0.88872695, 0.8863648 ],
         [0.9862894 , 0.9768195 , 0.97563934, ..., 0.9505724 ,
          0.9453192 , 0.93571234]],

        [[0.993086  , 0.98153746, 0.9748515 , ..., 0.94994485,
          0.92495775, 0.9104912 ],
         [0.99030244, 0.9791378 , 0.9646379 , ..., 0.9427506 ,
          0.9305141 , 0.92784846],
         [0.99948263, 0.99745154, 0.97832954, ..., 0.9448283 ,
          0.8880007 , 0.86059725],
         ...,
         [0.9925283 , 0.91669846, 0.8961017 , ..., 0.8842213 ,
          0.85008395, 0.8332716 ],
         [0.94602346, 0.9205816 , 0.9092361 , ..., 0.8884704 ,
          0.87160707, 0.8679271 ],
         [0.9823669 , 0.97165537, 0.97165287, ..., 0.9503635 ,
          0.9378096 , 0.93201435]],

        [[0.99467087, 0.9851767 , 0.98286855, ..., 0.9537772 ,
          0.93414366, 0.93118167],
         [0.9748819 , 0.93678355, 0.92811596, ..., 0.83235943,
          0.8137189 , 0.77991056],
         [0.99201214, 0.9815271 , 0.955714  , ..., 0.9027338 ,
          0.8683878 , 0.8614167 ],
         ...,
         [0.9940597 , 0.9813473 , 0.95081055, ..., 0.88807094,
          0.8777164 , 0.8567414 ],
         [0.956079  , 0.9555119 , 0.9419782 , ..., 0.8790122 ,
          0.83263755, 0.8318293 ],
         [0.98420024, 0.9492463 , 0.9287497 , ..., 0.87431526,
          0.8717879 , 0.81839275]]]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 12, 181, 8), dtype=int32, numpy=
array([[[[11, 19, 56, ..., 49, 53,  2],
         [44, 10, 51, ...,  3,  1,  6],
         [32, 18,  6, ..., 46,  8, 28],
         ...,
         [50, 30, 25, ..., 14, 47, 63],
         [ 3, 29,  0, ...,  9, 57, 16],
         [63, 42, 20, ..., 47, 55, 27]],

        [[ 0, 26, 57, ..., 12, 38, 40],
         [41, 20, 27, ..., 38, 23, 32],
         [44, 24, 58, ..., 36, 35, 54],
         ...,
         [34, 13, 49, ...,  2, 40, 24],
         [62, 19, 58, ..., 26, 30, 54],
         [ 4, 16, 11, ..., 14,  0, 37]],

        [[13, 54, 59, ...,  2, 15, 33],
         [58, 42, 30, ..., 60,  1, 31],
         [45,  3, 24, ..., 22, 41, 56],
         ...,
         [55, 22, 15, ..., 19, 43, 46],
         [36, 49,  2, ..., 16, 53,  3],
         [61, 23,  7, ..., 12, 28, 34]],

        ...,

        [[ 0,  7, 21, ...,  6,  1, 60],
         [32, 53, 60, ..., 63, 31, 47],
         [61, 45, 35, ...,  5,  2, 43],
         ...,
         [43, 32, 16, ..., 21, 50, 14],
         [ 9, 53, 55, ..., 37, 15, 54],
         [59, 19, 14, ..., 29, 13, 35]],

        [[36, 63, 59, ...,  7, 18, 53],
         [25, 60, 20, ..., 23, 57, 34],
         [22, 26, 19, ..., 40, 44, 25],
         ...,
         [34, 40, 50, ...,  5, 20, 36],
         [24, 40, 10, ..., 62, 30, 45],
         [13,  1, 41, ...,  8, 40, 23]],

        [[20, 49, 32, ..., 22, 27, 51],
         [26,  8, 39, ..., 62,  0, 35],
         [ 1, 53,  0, ..., 37, 17, 57],
         ...,
         [58,  6,  4, ..., 60, 11, 30],
         [36,  1, 38, ..., 58, 25, 24],
         [36, 43, 49, ..., 14, 15,  9]]]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/25.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.9999963 , 0.99999785]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 2), dtype=int32, numpy=array([[110857, 108365]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.99999785, 0.9999963 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 2), dtype=int32, numpy=array([[108365, 110857]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/26.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[0.9999546 , 0.9999831 , 0.99998057, 0.99999046, 0.9999914 ,
        0.99999976]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 6), dtype=int32, numpy=array([[52202, 49063, 71248, 18540, 13948, 90012]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 6), dtype=float32, numpy=
array([[0.99999976, 0.9999914 , 0.99999046, 0.9999831 , 0.99998057,
        0.9999546 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 6), dtype=int32, numpy=array([[90012, 13948, 18540, 49063, 71248, 52202]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/27.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999771 , 0.9999777 , 0.9999839 , 0.99998915, 0.99999857,
        0.99999094, 0.9999876 , 0.9999962 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[219207, 211431, 127810, 224465, 149741,  43394, 221983, 223488]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999857, 0.9999962 , 0.99999094, 0.99998915, 0.9999876 ,
        0.9999839 , 0.9999777 , 0.9999771 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[149741, 223488,  43394, 224465, 221983, 127810, 211431, 219207]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/29.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 1, 8), dtype=int32, numpy=array([[[  9,  21, 224, 186, 249, 235, 240, 205]]], dtype=int32)>, indices=<tf.Tensor: shape=(1, 1, 8), dtype=int32, numpy=array([[[12, 16,  3, 18, 10,  0,  2, 11]]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 1, 8), dtype=int32, numpy=array([[[249, 240, 235, 224, 205, 186,  21,   9]]], dtype=int32)>, indices=<tf.Tensor: shape=(1, 1, 8), dtype=int32, numpy=array([[[10,  2,  0,  3, 11, 18, 16, 12]]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/3.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 60), dtype=float32, numpy=
array([[0.9995111 , 0.9995177 , 0.9995161 , 0.9995235 , 0.999594  ,
        0.9996325 , 0.99954224, 0.999578  , 0.9996067 , 0.9997226 ,
        0.99965584, 0.99967086, 0.99964845, 0.9996296 , 0.99954414,
        0.99961805, 0.99980104, 0.9996586 , 0.9996551 , 0.99983037,
        0.9998014 , 0.9997046 , 0.9996569 , 0.9997537 , 0.9997908 ,
        0.99970293, 0.99968696, 0.9997021 , 0.9996425 , 0.9995611 ,
        0.9999248 , 0.9998447 , 0.9997984 , 0.999979  , 0.9999974 ,
        0.99988437, 0.9997268 , 0.99992955, 0.9999094 , 0.99998784,
        0.99990416, 0.99993694, 0.99997497, 0.99992   , 0.9997287 ,
        0.9997026 , 0.99999666, 0.9998568 , 0.99985874, 0.99980986,
        0.9998652 , 0.99983037, 0.99980986, 0.99971235, 0.9997959 ,
        0.99980867, 0.99993277, 0.99983394, 0.99999094, 0.9996973 ]],
      dtype=float32)>, indices=<tf.Tensor: shape=(1, 60), dtype=int32, numpy=
array([[109775,  69763,  16819,   1931,  41146,  26090,  26743,   3774,
        110112,  72706,  39290,  31129,  31877,  53306, 123910, 104209,
         47947,  23405,  93773,  61639,   6716,  50956,  15275,  28655,
        123367, 117622,  94178,   3416, 125078,  92346,  27074,  28700,
         25231,  35917, 121418,  68263, 120147,  10601,  99122,  28542,
           304,  98151,  88838,  77573, 106903,  26446,  56622, 105360,
         61831,  84250,  53536,  33357,  11765,  23318,   4069,  22892,
        125572,  25868,  58387, 125659]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 60), dtype=float32, numpy=
array([[0.9999974 , 0.99999666, 0.99999094, 0.99998784, 0.999979  ,
        0.99997497, 0.99993694, 0.99993277, 0.99992955, 0.9999248 ,
        0.99992   , 0.9999094 , 0.99990416, 0.99988437, 0.9998652 ,
        0.99985874, 0.9998568 , 0.9998447 , 0.99983394, 0.99983037,
        0.99983037, 0.99980986, 0.99980986, 0.99980867, 0.9998014 ,
        0.99980104, 0.9997984 , 0.9997959 , 0.9997908 , 0.9997537 ,
        0.9997287 , 0.9997268 , 0.9997226 , 0.99971235, 0.9997046 ,
        0.99970293, 0.9997026 , 0.9997021 , 0.9996973 , 0.99968696,
        0.99967086, 0.9996586 , 0.9996569 , 0.99965584, 0.9996551 ,
        0.99964845, 0.9996425 , 0.9996325 , 0.9996296 , 0.99961805,
        0.9996067 , 0.999594  , 0.999578  , 0.9995611 , 0.99954414,
        0.99954224, 0.9995235 , 0.9995177 , 0.9995161 , 0.9995111 ]],
      dtype=float32)>, indices=<tf.Tensor: shape=(1, 60), dtype=int32, numpy=
array([[121418,  56622,  58387,  28542,  35917,  88838,  98151, 125572,
         10601,  27074,  77573,  99122,    304,  68263,  53536,  61831,
        105360,  28700,  25868,  33357,  61639,  11765,  84250,  22892,
          6716,  47947,  25231,   4069, 123367,  28655, 106903, 120147,
         72706,  23318,  50956, 117622,  26446,   3416, 125659,  94178,
         31129,  23405,  15275,  39290,  93773,  31877, 125078,  26090,
         53306, 104209, 110112,  41146,   3774,  92346, 123910,  26743,
          1931,  69763,  16819, 109775]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/30.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999341 , 0.99995446, 0.99994993, 0.9999565 , 0.99999475,
        0.99999213, 0.9999988 , 0.9999579 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 64338, 128107,  26650,   6281,  70314,  60416,  10470,  89909]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999988 , 0.99999475, 0.99999213, 0.9999579 , 0.9999565 ,
        0.99995446, 0.99994993, 0.9999341 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 10470,  70314,  60416,  89909,   6281, 128107,  26650,  64338]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/31.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999713 , 0.99997854, 0.9999918 , 0.99998784, 0.99998283,
        0.9999968 , 0.9999945 , 0.99999475]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[149333,  72057,  32875, 225191,  38099,  22037,  45349, 161238]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999968 , 0.99999475, 0.9999945 , 0.9999918 , 0.99998784,
        0.99998283, 0.99997854, 0.9999713 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 22037, 161238,  45349,  32875, 225191,  38099,  72057, 149333]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/32.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999652 , 0.9999777 , 0.99996996, 0.9999788 , 0.99999666,
        0.9999727 , 0.9999969 , 0.9999825 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[183990, 192978,  35324, 171017, 168032,  94970,  23735, 181940]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999969 , 0.99999666, 0.9999825 , 0.9999788 , 0.9999777 ,
        0.9999727 , 0.99996996, 0.9999652 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 23735, 168032, 181940, 171017, 192978,  94970,  35324, 183990]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/33.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0.99998796, 0.99998975, 0.999997  ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 3), dtype=int32, numpy=array([[164369,  75240, 209466]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0.999997  , 0.99998975, 0.99998796]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 3), dtype=int32, numpy=array([[209466,  75240, 164369]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/34.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99997616, 0.9999778 , 0.99998176, 0.9999807 , 0.999984  ,
        0.9999862 , 0.99999106, 0.9999902 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[196791, 146917,  43596, 168495,  57867,  44417, 131669,  83871]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999106, 0.9999902 , 0.9999862 , 0.999984  , 0.99998176,
        0.9999807 , 0.9999778 , 0.99997616]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[131669,  83871,  44417,  57867,  43596, 168495, 146917, 196791]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/35.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=uint16, numpy=array([[178, 222, 199, 238, 246, 243, 227, 242]], dtype=uint16)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=array([[ 3,  7,  5, 15, 14,  8,  6, 10]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=uint16, numpy=array([[246, 243, 242, 238, 227, 222, 199, 178]], dtype=uint16)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=array([[14,  8, 10, 15,  6,  7,  5,  3]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/36.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[0.9999796 , 0.9999801 , 0.9999807 , 0.99998915, 0.99999297,
        0.9999846 , 0.99999297, 0.99999964, 0.99999225]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 9), dtype=int32, numpy=
array([[ 68469, 194831,  51383, 211109, 154736, 142986,  17472,  52224,
        258340]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[0.99999964, 0.99999297, 0.99999297, 0.99999225, 0.99998915,
        0.9999846 , 0.9999807 , 0.9999801 , 0.9999796 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 9), dtype=int32, numpy=
array([[ 52224,  17472, 154736, 258340, 211109, 142986,  51383, 194831,
         68469]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/37.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999496 , 0.9999635 , 0.99995613, 0.9999747 , 0.9999902 ,
        0.99996674, 0.999979  , 0.9999856 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 87364, 116861,  42557,   6797,  73685,  17133,  27723,  83536]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999902 , 0.9999856 , 0.999979  , 0.9999747 , 0.99996674,
        0.9999635 , 0.99995613, 0.9999496 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 73685,  83536,  27723,   6797,  17133, 116861,  42557,  87364]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/38.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999485 , 0.9999492 , 0.99995184, 0.9999546 , 0.9999844 ,
        0.9999802 , 0.99997854, 0.99997413]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[230596, 106712, 116569,  83846, 209930, 225093, 168934, 211924]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999844 , 0.9999802 , 0.99997854, 0.99997413, 0.9999546 ,
        0.99995184, 0.9999492 , 0.9999485 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[209930, 225093, 168934, 211924,  83846, 116569, 106712, 230596]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/39.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999738 , 0.999974  , 0.9999887 , 0.9999784 , 0.9999969 ,
        0.99999475, 0.99999416, 0.99998057]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 48964, 152587,  80312, 257078, 130896, 171201, 179661, 237474]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999969 , 0.99999475, 0.99999416, 0.9999887 , 0.99998057,
        0.9999784 , 0.999974  , 0.9999738 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[130896, 171201, 179661,  80312, 237474, 257078, 152587,  48964]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/4.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99995315, 0.9999547 , 0.9999627 , 0.9999876 , 0.9999963 ,
        0.99999475, 0.99997175, 0.99999046]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[48514, 44111, 48180, 73071, 14941,   648, 17840, 82482]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999963 , 0.99999475, 0.99999046, 0.9999876 , 0.99997175,
        0.9999627 , 0.9999547 , 0.99995315]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[14941,   648, 82482, 73071, 17840, 48180, 44111, 48514]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/40.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999336 , 0.99994874, 0.9999603 , 0.9999547 , 0.9999559 ,
        0.9999951 , 0.99999547, 0.9999924 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[27346, 95937, 19900, 47956,  6984, 44371, 55173, 90704]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999547, 0.9999951 , 0.9999924 , 0.9999603 , 0.9999559 ,
        0.9999547 , 0.99994874, 0.9999336 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[55173, 44371, 90704, 19900,  6984, 47956, 95937, 27346]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/41.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0.99997234, 0.99998105, 0.99998796]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 3), dtype=int32, numpy=array([[ 92043,  81521, 116224]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0.99998796, 0.99998105, 0.99997234]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 3), dtype=int32, numpy=array([[116224,  81521,  92043]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/42.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99996305, 0.9999832 , 0.99996614, 0.99998415, 0.99998474,
        0.9999728 , 0.9999732 , 0.99998426]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[156820, 189437,   6902, 168738,  10549,   4552,  92675, 118140]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99998474, 0.99998426, 0.99998415, 0.9999832 , 0.9999732 ,
        0.9999728 , 0.99996614, 0.99996305]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 10549, 118140, 168738, 189437,  92675,   4552,   6902, 156820]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/43.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0.9999825, 0.9999927, 0.9999881]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 3), dtype=int32, numpy=array([[163760, 110936,  14821]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0.9999927, 0.9999881, 0.9999825]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 3), dtype=int32, numpy=array([[110936,  14821, 163760]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/44.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999583 , 0.9999628 , 0.99996305, 0.9999734 , 0.9999993 ,
        0.99996364, 0.9999931 , 0.9999871 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 72355, 242569,  13515,  82773,  22109,  25328, 230711,  76909]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999993 , 0.9999931 , 0.9999871 , 0.9999734 , 0.99996364,
        0.99996305, 0.9999628 , 0.9999583 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 22109, 230711,  76909,  82773,  25328,  13515, 242569,  72355]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/45.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999881 , 0.999992  , 0.999998  , 0.9999931 , 0.9999939 ,
        0.99999857, 0.99999857, 0.99999785]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 52627, 198312,  71266, 158460, 175986,  58953, 196632, 204831]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999857, 0.99999857, 0.999998  , 0.99999785, 0.9999939 ,
        0.9999931 , 0.999992  , 0.9999881 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 58953, 196632,  71266, 204831, 175986, 158460, 198312,  52627]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/46.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[0.99996674, 0.99997354, 0.99998426, 0.9999778 , 0.99997854,
        0.9999963 , 0.9999938 , 0.99997973, 0.99999034]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 9), dtype=int32, numpy=
array([[ 56150,  15016, 121004, 223693, 177611, 137717, 248260,  80228,
        256059]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 9), dtype=float32, numpy=
array([[0.9999963 , 0.9999938 , 0.99999034, 0.99998426, 0.99997973,
        0.99997854, 0.9999778 , 0.99997354, 0.99996674]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 9), dtype=int32, numpy=
array([[137717, 248260, 256059, 121004,  80228, 177611, 223693,  15016,
         56150]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/47.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(16, 4, 4, 8), dtype=float32, numpy=
array([[[[0.97576034, 0.99159634, 0.99220324, ..., 0.99812436,
          0.9983014 , 0.994094  ],
         [0.98677826, 0.9880029 , 0.9895345 , ..., 0.99356556,
          0.99448705, 0.9931067 ],
         [0.98814774, 0.99343395, 0.994491  , ..., 0.9959943 ,
          0.9972464 , 0.99666464],
         [0.99238   , 0.9926226 , 0.9938314 , ..., 0.996539  ,
          0.99400187, 0.99440336]],

        [[0.9835212 , 0.98531044, 0.987648  , ..., 0.9950186 ,
          0.99880016, 0.9984559 ],
         [0.9906324 , 0.9928863 , 0.9925078 , ..., 0.9999312 ,
          0.9940696 , 0.99863935],
         [0.9841355 , 0.9856862 , 0.9881792 , ..., 0.99292827,
          0.99182975, 0.9947933 ],
         [0.9822295 , 0.9836974 , 0.9925431 , ..., 0.9986193 ,
          0.99765694, 0.99728525]],

        [[0.9776623 , 0.9788991 , 0.98431087, ..., 0.98888326,
          0.9995376 , 0.99749875],
         [0.97814083, 0.9823812 , 0.9861598 , ..., 0.9924891 ,
          0.9947293 , 0.99197555],
         [0.97993636, 0.9830067 , 0.9844209 , ..., 0.99661386,
          0.9861014 , 0.9905939 ],
         [0.9809973 , 0.98747015, 0.991447  , ..., 0.99174833,
          0.9930793 , 0.99284637]],

        [[0.9823128 , 0.9841242 , 0.98940194, ..., 0.9969964 ,
          0.99841666, 0.98980844],
         [0.98416245, 0.9846959 , 0.9861239 , ..., 0.9977529 ,
          0.9905999 , 0.99186647],
         [0.9870223 , 0.98817635, 0.9872006 , ..., 0.9934857 ,
          0.9883932 , 0.99989617],
         [0.98649585, 0.9869454 , 0.9949211 , ..., 0.9988929 ,
          0.99836624, 0.9970752 ]]],


       [[[0.9769578 , 0.9803401 , 0.9885365 , ..., 0.9967483 ,
          0.99058497, 0.9942974 ],
         [0.9879254 , 0.9881605 , 0.9889828 , ..., 0.9988109 ,
          0.99796677, 0.9941102 ],
         [0.989485  , 0.9926814 , 0.99126375, ..., 0.9991231 ,
          0.99316955, 0.99846876],
         [0.982254  , 0.99187815, 0.98350704, ..., 0.99645126,
          0.99256825, 0.9988798 ]],

        [[0.9936384 , 0.99410856, 0.9956126 , ..., 0.99811876,
          0.9990467 , 0.9986539 ],
         [0.9869534 , 0.98793924, 0.9890535 , ..., 0.99152184,
          0.99639857, 0.9963602 ],
         [0.98073506, 0.9857112 , 0.983008  , ..., 0.98334575,
          0.9840841 , 0.994544  ],
         [0.98121965, 0.98298585, 0.9844078 , ..., 0.99706423,
          0.99706733, 0.99529505]],

        [[0.9879142 , 0.98826504, 0.9887109 , ..., 0.9987129 ,
          0.99800587, 0.99050343],
         [0.99009717, 0.99027586, 0.99075866, ..., 0.99981844,
          0.99559784, 0.99397755],
         [0.9818369 , 0.9830121 , 0.9834914 , ..., 0.9840579 ,
          0.99946666, 0.98577476],
         [0.97130454, 0.97678316, 0.9808682 , ..., 0.9860072 ,
          0.98193896, 0.98085475]],

        [[0.99257576, 0.9959601 , 0.9975134 , ..., 0.9978281 ,
          0.99818015, 0.99944556],
         [0.97633994, 0.9775269 , 0.98041797, ..., 0.9824741 ,
          0.986158  , 0.9997605 ],
         [0.98607624, 0.98625696, 0.9912765 , ..., 0.9920137 ,
          0.9982822 , 0.99627054],
         [0.98822975, 0.98839355, 0.992838  , ..., 0.9993776 ,
          0.9933641 , 0.99552095]]],


       [[[0.9747081 , 0.97659683, 0.982319  , ..., 0.98565733,
          0.9969119 , 0.9816276 ],
         [0.987779  , 0.99597013, 0.9892287 , ..., 0.9957328 ,
          0.9989512 , 0.99753547],
         [0.99049497, 0.99205315, 0.99052143, ..., 0.9981854 ,
          0.9908135 , 0.99947786],
         [0.989092  , 0.99180925, 0.9915732 , ..., 0.99208796,
          0.9945431 , 0.99759114]],

        [[0.9818977 , 0.98487806, 0.9833087 , ..., 0.9991057 ,
          0.99099374, 0.99686635],
         [0.9750904 , 0.980348  , 0.98603046, ..., 0.98821855,
          0.9878057 , 0.99796677],
         [0.98423636, 0.9861945 , 0.9939575 , ..., 0.9971607 ,
          0.9941795 , 0.9983742 ],
         [0.9890739 , 0.98939514, 0.9923161 , ..., 0.9939282 ,
          0.9974412 , 0.99449944]],

        [[0.97601044, 0.9774262 , 0.9835812 , ..., 0.9844279 ,
          0.99496794, 0.99481225],
         [0.98834515, 0.98932767, 0.9932432 , ..., 0.99553645,
          0.9933864 , 0.99873126],
         [0.9785564 , 0.97926676, 0.97907245, ..., 0.9958725 ,
          0.9983289 , 0.9979619 ],
         [0.98709285, 0.98819757, 0.98939586, ..., 0.9935974 ,
          0.9949802 , 0.99260235]],

        [[0.98845446, 0.99071944, 0.9893192 , ..., 0.99509287,
          0.98988783, 0.9915509 ],
         [0.99095964, 0.9915416 , 0.9937031 , ..., 0.9945916 ,
          0.9985274 , 0.99881935],
         [0.98506594, 0.9875274 , 0.99303865, ..., 0.99890566,
          0.9992728 , 0.9932295 ],
         [0.9860567 , 0.9868561 , 0.9868729 , ..., 0.99614334,
          0.9978378 , 0.9945111 ]]],


       ...,


       [[[0.9923909 , 0.99252176, 0.99371314, ..., 0.99573934,
          0.9964464 , 0.9993044 ],
         [0.98458517, 0.986457  , 0.99216366, ..., 0.9955356 ,
          0.9957565 , 0.9906658 ],
         [0.9767697 , 0.9770638 , 0.97771466, ..., 0.98624146,
          0.9963281 , 0.99410284],
         [0.97742355, 0.9801284 , 0.98580515, ..., 0.9942666 ,
          0.9903097 , 0.9822451 ]],

        [[0.9894185 , 0.99057627, 0.99269414, ..., 0.99800134,
          0.99367464, 0.9918406 ],
         [0.9884317 , 0.99409044, 0.9925419 , ..., 0.99711704,
          0.9937043 , 0.9947164 ],
         [0.9832084 , 0.9871001 , 0.9914051 , ..., 0.9976798 ,
          0.9915999 , 0.9945613 ],
         [0.98767734, 0.98841965, 0.99344456, ..., 0.99832535,
          0.99470687, 0.9979048 ]],

        [[0.9877418 , 0.98817813, 0.98932564, ..., 0.99636674,
          0.99385476, 0.995764  ],
         [0.980554  , 0.9806205 , 0.9808848 , ..., 0.9987347 ,
          0.99511206, 0.99288476],
         [0.9885353 , 0.98979104, 0.9891311 , ..., 0.9990039 ,
          0.99696696, 0.9975594 ],
         [0.99001634, 0.9922309 , 0.99351394, ..., 0.99367094,
          0.9950013 , 0.99699306]],

        [[0.9897518 , 0.9916663 , 0.99125874, ..., 0.99599564,
          0.99786353, 0.9971684 ],
         [0.9855734 , 0.9858842 , 0.9910233 , ..., 0.99343145,
          0.9910501 , 0.99094224],
         [0.9876678 , 0.98891723, 0.99063826, ..., 0.9907056 ,
          0.9999398 , 0.9967302 ],
         [0.9782921 , 0.9922967 , 0.9860146 , ..., 0.99731064,
          0.98686206, 0.99813974]]],


       [[[0.98219144, 0.9869628 , 0.98627245, ..., 0.99364364,
          0.99743605, 0.99784863],
         [0.9871092 , 0.9902164 , 0.99082124, ..., 0.9998776 ,
          0.9972333 , 0.99677336],
         [0.9864564 , 0.98962414, 0.990052  , ..., 0.9926094 ,
          0.99979126, 0.9971204 ],
         [0.99171734, 0.9921433 , 0.99341226, ..., 0.99868286,
          0.993659  , 0.99322045]],

        [[0.9748777 , 0.97489166, 0.9912064 , ..., 0.99560547,
          0.99759674, 0.99798787],
         [0.98621833, 0.9870907 , 0.9926349 , ..., 0.9990176 ,
          0.9934405 , 0.99183726],
         [0.988727  , 0.98922527, 0.99011874, ..., 0.99657583,
          0.9974407 , 0.9911125 ],
         [0.98076856, 0.98216724, 0.98248136, ..., 0.99053323,
          0.9912075 , 0.9886662 ]],

        [[0.9852406 , 0.98583364, 0.9901972 , ..., 0.99378085,
          0.99868214, 0.9982779 ],
         [0.9923383 , 0.99266815, 0.99484015, ..., 0.9952377 ,
          0.9987811 , 0.99980414],
         [0.9911082 , 0.9947338 , 0.99149275, ..., 0.9995154 ,
          0.9972992 , 0.99881303],
         [0.98301864, 0.98440146, 0.991343  , ..., 0.9927527 ,
          0.99985266, 0.987566  ]],

        [[0.98366153, 0.98419905, 0.9868201 , ..., 0.9937023 ,
          0.9959396 , 0.9903612 ],
         [0.9892931 , 0.99233305, 0.99255526, ..., 0.99516714,
          0.99714804, 0.9969702 ],
         [0.98062706, 0.98095214, 0.9897224 , ..., 0.99477816,
          0.9944893 , 0.9852623 ],
         [0.9796401 , 0.98790205, 0.9908372 , ..., 0.99107134,
          0.9914638 , 0.9908984 ]]],


       [[[0.98927844, 0.9913509 , 0.99086773, ..., 0.9952004 ,
          0.995376  , 0.9982755 ],
         [0.9842075 , 0.98529816, 0.98664963, ..., 0.99951875,
          0.99354327, 0.99950135],
         [0.9835881 , 0.9849161 , 0.9874426 , ..., 0.99237704,
          0.9937413 , 0.9903501 ],
         [0.9850762 , 0.99053466, 0.9897537 , ..., 0.9948375 ,
          0.9906857 , 0.99992716]],

        [[0.9819561 , 0.9821727 , 0.98248327, ..., 0.99707246,
          0.9908935 , 0.9859574 ],
         [0.9896697 , 0.99132895, 0.9928504 , ..., 0.9940975 ,
          0.99550104, 0.9926263 ],
         [0.9869485 , 0.9896802 , 0.9900373 , ..., 0.9936366 ,
          0.99822605, 0.99910474],
         [0.9827188 , 0.9866545 , 0.98830533, ..., 0.9919125 ,
          0.98840535, 0.9943497 ]],

        [[0.97994363, 0.9803016 , 0.98247075, ..., 0.99136996,
          0.9869051 , 0.9849014 ],
         [0.99036217, 0.99309516, 0.9981983 , ..., 0.99826574,
          0.9996463 , 0.9982418 ],
         [0.9877454 , 0.98880804, 0.9986074 , ..., 0.9989431 ,
          0.9986174 , 0.99705184],
         [0.9890517 , 0.9892936 , 0.99295914, ..., 0.9943695 ,
          0.99617636, 0.99592984]],

        [[0.98620856, 0.98914754, 0.9911144 , ..., 0.9952556 ,
          0.99510384, 0.99128866],
         [0.9889003 , 0.99279964, 0.99722207, ..., 0.9999565 ,
          0.9999666 , 0.9991753 ],
         [0.9849831 , 0.98668003, 0.98558617, ..., 0.98666   ,
          0.9972595 , 0.9994856 ],
         [0.9914603 , 0.9940617 , 0.99250984, ..., 0.99529064,
          0.9978496 , 0.99840796]]]], dtype=float32)>, indices=<tf.Tensor: shape=(16, 4, 4, 8), dtype=int32, numpy=
array([[[[315, 453,  30, ...,  49,  48, 503],
         [335, 385,  39, ...,   9,   2,  87],
         [357, 316, 171, ..., 121, 157, 367],
         [129,  47,  69, ..., 112, 116, 239]],

        [[383, 190, 139, ..., 355, 269, 486],
         [216, 205,  28, ..., 260, 315, 476],
         [483,  92, 149, ...,  40, 310, 509],
         [ 70, 274, 110, ..., 239,  99, 269]],

        [[287, 502, 334, ..., 157, 128, 474],
         [418, 206, 109, ..., 154,  73, 239],
         [459, 137,  63, ..., 226, 185, 449],
         [399,  62,  33, ..., 140,  50, 468]],

        [[343, 428,  14, ..., 331, 410, 454],
         [460,  20, 110, ..., 172,  76, 409],
         [147, 270, 113, ..., 171, 266, 397],
         [256, 348, 237, ...,  24, 402, 494]]],


       [[[ 60, 188, 322, ..., 111,  97, 494],
         [456, 283, 152, ..., 114, 305, 428],
         [ 41, 333,  31, ..., 430,  70, 414],
         [ 46,  45, 229, ..., 399,  66, 474]],

        [[347,  17, 255, ..., 172,  31, 484],
         [ 25, 414, 174, ..., 332, 120, 405],
         [219, 140,  93, ..., 221, 128, 331],
         [230, 263, 268, ..., 264, 376, 445]],

        [[424, 511, 174, ..., 232, 115, 290],
         [496, 285, 116, ..., 389, 159, 290],
         [262, 283, 311, ...,  12, 253, 479],
         [ 30, 439,  19, ..., 165,  37, 218]],

        [[235, 470, 387, ...,  95, 138, 495],
         [302, 249, 114, ..., 224,  58, 376],
         [456,  64,   7, ..., 104, 229, 321],
         [114, 360,  96, ..., 486, 193, 298]]],


       [[[481,  86, 188, ..., 370,  78, 259],
         [250, 338, 332, ..., 315, 405, 461],
         [161,  78, 118, ...,  42,  65, 491],
         [448, 205, 130, ..., 384, 341, 399]],

        [[ 25, 250,  35, ..., 433,  68, 509],
         [291, 498, 164, ...,   2, 123, 478],
         [497, 235, 177, ...,  70, 117, 259],
         [129, 350,  91, ..., 201, 153, 244]],

        [[114, 502,  50, ..., 299, 318, 490],
         [466, 429, 297, ..., 113, 318, 486],
         [169, 282,  87, ..., 287,   1, 471],
         [ 93, 329, 235, ..., 127, 443, 301]],

        [[321, 324, 135, ..., 247, 114, 257],
         [ 92, 130, 198, ..., 422, 136, 493],
         [362, 342, 343, ..., 280, 243, 377],
         [159, 329,  59, ..., 260, 241, 178]]],


       ...,


       [[[233, 503, 188, ..., 222, 163, 279],
         [ 37, 400, 245, ..., 154,  39, 210],
         [242, 298,  48, ..., 122, 268, 270],
         [ 72, 389, 301, ...,  26,  35, 260]],

        [[503, 356, 157, ...,  43, 328, 439],
         [271, 238, 130, ..., 389, 128, 501],
         [204, 459, 258, ..., 152,   1, 461],
         [356, 329, 191, ..., 230, 187, 402]],

        [[ 25, 511, 234, ..., 153, 116, 493],
         [190, 410, 138, ..., 238, 330, 389],
         [284, 469, 136, ..., 181, 139, 344],
         [121, 348, 140, ..., 224, 259, 481]],

        [[250, 415,   1, ..., 218, 249, 484],
         [ 15, 309, 140, ...,  77, 284, 183],
         [506,  97, 251, ..., 240, 335, 323],
         [192, 349, 144, ..., 439, 103, 444]]],


       [[[354, 343, 202, ...,  96, 152, 360],
         [404, 434, 190, ..., 118,  61, 349],
         [ 32, 172, 128, ..., 337, 214, 495],
         [242,  12, 137, ..., 247,  71, 409]],

        [[230, 423, 287, ...,  79, 345, 476],
         [177, 426, 252, ...,  93, 310, 314],
         [327, 433, 233, ...,  90, 108, 264],
         [188, 274, 167, ..., 229, 409, 435]],

        [[451, 334,  34, ..., 211, 198, 428],
         [214, 494, 146, ..., 280, 426, 509],
         [ 62, 280,  49, ..., 367, 365, 453],
         [165, 291,   0, ..., 227, 352, 400]],

        [[162, 211, 152, ..., 106,  59, 416],
         [ 18, 406, 171, ...,  70, 344, 368],
         [510, 261, 142, ..., 141, 423, 316],
         [241, 338,  73, ...,  89, 168, 227]]],


       [[[484, 172, 106, ..., 279,  13, 505],
         [496, 107, 205, ..., 235, 108, 326],
         [420, 148, 287, ...,  66, 404, 498],
         [416, 308, 213, ...,  32,  49, 441]],

        [[ 38, 386,  44, ..., 312, 343, 292],
         [ 81, 448, 137, ..., 428, 129, 430],
         [403,  98, 117, ..., 259, 371, 472],
         [ 43, 267, 102, ..., 407,   2, 442]],

        [[467, 499,  49, ..., 445, 106, 300],
         [220,  70,   0, ...,   2,  75, 278],
         [292, 164,  72, ..., 310,  73, 459],
         [353, 430, 123, ...,  78, 101, 429]],

        [[335, 476, 218, ...,  82, 311, 282],
         [248, 475,  85, ..., 187, 250, 406],
         [180, 410, 191, ...,   2, 205, 314],
         [ 34, 179, 138, ...,  13, 306, 412]]]], dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(16, 4, 4, 8), dtype=float32, numpy=
array([[[[0.9983014 , 0.99812436, 0.9971045 , ..., 0.99220324,
          0.99159634, 0.97576034],
         [0.99929726, 0.99448705, 0.99356556, ..., 0.9884436 ,
          0.9880029 , 0.98677826],
         [0.9972464 , 0.99666464, 0.9965894 , ..., 0.994491  ,
          0.99343395, 0.98814774],
         [0.99850297, 0.996539  , 0.99440336, ..., 0.9938314 ,
          0.9926226 , 0.99238   ]],

        [[0.99880016, 0.9984559 , 0.99814796, ..., 0.987648  ,
          0.98531044, 0.9835212 ],
         [0.9999312 , 0.99863935, 0.99506354, ..., 0.9928863 ,
          0.9925078 , 0.9906324 ],
         [0.9968941 , 0.9947933 , 0.99292827, ..., 0.9862242 ,
          0.9856862 , 0.9841355 ],
         [0.9986193 , 0.99765694, 0.99728525, ..., 0.9871187 ,
          0.9836974 , 0.9822295 ]],

        [[0.9995376 , 0.99749875, 0.99635553, ..., 0.98431087,
          0.9788991 , 0.9776623 ],
         [0.9947293 , 0.9939027 , 0.9924891 , ..., 0.98554444,
          0.9823812 , 0.97814083],
         [0.99661386, 0.9905939 , 0.98779845, ..., 0.9844209 ,
          0.9830067 , 0.97993636],
         [0.9930793 , 0.99284637, 0.9925438 , ..., 0.9889511 ,
          0.98747015, 0.9809973 ]],

        [[0.99841666, 0.9969964 , 0.98980844, ..., 0.9862684 ,
          0.9841242 , 0.9823128 ],
         [0.9977529 , 0.9960505 , 0.99186647, ..., 0.9861239 ,
          0.9846959 , 0.98416245],
         [0.99989617, 0.999151  , 0.9934857 , ..., 0.98817635,
          0.9872006 , 0.9870223 ],
         [0.9988929 , 0.99836624, 0.9970752 , ..., 0.9872019 ,
          0.9869454 , 0.98649585]]],


       [[[0.9967483 , 0.9948857 , 0.9942974 , ..., 0.9823065 ,
          0.9803401 , 0.9769578 ],
         [0.9988109 , 0.99796677, 0.9975021 , ..., 0.9889828 ,
          0.9881605 , 0.9879254 ],
         [0.9991231 , 0.99846876, 0.9940957 , ..., 0.9926814 ,
          0.99126375, 0.989485  ],
         [0.99897766, 0.9988798 , 0.99645126, ..., 0.99187815,
          0.98350704, 0.982254  ]],

        [[0.9990467 , 0.9986539 , 0.99811876, ..., 0.9956126 ,
          0.99410856, 0.9936384 ],
         [0.99639857, 0.9963602 , 0.99251866, ..., 0.9888469 ,
          0.98793924, 0.9869534 ],
         [0.99596095, 0.994544  , 0.99316096, ..., 0.98334575,
          0.983008  , 0.98073506],
         [0.99706733, 0.99706423, 0.99529505, ..., 0.9844078 ,
          0.98298585, 0.98121965]],

        [[0.9987129 , 0.99800587, 0.9922637 , ..., 0.9885647 ,
          0.98826504, 0.9879142 ],
         [0.99981844, 0.99973893, 0.99559784, ..., 0.99075866,
          0.99027586, 0.99009717],
         [0.99946666, 0.99556375, 0.98577476, ..., 0.9834914 ,
          0.9830121 , 0.9818369 ],
         [0.9889561 , 0.9860072 , 0.98193896, ..., 0.9802042 ,
          0.97678316, 0.97130454]],

        [[0.99944556, 0.99818015, 0.9978281 , ..., 0.9960431 ,
          0.9959601 , 0.99257576],
         [0.9997605 , 0.9978117 , 0.98649895, ..., 0.98041797,
          0.9775269 , 0.97633994],
         [0.9996493 , 0.9982822 , 0.99627054, ..., 0.98765576,
          0.98625696, 0.98607624],
         [0.9993776 , 0.99552095, 0.9933641 , ..., 0.98857224,
          0.98839355, 0.98822975]]],


       [[[0.99976265, 0.9969119 , 0.98565733, ..., 0.98099256,
          0.97659683, 0.9747081 ],
         [0.9989512 , 0.99753547, 0.9973935 , ..., 0.9957328 ,
          0.9892287 , 0.987779  ],
         [0.99947786, 0.9981854 , 0.9969822 , ..., 0.9908135 ,
          0.99052143, 0.99049497],
         [0.99759114, 0.9945431 , 0.99386084, ..., 0.99180925,
          0.9915732 , 0.989092  ]],

        [[0.9991057 , 0.99686635, 0.9918343 , ..., 0.98487806,
          0.9833087 , 0.9818977 ],
         [0.99796677, 0.9900998 , 0.9888053 , ..., 0.98603046,
          0.980348  , 0.9750904 ],
         [0.9983742 , 0.9971607 , 0.9941795 , ..., 0.99256   ,
          0.9861945 , 0.98423636],
         [0.999027  , 0.9974412 , 0.99449944, ..., 0.9909092 ,
          0.98939514, 0.9890739 ]],

        [[0.99496794, 0.99481225, 0.9912138 , ..., 0.9835812 ,
          0.9774262 , 0.97601044],
         [0.99873126, 0.9978056 , 0.99553645, ..., 0.9932432 ,
          0.98932767, 0.98834515],
         [0.9983289 , 0.9979619 , 0.9958725 , ..., 0.97926676,
          0.97907245, 0.9785564 ],
         [0.9992522 , 0.9949802 , 0.9935974 , ..., 0.98823416,
          0.98819757, 0.98709285]],

        [[0.99509287, 0.9950123 , 0.9915509 , ..., 0.98988783,
          0.9893192 , 0.98845446],
         [0.99881935, 0.9985274 , 0.99630797, ..., 0.9934615 ,
          0.9915416 , 0.99095964],
         [0.9992728 , 0.99890566, 0.99684   , ..., 0.98918116,
          0.9875274 , 0.98506594],
         [0.9978378 , 0.9966601 , 0.99614334, ..., 0.9868729 ,
          0.9868561 , 0.9860567 ]]],


       ...,


       [[[0.9993044 , 0.99755406, 0.9964464 , ..., 0.9936198 ,
          0.99252176, 0.9923909 ],
         [0.99736774, 0.9957565 , 0.9955356 , ..., 0.9872991 ,
          0.986457  , 0.98458517],
         [0.997066  , 0.9963281 , 0.99410284, ..., 0.97771466,
          0.9770638 , 0.9767697 ],
         [0.9942666 , 0.9903097 , 0.98641014, ..., 0.98077655,
          0.9801284 , 0.97742355]],

        [[0.9993148 , 0.99800134, 0.99367464, ..., 0.9916512 ,
          0.99057627, 0.9894185 ],
         [0.99726295, 0.99711704, 0.9947164 , ..., 0.9937043 ,
          0.9925419 , 0.9884317 ],
         [0.9976798 , 0.9961667 , 0.9945613 , ..., 0.9877684 ,
          0.9871001 , 0.9832084 ],
         [0.9992418 , 0.99832535, 0.9979048 , ..., 0.99073744,
          0.98841965, 0.98767734]],

        [[0.9964024 , 0.99636674, 0.995764  , ..., 0.98932564,
          0.98817813, 0.9877418 ],
         [0.9987347 , 0.99511206, 0.99324894, ..., 0.9808848 ,
          0.9806205 , 0.980554  ],
         [0.9990039 , 0.9975594 , 0.99730444, ..., 0.98979104,
          0.9891311 , 0.9885353 ],
         [0.99699306, 0.9950013 , 0.9946636 , ..., 0.9933964 ,
          0.9922309 , 0.99001634]],

        [[0.998225  , 0.99786353, 0.9971684 , ..., 0.9916663 ,
          0.99125874, 0.9897518 ],
         [0.99492824, 0.99343145, 0.9910501 , ..., 0.98753417,
          0.9858842 , 0.9855734 ],
         [0.9999398 , 0.9967302 , 0.9907056 , ..., 0.9894018 ,
          0.98891723, 0.9876678 ],
         [0.99813974, 0.9980849 , 0.99731064, ..., 0.98686206,
          0.9860146 , 0.9782921 ]]],


       [[[0.99784863, 0.99743605, 0.99628687, ..., 0.9869628 ,
          0.98627245, 0.98219144],
         [0.9998776 , 0.9972333 , 0.99677336, ..., 0.99082124,
          0.9902164 , 0.9871092 ],
         [0.99993527, 0.99979126, 0.9971204 , ..., 0.990052  ,
          0.98962414, 0.9864564 ],
         [0.99868286, 0.9984826 , 0.993659  , ..., 0.9923643 ,
          0.9921433 , 0.99171734]],

        [[0.99798787, 0.99759674, 0.99560547, ..., 0.9814527 ,
          0.97489166, 0.9748777 ],
         [0.9992347 , 0.9990176 , 0.9934405 , ..., 0.99004614,
          0.9870907 , 0.98621833],
         [0.9974407 , 0.99657583, 0.99180794, ..., 0.9898453 ,
          0.98922527, 0.988727  ],
         [0.9962791 , 0.9912075 , 0.99053323, ..., 0.98248136,
          0.98216724, 0.98076856]],

        [[0.99868214, 0.9986062 , 0.9982779 , ..., 0.9901972 ,
          0.98583364, 0.9852406 ],
         [0.99990594, 0.99980414, 0.9987811 , ..., 0.9938679 ,
          0.99266815, 0.9923383 ],
         [0.9995154 , 0.99881303, 0.998595  , ..., 0.9947338 ,
          0.99149275, 0.9911082 ],
         [0.99985266, 0.99531543, 0.9927527 , ..., 0.98745227,
          0.98440146, 0.98301864]],

        [[0.9961201 , 0.9959396 , 0.9937023 , ..., 0.98449266,
          0.98419905, 0.98366153],
         [0.99742794, 0.99714804, 0.9969702 , ..., 0.99255526,
          0.99233305, 0.9892931 ],
         [0.99477816, 0.9944893 , 0.9897224 , ..., 0.9818634 ,
          0.98095214, 0.98062706],
         [0.9987111 , 0.9914638 , 0.99107134, ..., 0.9900507 ,
          0.98790205, 0.9796401 ]]],


       [[[0.99992216, 0.9982755 , 0.9975451 , ..., 0.9913509 ,
          0.99086773, 0.98927844],
         [0.99951875, 0.99950135, 0.99354327, ..., 0.98612237,
          0.98529816, 0.9842075 ],
         [0.9937413 , 0.99237704, 0.9903501 , ..., 0.9874426 ,
          0.9849161 , 0.9835881 ],
         [0.99992716, 0.9948375 , 0.99373317, ..., 0.99053466,
          0.9897537 , 0.9850762 ]],

        [[0.9977994 , 0.99707246, 0.9908935 , ..., 0.98248327,
          0.9821727 , 0.9819561 ],
         [0.9976175 , 0.99550104, 0.9940975 , ..., 0.99158955,
          0.99132895, 0.9896697 ],
         [0.99910474, 0.99822605, 0.99542654, ..., 0.9900373 ,
          0.9896802 , 0.9869485 ],
         [0.99577856, 0.9943497 , 0.9919125 , ..., 0.98830533,
          0.9866545 , 0.9827188 ]],

        [[0.99489474, 0.99136996, 0.9869051 , ..., 0.9811497 ,
          0.9803016 , 0.97994363],
         [0.9996463 , 0.99860847, 0.99826574, ..., 0.99377024,
          0.99309516, 0.99036217],
         [0.9989431 , 0.9986174 , 0.9986074 , ..., 0.9918965 ,
          0.98880804, 0.9877454 ],
         [0.9966701 , 0.99617636, 0.99592984, ..., 0.9903159 ,
          0.9892936 , 0.9890517 ]],

        [[0.9952556 , 0.99510384, 0.99175835, ..., 0.98937726,
          0.98914754, 0.98620856],
         [0.9999666 , 0.9999565 , 0.99976623, ..., 0.99722207,
          0.99279964, 0.9889003 ],
         [0.9994856 , 0.9972595 , 0.99290144, ..., 0.98666   ,
          0.98558617, 0.9849831 ],
         [0.9998455 , 0.99840796, 0.9978496 , ..., 0.9940617 ,
          0.99250984, 0.9914603 ]]]], dtype=float32)>, indices=<tf.Tensor: shape=(16, 4, 4, 8), dtype=int32, numpy=
array([[[[ 48,  49, 100, ...,  30, 453, 315],
         [ 28,   2,   9, ...,  29, 385, 335],
         [157, 367, 479, ..., 171, 316, 357],
         [313, 112, 239, ...,  69,  47, 129]],

        [[269, 486, 450, ..., 139, 190, 383],
         [260, 476, 378, ..., 205,  28, 216],
         [490, 509,  40, ..., 463,  92, 483],
         [239,  99, 269, ..., 122, 274,  70]],

        [[128, 474, 104, ..., 334, 502, 287],
         [ 73,  92, 154, ..., 431, 206, 418],
         [226, 449, 118, ...,  63, 137, 459],
         [ 50, 468,   4, ...,  73,  62, 399]],

        [[410, 331, 454, ..., 397, 428, 343],
         [172, 100, 409, ..., 110,  20, 460],
         [397, 299, 171, ..., 270, 113, 147],
         [ 24, 402, 494, ...,  72, 348, 256]]],


       [[[111,  14, 494, ..., 384, 188,  60],
         [114, 305, 413, ..., 152, 283, 456],
         [430, 414, 102, ..., 333,  31,  41],
         [313, 474, 399, ...,  45, 229,  46]],

        [[ 31, 484, 172, ..., 255,  17, 347],
         [120, 405, 220, ..., 219, 414,  25],
         [336, 331, 387, ..., 221,  93, 219],
         [376, 264, 445, ..., 268, 263, 230]],

        [[232, 115,  60, ..., 483, 511, 424],
         [389,  58, 159, ..., 116, 285, 496],
         [253,  91, 479, ..., 311, 283, 262],
         [132, 165,  37, ..., 328, 439,  30]],

        [[495, 138,  95, ..., 346, 470, 235],
         [376,  80, 410, ..., 114, 249, 302],
         [194, 229, 321, ..., 307,  64, 456],
         [486, 298, 193, ..., 509, 360, 114]]],


       [[[312,  78, 370, ..., 205,  86, 481],
         [405, 461, 400, ..., 315, 332, 250],
         [491,  42, 250, ...,  65, 118, 161],
         [399, 341, 465, ..., 205, 130, 448]],

        [[433, 509, 156, ..., 250,  35,  25],
         [478,  50, 500, ..., 164, 498, 291],
         [259,  70, 117, ..., 159, 235, 497],
         [221, 153, 244, ..., 273, 350, 129]],

        [[318, 490,   0, ...,  50, 502, 114],
         [486, 209, 113, ..., 297, 429, 466],
         [  1, 471, 287, ..., 282,  87, 169],
         [ 81, 443, 127, ..., 469, 329,  93]],

        [[247, 279, 257, ..., 114, 135, 321],
         [493, 136, 322, ..., 296, 130,  92],
         [243, 280, 186, ..., 277, 342, 362],
         [241,  14, 260, ...,  59, 329, 159]]],


       ...,


       [[[279, 158, 163, ...,  24, 503, 233],
         [105,  39, 154, ...,  47, 400,  37],
         [203, 268, 270, ...,  48, 298, 242],
         [ 26,  35,  86, ..., 457, 389,  72]],

        [[327,  43, 328, ..., 500, 356, 503],
         [425, 389, 501, ..., 128, 130, 271],
         [152, 344, 461, ..., 359, 459, 204],
         [178, 230, 402, ..., 425, 329, 356]],

        [[498, 153, 493, ..., 234, 511,  25],
         [238, 330, 131, ..., 138, 410, 190],
         [181, 344, 123, ..., 469, 136, 284],
         [481, 259, 218, ..., 321, 348, 121]],

        [[166, 249, 484, ..., 415,   1, 250],
         [ 36,  77, 284, ..., 195, 309,  15],
         [335, 323, 240, ..., 162,  97, 506],
         [444, 344, 439, ..., 103, 144, 192]]],


       [[[360, 152, 117, ..., 343, 202, 354],
         [118,  61, 349, ..., 190, 434, 404],
         [283, 214, 495, ..., 128, 172,  32],
         [247, 256,  71, ..., 338,  12, 242]],

        [[476, 345,  79, ..., 373, 423, 230],
         [392,  93, 310, ..., 115, 426, 177],
         [108,  90, 241, ..., 213, 433, 327],
         [ 84, 409, 229, ..., 167, 274, 188]],

        [[198, 419, 428, ...,  34, 334, 451],
         [471, 509, 426, ...,  13, 494, 214],
         [367, 453, 162, ..., 280,  49,  62],
         [352, 347, 227, ..., 384, 291, 165]],

        [[128,  59, 106, ..., 425, 211, 162],
         [237, 344, 368, ..., 171, 406,  18],
         [141, 423, 142, ..., 478, 261, 510],
         [156, 168,  89, ..., 244, 338, 241]]],


       [[[410, 505, 285, ..., 172, 106, 484],
         [235, 326, 108, ..., 295, 107, 496],
         [404,  66, 498, ..., 287, 148, 420],
         [441,  32, 117, ..., 308, 213, 416]],

        [[324, 312, 343, ...,  44, 386,  38],
         [ 25, 129, 428, ..., 200, 448,  81],
         [472, 371, 392, ..., 117,  98, 403],
         [260, 442, 407, ..., 102, 267,  43]],

        [[108, 445, 106, ...,  27, 499, 467],
         [ 75,  95,   2, ..., 437,  70, 220],
         [310,  73,  72, ..., 412, 164, 292],
         [ 52, 101, 429, ..., 507, 430, 353]],

        [[ 82, 311, 158, ..., 350, 476, 335],
         [250, 187, 213, ...,  85, 475, 248],
         [314, 205, 154, ...,   2, 191, 180],
         [172, 412, 306, ..., 179, 138,  34]]]], dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/48.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99997413, 0.99997675, 0.9999794 , 0.9999807 , 0.9999807 ,
        0.99998283, 0.99998975, 0.9999827 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[102931, 136977, 125680, 212308, 185225,  89299, 146261, 209371]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99998975, 0.99998283, 0.9999827 , 0.9999807 , 0.9999807 ,
        0.9999794 , 0.99997675, 0.99997413]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[146261,  89299, 209371, 185225, 212308, 125680, 136977, 102931]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/5.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99993706, 0.99993753, 0.9999404 , 0.9999379 , 0.9999573 ,
        0.9999467 , 0.9999678 , 0.99999917]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 58626, 101535,  35300, 126422,  40114,  39741,  21676,  63569]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999917, 0.9999678 , 0.9999573 , 0.9999467 , 0.9999404 ,
        0.9999379 , 0.99993753, 0.99993706]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 63569,  21676,  40114,  39741,  35300, 126422, 101535,  58626]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/6.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999591 , 0.9999597 , 0.9999763 , 0.9999738 , 0.99998224,
        0.99998176, 0.9999808 , 0.99998987]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[195672,  86859,    463, 242166,  33094,  62613,  31629,  82526]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99998987, 0.99998224, 0.99998176, 0.9999808 , 0.9999763 ,
        0.9999738 , 0.9999597 , 0.9999591 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 82526,  33094,  62613,  31629,    463, 242166,  86859, 195672]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/7.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999727 , 0.9999757 , 0.9999845 , 0.99997973, 0.9999932 ,
        0.99999964, 0.99999654, 0.99998236]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[163600, 133138,  40005, 230749, 132263,  58200, 138806, 198308]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99999964, 0.99999654, 0.9999932 , 0.9999845 , 0.99998236,
        0.99997973, 0.9999757 , 0.9999727 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 58200, 138806, 132263,  40005, 198308, 230749, 133138, 163600]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/8.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99994516, 0.9999509 , 0.9999646 , 0.9999548 , 0.99997544,
        0.9999677 , 0.99997556, 0.99997735]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[38345, 26877, 30952, 65639, 53736, 76805, 13552, 77466]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99997735, 0.99997556, 0.99997544, 0.9999677 , 0.9999646 ,
        0.9999548 , 0.9999509 , 0.99994516]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[77466, 13552, 53736, 76805, 30952, 65639, 26877, 38345]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.math.top_k/9.py
{'res_cpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.99995613, 0.999961  , 0.9999827 , 0.9999682 , 0.99997973,
        0.9999944 , 0.9999945 , 0.9999771 ]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 84179, 115916,   4458, 111957,  39536,  71747,  86706, 114020]],
      dtype=int32)>), 'res_gpu': TopKV2(values=<tf.Tensor: shape=(1, 8), dtype=float32, numpy=
array([[0.9999945 , 0.9999944 , 0.9999827 , 0.99997973, 0.9999771 ,
        0.9999682 , 0.999961  , 0.99995613]], dtype=float32)>, indices=<tf.Tensor: shape=(1, 8), dtype=int32, numpy=
array([[ 86706,  71747,   4458,  39536, 114020, 111957, 115916,  84179]],
      dtype=int32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/1.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/10.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/100.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/101.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/102.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/103.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/104.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/105.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/106.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/107.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/108.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/109.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/11.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/110.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/111.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/112.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/113.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float16, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float16, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float16)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float16, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float16, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float16)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/114.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/115.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/116.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/280.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/281.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/282.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/283.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/284.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/285.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/286.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/287.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/288.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/289.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/29.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/290.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/291.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/292.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/293.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/294.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/295.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/296.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/297.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/298.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/470.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/471.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/472.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/473.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/474.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/475.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/476.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/477.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/478.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/479.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/48.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/480.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/481.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/482.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/483.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/484.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/485.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/486.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/487.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/488.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/67.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/68.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/69.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/7.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/70.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/71.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/72.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/73.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/74.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/75.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/76.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/77.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/78.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/79.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/8.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/80.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/81.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/82.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/83.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/84.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/85.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/86.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/87.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/88.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/89.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/9.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/90.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/91.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/92.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/93.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/94.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/95.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/96.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/97.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/98.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/99.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/118.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/119.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/12.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/120.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/121.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/122.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/123.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/124.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/125.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/126.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/127.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/128.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/129.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/13.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/130.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/131.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/132.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/133.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/134.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/135.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/117.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/136.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/155.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/174.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/193.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/211.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/230.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/25.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/28.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/299.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/317.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/336.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/355.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/374.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/393.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/411.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/430.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/45.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/47.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/489.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/507.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/526.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/545.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/564.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/583.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/601.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/66.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/137.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/138.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/139.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/14.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/140.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/141.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/142.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/143.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/144.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/145.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/146.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/147.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/148.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/149.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/15.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/150.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/151.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/152.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/153.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/154.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/156.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/157.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/158.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/159.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/16.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 1, 3, 3), dtype=float32, numpy=
array([[[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 1, 3, 3), dtype=float32, numpy=
array([[[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 1, 3, 3), dtype=float32, numpy=
array([[[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 1, 3, 3), dtype=float32, numpy=
array([[[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/160.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float16, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float16)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/161.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/162.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/163.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/164.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/165.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/166.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/167.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/168.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/169.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/17.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/170.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/171.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]],


       [[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/172.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/173.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/175.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/176.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/177.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/178.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/179.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/18.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/180.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/181.py
{'res_cpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(1, 1, 3, 3), dtype=float32, numpy=
array([[[[nan, nan, nan],
         [nan, nan, nan],
         [nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/182.py
{'res_cpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>), 'res_gpu': (<tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>, <tf.Tensor: shape=(2, 1, 1, 3), dtype=float32, numpy=
array([[[[nan, nan, nan]]],


       [[[nan, nan, nan]]]], dtype=float32)>)}
Processing file: /media/nimashiri/SSD/testing_results/FreeFuzz/tf/2.9.0/cuda-oracle/potential-bug/tf.nn.weighted_moments/183.py
